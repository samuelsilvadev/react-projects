// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CounterContainer /> should render correctly with props 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CounterContainer />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <button
          className="btn btn-primary btn-sm"
          onClick={[Function]}
        >
          Reset
        </button>,
        Array [
          <Counter
            id={1}
            onDelete={[Function]}
            onIncrement={[Function]}
            value={2}
          />,
          <Counter
            id={2}
            onDelete={[Function]}
            onIncrement={[Function]}
            value={0}
          />,
          <Counter
            id={3}
            onDelete={[Function]}
            onIncrement={[Function]}
            value={0}
          />,
        ],
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Reset",
          "className": "btn btn-primary btn-sm",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Reset",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": "1",
        "nodeType": "class",
        "props": Object {
          "id": 1,
          "onDelete": [Function],
          "onIncrement": [Function],
          "value": 2,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "2",
        "nodeType": "class",
        "props": Object {
          "id": 2,
          "onDelete": [Function],
          "onIncrement": [Function],
          "value": 0,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "3",
        "nodeType": "class",
        "props": Object {
          "id": 3,
          "onDelete": [Function],
          "onIncrement": [Function],
          "value": 0,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <button
            className="btn btn-primary btn-sm"
            onClick={[Function]}
          >
            Reset
          </button>,
          Array [
            <Counter
              id={1}
              onDelete={[Function]}
              onIncrement={[Function]}
              value={2}
            />,
            <Counter
              id={2}
              onDelete={[Function]}
              onIncrement={[Function]}
              value={0}
            />,
            <Counter
              id={3}
              onDelete={[Function]}
              onIncrement={[Function]}
              value={0}
            />,
          ],
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Reset",
            "className": "btn btn-primary btn-sm",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Reset",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "class",
          "props": Object {
            "id": 1,
            "onDelete": [Function],
            "onIncrement": [Function],
            "value": 2,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "2",
          "nodeType": "class",
          "props": Object {
            "id": 2,
            "onDelete": [Function],
            "onIncrement": [Function],
            "value": 0,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "3",
          "nodeType": "class",
          "props": Object {
            "id": 3,
            "onDelete": [Function],
            "onIncrement": [Function],
            "value": 0,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`<CounterContainer /> should render correctly without props 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CounterContainer />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <button
          className="btn btn-primary btn-sm"
          onClick={[Function]}
        >
          Reset
        </button>,
        Array [
          <Counter
            id={1}
            onDelete={[Function]}
            onIncrement={[Function]}
            value={2}
          />,
          <Counter
            id={2}
            onDelete={[Function]}
            onIncrement={[Function]}
            value={0}
          />,
          <Counter
            id={3}
            onDelete={[Function]}
            onIncrement={[Function]}
            value={0}
          />,
        ],
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Reset",
          "className": "btn btn-primary btn-sm",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Reset",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": "1",
        "nodeType": "class",
        "props": Object {
          "id": 1,
          "onDelete": [Function],
          "onIncrement": [Function],
          "value": 2,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "2",
        "nodeType": "class",
        "props": Object {
          "id": 2,
          "onDelete": [Function],
          "onIncrement": [Function],
          "value": 0,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "3",
        "nodeType": "class",
        "props": Object {
          "id": 3,
          "onDelete": [Function],
          "onIncrement": [Function],
          "value": 0,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <button
            className="btn btn-primary btn-sm"
            onClick={[Function]}
          >
            Reset
          </button>,
          Array [
            <Counter
              id={1}
              onDelete={[Function]}
              onIncrement={[Function]}
              value={2}
            />,
            <Counter
              id={2}
              onDelete={[Function]}
              onIncrement={[Function]}
              value={0}
            />,
            <Counter
              id={3}
              onDelete={[Function]}
              onIncrement={[Function]}
              value={0}
            />,
          ],
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Reset",
            "className": "btn btn-primary btn-sm",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Reset",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "class",
          "props": Object {
            "id": 1,
            "onDelete": [Function],
            "onIncrement": [Function],
            "value": 2,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "2",
          "nodeType": "class",
          "props": Object {
            "id": 2,
            "onDelete": [Function],
            "onIncrement": [Function],
            "value": 0,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "3",
          "nodeType": "class",
          "props": Object {
            "id": 3,
            "onDelete": [Function],
            "onIncrement": [Function],
            "value": 0,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
