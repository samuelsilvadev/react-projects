// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<App /> should mount App 1`] = `
ReactWrapper {
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": App {
      "_handleOnChangeDeadline": [Function],
      "_reactInternalFiber": FiberNode {
        "_debugID": 5,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugID": 4,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": 0,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": FiberNode {
            "_debugID": 8,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
              "lineNumber": 27,
            },
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 13,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                "lineNumber": 29,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 14,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                  "lineNumber": 30,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "0 day",
                  "className": "Clock__days",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "0 day",
                  "className": "Clock__days",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 15,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                    "lineNumber": 31,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "0 hour",
                    "className": "Clock__hours",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "0 hour",
                    "className": "Clock__hours",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 16,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                      "lineNumber": 32,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 2,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "0 minute",
                      "className": "Clock__minutes",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "0 minute",
                      "className": "Clock__minutes",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 17,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                        "lineNumber": 33,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 3,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "0 second",
                        "className": "Clock__seconds",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "0 second",
                        "className": "Clock__seconds",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="Clock__seconds"
>
                        0 second
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <div
                      class="Clock__minutes"
>
                      0 minute
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <div
                    class="Clock__hours"
>
                    0 hour
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": <div
                  class="Clock__days"
>
                  0 day
</div>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "div",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <div
                    className="Clock__days"
>
                    0 day
</div>,
                  <div
                    className="Clock__hours"
>
                    0 hour
</div>,
                  <div
                    className="Clock__minutes"
>
                    0 minute
</div>,
                  <div
                    className="Clock__seconds"
>
                    0 second
</div>,
                ],
                "className": "Clock",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <div
                    className="Clock__days"
>
                    0 day
</div>,
                  <div
                    className="Clock__hours"
>
                    0 hour
</div>,
                  <div
                    className="Clock__minutes"
>
                    0 minute
</div>,
                  <div
                    className="Clock__seconds"
>
                    0 second
</div>,
                ],
                "className": "Clock",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": <section
                class="Clock"
>
                <div
                                class="Clock__days"
                >
                                0 day
                </div>
                <div
                                class="Clock__hours"
                >
                                0 hour
                </div>
                <div
                                class="Clock__minutes"
                >
                                0 minute
                </div>
                <div
                                class="Clock__seconds"
                >
                                0 second
                </div>
</section>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "section",
              "updateQueue": null,
            },
            "effectTag": 5,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 1,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "deadline": "February 25, 2018",
            },
            "memoizedState": Object {
              "days": 0,
              "deadline": "",
              "hours": 0,
              "minutes": 0,
              "seconds": 0,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "deadline": "February 25, 2018",
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                "lineNumber": 20,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 7,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 21,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 10,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 22,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Countdown for",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Countdown for",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 11,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 23,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 12,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 24,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "February 25, 2018",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "February 25, 2018",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <p>
                        February 25, 2018
</p>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "p",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <p>
                        February 25, 2018
</p>,
                      "className": "App__event",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <p>
                        February 25, 2018
</p>,
                      "className": "App__event",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="App__event"
>
                      <p>
                                            February 25, 2018
                      </p>
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <h1>
                    Countdown for
</h1>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "h1",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <h1>
                      Countdown for
</h1>,
                    <div
                      className="App__event"
>
                      <p>
                                            February 25, 2018
                      </p>
</div>,
                  ],
                  "className": "App__header",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <h1>
                      Countdown for
</h1>,
                    <div
                      className="App__event"
>
                      <p>
                                            February 25, 2018
                      </p>
</div>,
                  ],
                  "className": "App__header",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": [Circular],
                "stateNode": <header
                  class="App__header"
>
                  <h1>
                                    Countdown for
                  </h1>
                  <div
                                    class="App__event"
                  >
                                    <p>
                                                      February 25, 2018
                                    </p>
                  </div>
</header>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "header",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": Array [
                  <header
                    className="App__header"
>
                    <h1>
                                        Countdown for
                    </h1>
                    <div
                                        className="App__event"
                    >
                                        <p>
                                                            February 25, 2018
                                        </p>
                    </div>
</header>,
                  <Clock
                    deadline="February 25, 2018"
/>,
                  <section
                    className="Add-Event"
>
                    <form
                                        className="Add-Event__form"
                    >
                                        <input
                                                            onChange={[Function]}
                                                            type="text"
                                        />
                                        <button
                                                            onClick={[Function]}
                                        >
                                                            Send
                                        </button>
                    </form>
</section>,
                ],
                "className": "App",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <header
                    className="App__header"
>
                    <h1>
                                        Countdown for
                    </h1>
                    <div
                                        className="App__event"
                    >
                                        <p>
                                                            February 25, 2018
                                        </p>
                    </div>
</header>,
                  <Clock
                    deadline="February 25, 2018"
/>,
                  <section
                    className="Add-Event"
>
                    <form
                                        className="Add-Event__form"
                    >
                                        <input
                                                            onChange={[Function]}
                                                            type="text"
                                        />
                                        <button
                                                            onClick={[Function]}
                                        >
                                                            Send
                                        </button>
                    </form>
</section>,
                ],
                "className": "App",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": <div
                class="App"
>
                <header
                                class="App__header"
                >
                                <h1>
                                                Countdown for
                                </h1>
                                <div
                                                class="App__event"
                                >
                                                <p>
                                                                February 25, 2018
                                                </p>
                                </div>
                </header>
                <section
                                class="Clock"
                >
                                <div
                                                class="Clock__days"
                                >
                                                0 day
                                </div>
                                <div
                                                class="Clock__hours"
                                >
                                                0 hour
                                </div>
                                <div
                                                class="Clock__minutes"
                                >
                                                0 minute
                                </div>
                                <div
                                                class="Clock__seconds"
                                >
                                                0 second
                                </div>
                </section>
                <section
                                class="Add-Event"
                >
                                <form
                                                class="Add-Event__form"
                                >
                                                <input
                                                                type="text"
                                                />
                                                <button>
                                                                Send
                                                </button>
                                </form>
                </section>
</div>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "div",
              "updateQueue": null,
            },
            "selfBaseTime": 0,
            "sibling": FiberNode {
              "_debugID": 9,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                "lineNumber": 28,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 18,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 29,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 19,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 30,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "onChange": [Function],
                    "type": "text",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "onChange": [Function],
                    "type": "text",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 20,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 31,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Send",
                      "onClick": [Function],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Send",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <button>
                      Send
</button>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "button",
                    "updateQueue": null,
                  },
                  "stateNode": <input
                    type="text"
/>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "input",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <input
                      onChange={[Function]}
                      type="text"
/>,
                    <button
                      onClick={[Function]}
>
                      Send
</button>,
                  ],
                  "className": "Add-Event__form",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <input
                      onChange={[Function]}
                      type="text"
/>,
                    <button
                      onClick={[Function]}
>
                      Send
</button>,
                  ],
                  "className": "Add-Event__form",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <form
                  class="Add-Event__form"
>
                  <input
                                    type="text"
                  />
                  <button>
                                    Send
                  </button>
</form>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "form",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 2,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <form
                  className="Add-Event__form"
>
                  <input
                                    onChange={[Function]}
                                    type="text"
                  />
                  <button
                                    onClick={[Function]}
                  >
                                    Send
                  </button>
</form>,
                "className": "Add-Event",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <form
                  className="Add-Event__form"
>
                  <input
                                    onChange={[Function]}
                                    type="text"
                  />
                  <button
                                    onClick={[Function]}
                  >
                                    Send
                  </button>
</form>,
                "className": "Add-Event",
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 6,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 20,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 21,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 22,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Countdown for",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Countdown for",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 11,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 23,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 12,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                          "lineNumber": 24,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "February 25, 2018",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "February 25, 2018",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <p>
                          February 25, 2018
</p>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "p",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <p>
                          February 25, 2018
</p>,
                        "className": "App__event",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <p>
                          February 25, 2018
</p>,
                        "className": "App__event",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="App__event"
>
                        <p>
                                                February 25, 2018
                        </p>
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <h1>
                      Countdown for
</h1>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "h1",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <h1>
                        Countdown for
</h1>,
                      <div
                        className="App__event"
>
                        <p>
                                                February 25, 2018
                        </p>
</div>,
                    ],
                    "className": "App__header",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <h1>
                        Countdown for
</h1>,
                      <div
                        className="App__event"
>
                        <p>
                                                February 25, 2018
                        </p>
</div>,
                    ],
                    "className": "App__header",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": [Circular],
                  "stateNode": <header
                    class="App__header"
>
                    <h1>
                                        Countdown for
                    </h1>
                    <div
                                        class="App__event"
                    >
                                        <p>
                                                            February 25, 2018
                                        </p>
                    </div>
</header>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "header",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": Array [
                    <header
                      className="App__header"
>
                      <h1>
                                            Countdown for
                      </h1>
                      <div
                                            className="App__event"
                      >
                                            <p>
                                                                  February 25, 2018
                                            </p>
                      </div>
</header>,
                    <Clock
                      deadline="February 25, 2018"
/>,
                    <section
                      className="Add-Event"
>
                      <form
                                            className="Add-Event__form"
                      >
                                            <input
                                                                  onChange={[Function]}
                                                                  type="text"
                                            />
                                            <button
                                                                  onClick={[Function]}
                                            >
                                                                  Send
                                            </button>
                      </form>
</section>,
                  ],
                  "className": "App",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <header
                      className="App__header"
>
                      <h1>
                                            Countdown for
                      </h1>
                      <div
                                            className="App__event"
                      >
                                            <p>
                                                                  February 25, 2018
                                            </p>
                      </div>
</header>,
                    <Clock
                      deadline="February 25, 2018"
/>,
                    <section
                      className="Add-Event"
>
                      <form
                                            className="Add-Event__form"
                      >
                                            <input
                                                                  onChange={[Function]}
                                                                  type="text"
                                            />
                                            <button
                                                                  onClick={[Function]}
                                            >
                                                                  Send
                                            </button>
                      </form>
</section>,
                  ],
                  "className": "App",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <div
                  class="App"
>
                  <header
                                    class="App__header"
                  >
                                    <h1>
                                                      Countdown for
                                    </h1>
                                    <div
                                                      class="App__event"
                                    >
                                                      <p>
                                                                        February 25, 2018
                                                      </p>
                                    </div>
                  </header>
                  <section
                                    class="Clock"
                  >
                                    <div
                                                      class="Clock__days"
                                    >
                                                      0 day
                                    </div>
                                    <div
                                                      class="Clock__hours"
                                    >
                                                      0 hour
                                    </div>
                                    <div
                                                      class="Clock__minutes"
                                    >
                                                      0 minute
                                    </div>
                                    <div
                                                      class="Clock__seconds"
                                    >
                                                      0 second
                                    </div>
                  </section>
                  <section
                                    class="Add-Event"
                  >
                                    <form
                                                      class="Add-Event__form"
                                    >
                                                      <input
                                                                        type="text"
                                                      />
                                                      <button>
                                                                        Send
                                                      </button>
                                    </form>
                  </section>
</div>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "div",
                "updateQueue": null,
              },
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": <section
                class="Add-Event"
>
                <form
                                class="Add-Event__form"
                >
                                <input
                                                type="text"
                                />
                                <button>
                                                Send
                                </button>
                </form>
</section>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "section",
              "updateQueue": null,
            },
            "stateNode": Clock {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "intervalId": 2,
              "props": Object {
                "deadline": "February 25, 2018",
              },
              "refs": Object {},
              "state": Object {
                "days": 0,
                "deadline": "",
                "hours": 0,
                "minutes": 0,
                "seconds": 0,
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseTime": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "index": 0,
          "key": null,
          "lastEffect": FiberNode {
            "_debugID": 8,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
              "lineNumber": 27,
            },
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 13,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                "lineNumber": 29,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 14,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                  "lineNumber": 30,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "0 day",
                  "className": "Clock__days",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "0 day",
                  "className": "Clock__days",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 15,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                    "lineNumber": 31,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "0 hour",
                    "className": "Clock__hours",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "0 hour",
                    "className": "Clock__hours",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 16,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                      "lineNumber": 32,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 2,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "0 minute",
                      "className": "Clock__minutes",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "0 minute",
                      "className": "Clock__minutes",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 17,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                        "lineNumber": 33,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 3,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "0 second",
                        "className": "Clock__seconds",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "0 second",
                        "className": "Clock__seconds",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="Clock__seconds"
>
                        0 second
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <div
                      class="Clock__minutes"
>
                      0 minute
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <div
                    class="Clock__hours"
>
                    0 hour
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": <div
                  class="Clock__days"
>
                  0 day
</div>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "div",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <div
                    className="Clock__days"
>
                    0 day
</div>,
                  <div
                    className="Clock__hours"
>
                    0 hour
</div>,
                  <div
                    className="Clock__minutes"
>
                    0 minute
</div>,
                  <div
                    className="Clock__seconds"
>
                    0 second
</div>,
                ],
                "className": "Clock",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <div
                    className="Clock__days"
>
                    0 day
</div>,
                  <div
                    className="Clock__hours"
>
                    0 hour
</div>,
                  <div
                    className="Clock__minutes"
>
                    0 minute
</div>,
                  <div
                    className="Clock__seconds"
>
                    0 second
</div>,
                ],
                "className": "Clock",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": <section
                class="Clock"
>
                <div
                                class="Clock__days"
                >
                                0 day
                </div>
                <div
                                class="Clock__hours"
                >
                                0 hour
                </div>
                <div
                                class="Clock__minutes"
                >
                                0 minute
                </div>
                <div
                                class="Clock__seconds"
                >
                                0 second
                </div>
</section>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "section",
              "updateQueue": null,
            },
            "effectTag": 5,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 1,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "deadline": "February 25, 2018",
            },
            "memoizedState": Object {
              "days": 0,
              "deadline": "",
              "hours": 0,
              "minutes": 0,
              "seconds": 0,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "deadline": "February 25, 2018",
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                "lineNumber": 20,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 7,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 21,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 10,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 22,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Countdown for",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Countdown for",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 11,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 23,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 12,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 24,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "February 25, 2018",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "February 25, 2018",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <p>
                        February 25, 2018
</p>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "p",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <p>
                        February 25, 2018
</p>,
                      "className": "App__event",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <p>
                        February 25, 2018
</p>,
                      "className": "App__event",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="App__event"
>
                      <p>
                                            February 25, 2018
                      </p>
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <h1>
                    Countdown for
</h1>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "h1",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <h1>
                      Countdown for
</h1>,
                    <div
                      className="App__event"
>
                      <p>
                                            February 25, 2018
                      </p>
</div>,
                  ],
                  "className": "App__header",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <h1>
                      Countdown for
</h1>,
                    <div
                      className="App__event"
>
                      <p>
                                            February 25, 2018
                      </p>
</div>,
                  ],
                  "className": "App__header",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": [Circular],
                "stateNode": <header
                  class="App__header"
>
                  <h1>
                                    Countdown for
                  </h1>
                  <div
                                    class="App__event"
                  >
                                    <p>
                                                      February 25, 2018
                                    </p>
                  </div>
</header>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "header",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": Array [
                  <header
                    className="App__header"
>
                    <h1>
                                        Countdown for
                    </h1>
                    <div
                                        className="App__event"
                    >
                                        <p>
                                                            February 25, 2018
                                        </p>
                    </div>
</header>,
                  <Clock
                    deadline="February 25, 2018"
/>,
                  <section
                    className="Add-Event"
>
                    <form
                                        className="Add-Event__form"
                    >
                                        <input
                                                            onChange={[Function]}
                                                            type="text"
                                        />
                                        <button
                                                            onClick={[Function]}
                                        >
                                                            Send
                                        </button>
                    </form>
</section>,
                ],
                "className": "App",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <header
                    className="App__header"
>
                    <h1>
                                        Countdown for
                    </h1>
                    <div
                                        className="App__event"
                    >
                                        <p>
                                                            February 25, 2018
                                        </p>
                    </div>
</header>,
                  <Clock
                    deadline="February 25, 2018"
/>,
                  <section
                    className="Add-Event"
>
                    <form
                                        className="Add-Event__form"
                    >
                                        <input
                                                            onChange={[Function]}
                                                            type="text"
                                        />
                                        <button
                                                            onClick={[Function]}
                                        >
                                                            Send
                                        </button>
                    </form>
</section>,
                ],
                "className": "App",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": <div
                class="App"
>
                <header
                                class="App__header"
                >
                                <h1>
                                                Countdown for
                                </h1>
                                <div
                                                class="App__event"
                                >
                                                <p>
                                                                February 25, 2018
                                                </p>
                                </div>
                </header>
                <section
                                class="Clock"
                >
                                <div
                                                class="Clock__days"
                                >
                                                0 day
                                </div>
                                <div
                                                class="Clock__hours"
                                >
                                                0 hour
                                </div>
                                <div
                                                class="Clock__minutes"
                                >
                                                0 minute
                                </div>
                                <div
                                                class="Clock__seconds"
                                >
                                                0 second
                                </div>
                </section>
                <section
                                class="Add-Event"
                >
                                <form
                                                class="Add-Event__form"
                                >
                                                <input
                                                                type="text"
                                                />
                                                <button>
                                                                Send
                                                </button>
                                </form>
                </section>
</div>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "div",
              "updateQueue": null,
            },
            "selfBaseTime": 0,
            "sibling": FiberNode {
              "_debugID": 9,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                "lineNumber": 28,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 18,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 29,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 19,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 30,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "onChange": [Function],
                    "type": "text",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "onChange": [Function],
                    "type": "text",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 20,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 31,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Send",
                      "onClick": [Function],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Send",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <button>
                      Send
</button>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "button",
                    "updateQueue": null,
                  },
                  "stateNode": <input
                    type="text"
/>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "input",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <input
                      onChange={[Function]}
                      type="text"
/>,
                    <button
                      onClick={[Function]}
>
                      Send
</button>,
                  ],
                  "className": "Add-Event__form",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <input
                      onChange={[Function]}
                      type="text"
/>,
                    <button
                      onClick={[Function]}
>
                      Send
</button>,
                  ],
                  "className": "Add-Event__form",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <form
                  class="Add-Event__form"
>
                  <input
                                    type="text"
                  />
                  <button>
                                    Send
                  </button>
</form>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "form",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 2,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <form
                  className="Add-Event__form"
>
                  <input
                                    onChange={[Function]}
                                    type="text"
                  />
                  <button
                                    onClick={[Function]}
                  >
                                    Send
                  </button>
</form>,
                "className": "Add-Event",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <form
                  className="Add-Event__form"
>
                  <input
                                    onChange={[Function]}
                                    type="text"
                  />
                  <button
                                    onClick={[Function]}
                  >
                                    Send
                  </button>
</form>,
                "className": "Add-Event",
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 6,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 20,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 21,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 22,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Countdown for",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Countdown for",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 11,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 23,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 12,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                          "lineNumber": 24,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "February 25, 2018",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "February 25, 2018",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <p>
                          February 25, 2018
</p>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "p",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <p>
                          February 25, 2018
</p>,
                        "className": "App__event",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <p>
                          February 25, 2018
</p>,
                        "className": "App__event",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="App__event"
>
                        <p>
                                                February 25, 2018
                        </p>
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <h1>
                      Countdown for
</h1>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "h1",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <h1>
                        Countdown for
</h1>,
                      <div
                        className="App__event"
>
                        <p>
                                                February 25, 2018
                        </p>
</div>,
                    ],
                    "className": "App__header",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <h1>
                        Countdown for
</h1>,
                      <div
                        className="App__event"
>
                        <p>
                                                February 25, 2018
                        </p>
</div>,
                    ],
                    "className": "App__header",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": [Circular],
                  "stateNode": <header
                    class="App__header"
>
                    <h1>
                                        Countdown for
                    </h1>
                    <div
                                        class="App__event"
                    >
                                        <p>
                                                            February 25, 2018
                                        </p>
                    </div>
</header>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "header",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": Array [
                    <header
                      className="App__header"
>
                      <h1>
                                            Countdown for
                      </h1>
                      <div
                                            className="App__event"
                      >
                                            <p>
                                                                  February 25, 2018
                                            </p>
                      </div>
</header>,
                    <Clock
                      deadline="February 25, 2018"
/>,
                    <section
                      className="Add-Event"
>
                      <form
                                            className="Add-Event__form"
                      >
                                            <input
                                                                  onChange={[Function]}
                                                                  type="text"
                                            />
                                            <button
                                                                  onClick={[Function]}
                                            >
                                                                  Send
                                            </button>
                      </form>
</section>,
                  ],
                  "className": "App",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <header
                      className="App__header"
>
                      <h1>
                                            Countdown for
                      </h1>
                      <div
                                            className="App__event"
                      >
                                            <p>
                                                                  February 25, 2018
                                            </p>
                      </div>
</header>,
                    <Clock
                      deadline="February 25, 2018"
/>,
                    <section
                      className="Add-Event"
>
                      <form
                                            className="Add-Event__form"
                      >
                                            <input
                                                                  onChange={[Function]}
                                                                  type="text"
                                            />
                                            <button
                                                                  onClick={[Function]}
                                            >
                                                                  Send
                                            </button>
                      </form>
</section>,
                  ],
                  "className": "App",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <div
                  class="App"
>
                  <header
                                    class="App__header"
                  >
                                    <h1>
                                                      Countdown for
                                    </h1>
                                    <div
                                                      class="App__event"
                                    >
                                                      <p>
                                                                        February 25, 2018
                                                      </p>
                                    </div>
                  </header>
                  <section
                                    class="Clock"
                  >
                                    <div
                                                      class="Clock__days"
                                    >
                                                      0 day
                                    </div>
                                    <div
                                                      class="Clock__hours"
                                    >
                                                      0 hour
                                    </div>
                                    <div
                                                      class="Clock__minutes"
                                    >
                                                      0 minute
                                    </div>
                                    <div
                                                      class="Clock__seconds"
                                    >
                                                      0 second
                                    </div>
                  </section>
                  <section
                                    class="Add-Event"
                  >
                                    <form
                                                      class="Add-Event__form"
                                    >
                                                      <input
                                                                        type="text"
                                                      />
                                                      <button>
                                                                        Send
                                                      </button>
                                    </form>
                  </section>
</div>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "div",
                "updateQueue": null,
              },
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": <section
                class="Add-Event"
>
                <form
                                class="Add-Event__form"
                >
                                <input
                                                type="text"
                                />
                                <button>
                                                Send
                                </button>
                </form>
</section>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "section",
              "updateQueue": null,
            },
            "stateNode": Clock {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "intervalId": 2,
              "props": Object {
                "deadline": "February 25, 2018",
              },
              "refs": Object {},
              "state": Object {
                "days": 0,
                "deadline": "",
                "hours": 0,
                "minutes": 0,
                "seconds": 0,
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseTime": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {},
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 1,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 1,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                                    class="App"
                  >
                                    <header
                                                      class="App__header"
                                    >
                                                      <h1>
                                                                        Countdown for
                                                      </h1>
                                                      <div
                                                                        class="App__event"
                                                      >
                                                                        <p>
                                                                                          February 25, 2018
                                                                        </p>
                                                      </div>
                                    </header>
                                    <section
                                                      class="Clock"
                                    >
                                                      <div
                                                                        class="Clock__days"
                                                      >
                                                                        0 day
                                                      </div>
                                                      <div
                                                                        class="Clock__hours"
                                                      >
                                                                        0 hour
                                                      </div>
                                                      <div
                                                                        class="Clock__minutes"
                                                      >
                                                                        0 minute
                                                      </div>
                                                      <div
                                                                        class="Clock__seconds"
                                                      >
                                                                        0 second
                                                      </div>
                                    </section>
                                    <section
                                                      class="Add-Event"
                                    >
                                                      <form
                                                                        class="Add-Event__form"
                                                      >
                                                                        <input
                                                                                          type="text"
                                                                        />
                                                                        <button>
                                                                                          Send
                                                                        </button>
                                                      </form>
                                    </section>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "expirationTime": 1,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
/>,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
/>,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "effectTag": 32,
            "expirationTime": 0,
            "firstEffect": FiberNode {
              "_debugID": 8,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                "lineNumber": 27,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 13,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                  "lineNumber": 29,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 14,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                    "lineNumber": 30,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "0 day",
                    "className": "Clock__days",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "0 day",
                    "className": "Clock__days",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 15,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                      "lineNumber": 31,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "0 hour",
                      "className": "Clock__hours",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "0 hour",
                      "className": "Clock__hours",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 16,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                        "lineNumber": 32,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 2,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "0 minute",
                        "className": "Clock__minutes",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "0 minute",
                        "className": "Clock__minutes",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": FiberNode {
                        "_debugID": 17,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                          "lineNumber": 33,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 3,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "0 second",
                          "className": "Clock__seconds",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "0 second",
                          "className": "Clock__seconds",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="Clock__seconds"
>
                          0 second
</div>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <div
                        class="Clock__minutes"
>
                        0 minute
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <div
                      class="Clock__hours"
>
                      0 hour
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <div
                    class="Clock__days"
>
                    0 day
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <div
                      className="Clock__days"
>
                      0 day
</div>,
                    <div
                      className="Clock__hours"
>
                      0 hour
</div>,
                    <div
                      className="Clock__minutes"
>
                      0 minute
</div>,
                    <div
                      className="Clock__seconds"
>
                      0 second
</div>,
                  ],
                  "className": "Clock",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <div
                      className="Clock__days"
>
                      0 day
</div>,
                    <div
                      className="Clock__hours"
>
                      0 hour
</div>,
                    <div
                      className="Clock__minutes"
>
                      0 minute
</div>,
                    <div
                      className="Clock__seconds"
>
                      0 second
</div>,
                  ],
                  "className": "Clock",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <section
                  class="Clock"
>
                  <div
                                    class="Clock__days"
                  >
                                    0 day
                  </div>
                  <div
                                    class="Clock__hours"
                  >
                                    0 hour
                  </div>
                  <div
                                    class="Clock__minutes"
                  >
                                    0 minute
                  </div>
                  <div
                                    class="Clock__seconds"
                  >
                                    0 second
                  </div>
</section>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "section",
                "updateQueue": null,
              },
              "effectTag": 5,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 1,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "deadline": "February 25, 2018",
              },
              "memoizedState": Object {
                "days": 0,
                "deadline": "",
                "hours": 0,
                "minutes": 0,
                "seconds": 0,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "deadline": "February 25, 2018",
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 6,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 20,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 21,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 22,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Countdown for",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Countdown for",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 11,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 23,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 12,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                          "lineNumber": 24,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "February 25, 2018",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "February 25, 2018",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <p>
                          February 25, 2018
</p>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "p",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <p>
                          February 25, 2018
</p>,
                        "className": "App__event",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <p>
                          February 25, 2018
</p>,
                        "className": "App__event",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="App__event"
>
                        <p>
                                                February 25, 2018
                        </p>
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <h1>
                      Countdown for
</h1>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "h1",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <h1>
                        Countdown for
</h1>,
                      <div
                        className="App__event"
>
                        <p>
                                                February 25, 2018
                        </p>
</div>,
                    ],
                    "className": "App__header",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <h1>
                        Countdown for
</h1>,
                      <div
                        className="App__event"
>
                        <p>
                                                February 25, 2018
                        </p>
</div>,
                    ],
                    "className": "App__header",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": [Circular],
                  "stateNode": <header
                    class="App__header"
>
                    <h1>
                                        Countdown for
                    </h1>
                    <div
                                        class="App__event"
                    >
                                        <p>
                                                            February 25, 2018
                                        </p>
                    </div>
</header>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "header",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": Array [
                    <header
                      className="App__header"
>
                      <h1>
                                            Countdown for
                      </h1>
                      <div
                                            className="App__event"
                      >
                                            <p>
                                                                  February 25, 2018
                                            </p>
                      </div>
</header>,
                    <Clock
                      deadline="February 25, 2018"
/>,
                    <section
                      className="Add-Event"
>
                      <form
                                            className="Add-Event__form"
                      >
                                            <input
                                                                  onChange={[Function]}
                                                                  type="text"
                                            />
                                            <button
                                                                  onClick={[Function]}
                                            >
                                                                  Send
                                            </button>
                      </form>
</section>,
                  ],
                  "className": "App",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <header
                      className="App__header"
>
                      <h1>
                                            Countdown for
                      </h1>
                      <div
                                            className="App__event"
                      >
                                            <p>
                                                                  February 25, 2018
                                            </p>
                      </div>
</header>,
                    <Clock
                      deadline="February 25, 2018"
/>,
                    <section
                      className="Add-Event"
>
                      <form
                                            className="Add-Event__form"
                      >
                                            <input
                                                                  onChange={[Function]}
                                                                  type="text"
                                            />
                                            <button
                                                                  onClick={[Function]}
                                            >
                                                                  Send
                                            </button>
                      </form>
</section>,
                  ],
                  "className": "App",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <div
                  class="App"
>
                  <header
                                    class="App__header"
                  >
                                    <h1>
                                                      Countdown for
                                    </h1>
                                    <div
                                                      class="App__event"
                                    >
                                                      <p>
                                                                        February 25, 2018
                                                      </p>
                                    </div>
                  </header>
                  <section
                                    class="Clock"
                  >
                                    <div
                                                      class="Clock__days"
                                    >
                                                      0 day
                                    </div>
                                    <div
                                                      class="Clock__hours"
                                    >
                                                      0 hour
                                    </div>
                                    <div
                                                      class="Clock__minutes"
                                    >
                                                      0 minute
                                    </div>
                                    <div
                                                      class="Clock__seconds"
                                    >
                                                      0 second
                                    </div>
                  </section>
                  <section
                                    class="Add-Event"
                  >
                                    <form
                                                      class="Add-Event__form"
                                    >
                                                      <input
                                                                        type="text"
                                                      />
                                                      <button>
                                                                        Send
                                                      </button>
                                    </form>
                  </section>
</div>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "div",
                "updateQueue": null,
              },
              "selfBaseTime": 0,
              "sibling": FiberNode {
                "_debugID": 9,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 28,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 18,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 29,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 19,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 30,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "onChange": [Function],
                      "type": "text",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "onChange": [Function],
                      "type": "text",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 20,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 31,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Send",
                        "onClick": [Function],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "Send",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <button>
                        Send
</button>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "button",
                      "updateQueue": null,
                    },
                    "stateNode": <input
                      type="text"
/>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <input
                        onChange={[Function]}
                        type="text"
/>,
                      <button
                        onClick={[Function]}
>
                        Send
</button>,
                    ],
                    "className": "Add-Event__form",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <input
                        onChange={[Function]}
                        type="text"
/>,
                      <button
                        onClick={[Function]}
>
                        Send
</button>,
                    ],
                    "className": "Add-Event__form",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <form
                    class="Add-Event__form"
>
                    <input
                                        type="text"
                    />
                    <button>
                                        Send
                    </button>
</form>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "form",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 2,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <form
                    className="Add-Event__form"
>
                    <input
                                        onChange={[Function]}
                                        type="text"
                    />
                    <button
                                        onClick={[Function]}
                    >
                                        Send
                    </button>
</form>,
                  "className": "Add-Event",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <form
                    className="Add-Event__form"
>
                    <input
                                        onChange={[Function]}
                                        type="text"
                    />
                    <button
                                        onClick={[Function]}
                    >
                                        Send
                    </button>
</form>,
                  "className": "Add-Event",
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 6,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 20,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 7,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 21,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 10,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 22,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Countdown for",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "Countdown for",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": FiberNode {
                        "_debugID": 11,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                          "lineNumber": 23,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 12,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                            "lineNumber": 24,
                          },
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "February 25, 2018",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "February 25, 2018",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": <p>
                            February 25, 2018
</p>,
                          "tag": 5,
                          "treeBaseTime": 0,
                          "type": "p",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <p>
                            February 25, 2018
</p>,
                          "className": "App__event",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <p>
                            February 25, 2018
</p>,
                          "className": "App__event",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="App__event"
>
                          <p>
                                                    February 25, 2018
                          </p>
</div>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <h1>
                        Countdown for
</h1>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "h1",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <h1>
                          Countdown for
</h1>,
                        <div
                          className="App__event"
>
                          <p>
                                                    February 25, 2018
                          </p>
</div>,
                      ],
                      "className": "App__header",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <h1>
                          Countdown for
</h1>,
                        <div
                          className="App__event"
>
                          <p>
                                                    February 25, 2018
                          </p>
</div>,
                      ],
                      "className": "App__header",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": [Circular],
                    "stateNode": <header
                      class="App__header"
>
                      <h1>
                                            Countdown for
                      </h1>
                      <div
                                            class="App__event"
                      >
                                            <p>
                                                                  February 25, 2018
                                            </p>
                      </div>
</header>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "header",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": Array [
                      <header
                        className="App__header"
>
                        <h1>
                                                Countdown for
                        </h1>
                        <div
                                                className="App__event"
                        >
                                                <p>
                                                                        February 25, 2018
                                                </p>
                        </div>
</header>,
                      <Clock
                        deadline="February 25, 2018"
/>,
                      <section
                        className="Add-Event"
>
                        <form
                                                className="Add-Event__form"
                        >
                                                <input
                                                                        onChange={[Function]}
                                                                        type="text"
                                                />
                                                <button
                                                                        onClick={[Function]}
                                                >
                                                                        Send
                                                </button>
                        </form>
</section>,
                    ],
                    "className": "App",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <header
                        className="App__header"
>
                        <h1>
                                                Countdown for
                        </h1>
                        <div
                                                className="App__event"
                        >
                                                <p>
                                                                        February 25, 2018
                                                </p>
                        </div>
</header>,
                      <Clock
                        deadline="February 25, 2018"
/>,
                      <section
                        className="Add-Event"
>
                        <form
                                                className="Add-Event__form"
                        >
                                                <input
                                                                        onChange={[Function]}
                                                                        type="text"
                                                />
                                                <button
                                                                        onClick={[Function]}
                                                >
                                                                        Send
                                                </button>
                        </form>
</section>,
                    ],
                    "className": "App",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="App"
>
                    <header
                                        class="App__header"
                    >
                                        <h1>
                                                            Countdown for
                                        </h1>
                                        <div
                                                            class="App__event"
                                        >
                                                            <p>
                                                                                February 25, 2018
                                                            </p>
                                        </div>
                    </header>
                    <section
                                        class="Clock"
                    >
                                        <div
                                                            class="Clock__days"
                                        >
                                                            0 day
                                        </div>
                                        <div
                                                            class="Clock__hours"
                                        >
                                                            0 hour
                                        </div>
                                        <div
                                                            class="Clock__minutes"
                                        >
                                                            0 minute
                                        </div>
                                        <div
                                                            class="Clock__seconds"
                                        >
                                                            0 second
                                        </div>
                    </section>
                    <section
                                        class="Add-Event"
                    >
                                        <form
                                                            class="Add-Event__form"
                                        >
                                                            <input
                                                                                type="text"
                                                            />
                                                            <button>
                                                                                Send
                                                            </button>
                                        </form>
                    </section>
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <section
                  class="Add-Event"
>
                  <form
                                    class="Add-Event__form"
                  >
                                    <input
                                                      type="text"
                                    />
                                    <button>
                                                      Send
                                    </button>
                  </form>
</section>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "section",
                "updateQueue": null,
              },
              "stateNode": Clock {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "intervalId": 2,
                "props": Object {
                  "deadline": "February 25, 2018",
                },
                "refs": Object {},
                "state": Object {
                  "days": 0,
                  "deadline": "",
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 0,
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseTime": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={Object {}}
/>,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                                class="App"
                >
                                <header
                                                class="App__header"
                                >
                                                <h1>
                                                                Countdown for
                                                </h1>
                                                <div
                                                                class="App__event"
                                                >
                                                                <p>
                                                                                February 25, 2018
                                                                </p>
                                                </div>
                                </header>
                                <section
                                                class="Clock"
                                >
                                                <div
                                                                class="Clock__days"
                                                >
                                                                0 day
                                                </div>
                                                <div
                                                                class="Clock__hours"
                                                >
                                                                0 hour
                                                </div>
                                                <div
                                                                class="Clock__minutes"
                                                >
                                                                0 minute
                                                </div>
                                                <div
                                                                class="Clock__seconds"
                                                >
                                                                0 second
                                                </div>
                                </section>
                                <section
                                                class="Add-Event"
                                >
                                                <form
                                                                class="Add-Event__form"
                                                >
                                                                <input
                                                                                type="text"
                                                                />
                                                                <button>
                                                                                Send
                                                                </button>
                                                </form>
                                </section>
                </div>
</div>,
              "context": Object {},
              "current": [Circular],
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "treeBaseTime": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
/>,
              },
              "expirationTime": 0,
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {},
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": 0,
        "alternate": null,
        "child": FiberNode {
          "_debugID": 6,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": Object {
            "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
            "lineNumber": 20,
          },
          "actualDuration": 0,
          "actualStartTime": 0,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 7,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
              "lineNumber": 21,
            },
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 10,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                "lineNumber": 22,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": null,
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": "Countdown for",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": "Countdown for",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": FiberNode {
                "_debugID": 11,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 23,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 12,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 24,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "February 25, 2018",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "February 25, 2018",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <p>
                    February 25, 2018
</p>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "p",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <p>
                    February 25, 2018
</p>,
                  "className": "App__event",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <p>
                    February 25, 2018
</p>,
                  "className": "App__event",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <div
                  class="App__event"
>
                  <p>
                                    February 25, 2018
                  </p>
</div>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "div",
                "updateQueue": null,
              },
              "stateNode": <h1>
                Countdown for
</h1>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "h1",
              "updateQueue": null,
            },
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <h1>
                  Countdown for
</h1>,
                <div
                  className="App__event"
>
                  <p>
                                    February 25, 2018
                  </p>
</div>,
              ],
              "className": "App__header",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <h1>
                  Countdown for
</h1>,
                <div
                  className="App__event"
>
                  <p>
                                    February 25, 2018
                  </p>
</div>,
              ],
              "className": "App__header",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseTime": 0,
            "sibling": FiberNode {
              "_debugID": 8,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                "lineNumber": 27,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 13,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                  "lineNumber": 29,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 14,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                    "lineNumber": 30,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "0 day",
                    "className": "Clock__days",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "0 day",
                    "className": "Clock__days",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 15,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                      "lineNumber": 31,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "0 hour",
                      "className": "Clock__hours",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "0 hour",
                      "className": "Clock__hours",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 16,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                        "lineNumber": 32,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 2,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "0 minute",
                        "className": "Clock__minutes",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "0 minute",
                        "className": "Clock__minutes",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": FiberNode {
                        "_debugID": 17,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                          "lineNumber": 33,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 3,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "0 second",
                          "className": "Clock__seconds",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "0 second",
                          "className": "Clock__seconds",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="Clock__seconds"
>
                          0 second
</div>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <div
                        class="Clock__minutes"
>
                        0 minute
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <div
                      class="Clock__hours"
>
                      0 hour
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <div
                    class="Clock__days"
>
                    0 day
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <div
                      className="Clock__days"
>
                      0 day
</div>,
                    <div
                      className="Clock__hours"
>
                      0 hour
</div>,
                    <div
                      className="Clock__minutes"
>
                      0 minute
</div>,
                    <div
                      className="Clock__seconds"
>
                      0 second
</div>,
                  ],
                  "className": "Clock",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <div
                      className="Clock__days"
>
                      0 day
</div>,
                    <div
                      className="Clock__hours"
>
                      0 hour
</div>,
                    <div
                      className="Clock__minutes"
>
                      0 minute
</div>,
                    <div
                      className="Clock__seconds"
>
                      0 second
</div>,
                  ],
                  "className": "Clock",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <section
                  class="Clock"
>
                  <div
                                    class="Clock__days"
                  >
                                    0 day
                  </div>
                  <div
                                    class="Clock__hours"
                  >
                                    0 hour
                  </div>
                  <div
                                    class="Clock__minutes"
                  >
                                    0 minute
                  </div>
                  <div
                                    class="Clock__seconds"
                  >
                                    0 second
                  </div>
</section>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "section",
                "updateQueue": null,
              },
              "effectTag": 5,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 1,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "deadline": "February 25, 2018",
              },
              "memoizedState": Object {
                "days": 0,
                "deadline": "",
                "hours": 0,
                "minutes": 0,
                "seconds": 0,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "deadline": "February 25, 2018",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": FiberNode {
                "_debugID": 9,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 28,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 18,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 29,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 19,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 30,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "onChange": [Function],
                      "type": "text",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "onChange": [Function],
                      "type": "text",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 20,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 31,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Send",
                        "onClick": [Function],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "Send",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <button>
                        Send
</button>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "button",
                      "updateQueue": null,
                    },
                    "stateNode": <input
                      type="text"
/>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <input
                        onChange={[Function]}
                        type="text"
/>,
                      <button
                        onClick={[Function]}
>
                        Send
</button>,
                    ],
                    "className": "Add-Event__form",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <input
                        onChange={[Function]}
                        type="text"
/>,
                      <button
                        onClick={[Function]}
>
                        Send
</button>,
                    ],
                    "className": "Add-Event__form",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <form
                    class="Add-Event__form"
>
                    <input
                                        type="text"
                    />
                    <button>
                                        Send
                    </button>
</form>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "form",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 2,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <form
                    className="Add-Event__form"
>
                    <input
                                        onChange={[Function]}
                                        type="text"
                    />
                    <button
                                        onClick={[Function]}
                    >
                                        Send
                    </button>
</form>,
                  "className": "Add-Event",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <form
                    className="Add-Event__form"
>
                    <input
                                        onChange={[Function]}
                                        type="text"
                    />
                    <button
                                        onClick={[Function]}
                    >
                                        Send
                    </button>
</form>,
                  "className": "Add-Event",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <section
                  class="Add-Event"
>
                  <form
                                    class="Add-Event__form"
                  >
                                    <input
                                                      type="text"
                                    />
                                    <button>
                                                      Send
                                    </button>
                  </form>
</section>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "section",
                "updateQueue": null,
              },
              "stateNode": Clock {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "intervalId": 2,
                "props": Object {
                  "deadline": "February 25, 2018",
                },
                "refs": Object {},
                "state": Object {
                  "days": 0,
                  "deadline": "",
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 0,
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseTime": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "stateNode": <header
              class="App__header"
>
              <h1>
                            Countdown for
              </h1>
              <div
                            class="App__event"
              >
                            <p>
                                          February 25, 2018
                            </p>
              </div>
</header>,
            "tag": 5,
            "treeBaseTime": 0,
            "type": "header",
            "updateQueue": null,
          },
          "effectTag": 0,
          "expirationTime": 0,
          "firstEffect": FiberNode {
            "_debugID": 8,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
              "lineNumber": 27,
            },
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 13,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                "lineNumber": 29,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 14,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                  "lineNumber": 30,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "0 day",
                  "className": "Clock__days",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "0 day",
                  "className": "Clock__days",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 15,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                    "lineNumber": 31,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "0 hour",
                    "className": "Clock__hours",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "0 hour",
                    "className": "Clock__hours",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 16,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                      "lineNumber": 32,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 2,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "0 minute",
                      "className": "Clock__minutes",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "0 minute",
                      "className": "Clock__minutes",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 17,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                        "lineNumber": 33,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 3,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "0 second",
                        "className": "Clock__seconds",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "0 second",
                        "className": "Clock__seconds",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="Clock__seconds"
>
                        0 second
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <div
                      class="Clock__minutes"
>
                      0 minute
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <div
                    class="Clock__hours"
>
                    0 hour
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": <div
                  class="Clock__days"
>
                  0 day
</div>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "div",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <div
                    className="Clock__days"
>
                    0 day
</div>,
                  <div
                    className="Clock__hours"
>
                    0 hour
</div>,
                  <div
                    className="Clock__minutes"
>
                    0 minute
</div>,
                  <div
                    className="Clock__seconds"
>
                    0 second
</div>,
                ],
                "className": "Clock",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <div
                    className="Clock__days"
>
                    0 day
</div>,
                  <div
                    className="Clock__hours"
>
                    0 hour
</div>,
                  <div
                    className="Clock__minutes"
>
                    0 minute
</div>,
                  <div
                    className="Clock__seconds"
>
                    0 second
</div>,
                ],
                "className": "Clock",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": <section
                class="Clock"
>
                <div
                                class="Clock__days"
                >
                                0 day
                </div>
                <div
                                class="Clock__hours"
                >
                                0 hour
                </div>
                <div
                                class="Clock__minutes"
                >
                                0 minute
                </div>
                <div
                                class="Clock__seconds"
                >
                                0 second
                </div>
</section>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "section",
              "updateQueue": null,
            },
            "effectTag": 5,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 1,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "deadline": "February 25, 2018",
            },
            "memoizedState": Object {
              "days": 0,
              "deadline": "",
              "hours": 0,
              "minutes": 0,
              "seconds": 0,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "deadline": "February 25, 2018",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseTime": 0,
            "sibling": FiberNode {
              "_debugID": 9,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                "lineNumber": 28,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 18,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 29,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 19,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 30,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "onChange": [Function],
                    "type": "text",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "onChange": [Function],
                    "type": "text",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 20,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 31,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Send",
                      "onClick": [Function],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Send",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <button>
                      Send
</button>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "button",
                    "updateQueue": null,
                  },
                  "stateNode": <input
                    type="text"
/>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "input",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <input
                      onChange={[Function]}
                      type="text"
/>,
                    <button
                      onClick={[Function]}
>
                      Send
</button>,
                  ],
                  "className": "Add-Event__form",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <input
                      onChange={[Function]}
                      type="text"
/>,
                    <button
                      onClick={[Function]}
>
                      Send
</button>,
                  ],
                  "className": "Add-Event__form",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <form
                  class="Add-Event__form"
>
                  <input
                                    type="text"
                  />
                  <button>
                                    Send
                  </button>
</form>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "form",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 2,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <form
                  className="Add-Event__form"
>
                  <input
                                    onChange={[Function]}
                                    type="text"
                  />
                  <button
                                    onClick={[Function]}
                  >
                                    Send
                  </button>
</form>,
                "className": "Add-Event",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <form
                  className="Add-Event__form"
>
                  <input
                                    onChange={[Function]}
                                    type="text"
                  />
                  <button
                                    onClick={[Function]}
                  >
                                    Send
                  </button>
</form>,
                "className": "Add-Event",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": <section
                class="Add-Event"
>
                <form
                                class="Add-Event__form"
                >
                                <input
                                                type="text"
                                />
                                <button>
                                                Send
                                </button>
                </form>
</section>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "section",
              "updateQueue": null,
            },
            "stateNode": Clock {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "intervalId": 2,
              "props": Object {
                "deadline": "February 25, 2018",
              },
              "refs": Object {},
              "state": Object {
                "days": 0,
                "deadline": "",
                "hours": 0,
                "minutes": 0,
                "seconds": 0,
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseTime": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "index": 0,
          "key": null,
          "lastEffect": FiberNode {
            "_debugID": 8,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
              "lineNumber": 27,
            },
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 13,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                "lineNumber": 29,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 14,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                  "lineNumber": 30,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "0 day",
                  "className": "Clock__days",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "0 day",
                  "className": "Clock__days",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 15,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                    "lineNumber": 31,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "0 hour",
                    "className": "Clock__hours",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "0 hour",
                    "className": "Clock__hours",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 16,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                      "lineNumber": 32,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 2,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "0 minute",
                      "className": "Clock__minutes",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "0 minute",
                      "className": "Clock__minutes",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 17,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                        "lineNumber": 33,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 3,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "0 second",
                        "className": "Clock__seconds",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "0 second",
                        "className": "Clock__seconds",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="Clock__seconds"
>
                        0 second
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <div
                      class="Clock__minutes"
>
                      0 minute
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <div
                    class="Clock__hours"
>
                    0 hour
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": <div
                  class="Clock__days"
>
                  0 day
</div>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "div",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <div
                    className="Clock__days"
>
                    0 day
</div>,
                  <div
                    className="Clock__hours"
>
                    0 hour
</div>,
                  <div
                    className="Clock__minutes"
>
                    0 minute
</div>,
                  <div
                    className="Clock__seconds"
>
                    0 second
</div>,
                ],
                "className": "Clock",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <div
                    className="Clock__days"
>
                    0 day
</div>,
                  <div
                    className="Clock__hours"
>
                    0 hour
</div>,
                  <div
                    className="Clock__minutes"
>
                    0 minute
</div>,
                  <div
                    className="Clock__seconds"
>
                    0 second
</div>,
                ],
                "className": "Clock",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": <section
                class="Clock"
>
                <div
                                class="Clock__days"
                >
                                0 day
                </div>
                <div
                                class="Clock__hours"
                >
                                0 hour
                </div>
                <div
                                class="Clock__minutes"
                >
                                0 minute
                </div>
                <div
                                class="Clock__seconds"
                >
                                0 second
                </div>
</section>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "section",
              "updateQueue": null,
            },
            "effectTag": 5,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 1,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "deadline": "February 25, 2018",
            },
            "memoizedState": Object {
              "days": 0,
              "deadline": "",
              "hours": 0,
              "minutes": 0,
              "seconds": 0,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "deadline": "February 25, 2018",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseTime": 0,
            "sibling": FiberNode {
              "_debugID": 9,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                "lineNumber": 28,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 18,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 29,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 19,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 30,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "onChange": [Function],
                    "type": "text",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "onChange": [Function],
                    "type": "text",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 20,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 31,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Send",
                      "onClick": [Function],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Send",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <button>
                      Send
</button>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "button",
                    "updateQueue": null,
                  },
                  "stateNode": <input
                    type="text"
/>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "input",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <input
                      onChange={[Function]}
                      type="text"
/>,
                    <button
                      onClick={[Function]}
>
                      Send
</button>,
                  ],
                  "className": "Add-Event__form",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <input
                      onChange={[Function]}
                      type="text"
/>,
                    <button
                      onClick={[Function]}
>
                      Send
</button>,
                  ],
                  "className": "Add-Event__form",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <form
                  class="Add-Event__form"
>
                  <input
                                    type="text"
                  />
                  <button>
                                    Send
                  </button>
</form>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "form",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 2,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <form
                  className="Add-Event__form"
>
                  <input
                                    onChange={[Function]}
                                    type="text"
                  />
                  <button
                                    onClick={[Function]}
                  >
                                    Send
                  </button>
</form>,
                "className": "Add-Event",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <form
                  className="Add-Event__form"
>
                  <input
                                    onChange={[Function]}
                                    type="text"
                  />
                  <button
                                    onClick={[Function]}
                  >
                                    Send
                  </button>
</form>,
                "className": "Add-Event",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": <section
                class="Add-Event"
>
                <form
                                class="Add-Event__form"
                >
                                <input
                                                type="text"
                                />
                                <button>
                                                Send
                                </button>
                </form>
</section>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "section",
              "updateQueue": null,
            },
            "stateNode": Clock {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "intervalId": 2,
              "props": Object {
                "deadline": "February 25, 2018",
              },
              "refs": Object {},
              "state": Object {
                "days": 0,
                "deadline": "",
                "hours": 0,
                "minutes": 0,
                "seconds": 0,
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseTime": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "memoizedProps": Object {
            "children": Array [
              <header
                className="App__header"
>
                <h1>
                                Countdown for
                </h1>
                <div
                                className="App__event"
                >
                                <p>
                                                February 25, 2018
                                </p>
                </div>
</header>,
              <Clock
                deadline="February 25, 2018"
/>,
              <section
                className="Add-Event"
>
                <form
                                className="Add-Event__form"
                >
                                <input
                                                onChange={[Function]}
                                                type="text"
                                />
                                <button
                                                onClick={[Function]}
                                >
                                                Send
                                </button>
                </form>
</section>,
            ],
            "className": "App",
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": Array [
              <header
                className="App__header"
>
                <h1>
                                Countdown for
                </h1>
                <div
                                className="App__event"
                >
                                <p>
                                                February 25, 2018
                                </p>
                </div>
</header>,
              <Clock
                deadline="February 25, 2018"
/>,
              <section
                className="Add-Event"
>
                <form
                                className="Add-Event__form"
                >
                                <input
                                                onChange={[Function]}
                                                type="text"
                                />
                                <button
                                                onClick={[Function]}
                                >
                                                Send
                                </button>
                </form>
</section>,
            ],
            "className": "App",
          },
          "ref": null,
          "return": [Circular],
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": <div
            class="App"
>
            <header
                        class="App__header"
            >
                        <h1>
                                    Countdown for
                        </h1>
                        <div
                                    class="App__event"
                        >
                                    <p>
                                                February 25, 2018
                                    </p>
                        </div>
            </header>
            <section
                        class="Clock"
            >
                        <div
                                    class="Clock__days"
                        >
                                    0 day
                        </div>
                        <div
                                    class="Clock__hours"
                        >
                                    0 hour
                        </div>
                        <div
                                    class="Clock__minutes"
                        >
                                    0 minute
                        </div>
                        <div
                                    class="Clock__seconds"
                        >
                                    0 second
                        </div>
            </section>
            <section
                        class="Add-Event"
            >
                        <form
                                    class="Add-Event__form"
                        >
                                    <input
                                                type="text"
                                    />
                                    <button>
                                                Send
                                    </button>
                        </form>
            </section>
</div>,
          "tag": 5,
          "treeBaseTime": 0,
          "type": "div",
          "updateQueue": null,
        },
        "effectTag": 1,
        "expirationTime": 0,
        "firstEffect": FiberNode {
          "_debugID": 8,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": Object {
            "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
            "lineNumber": 27,
          },
          "actualDuration": 0,
          "actualStartTime": 0,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 13,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
              "lineNumber": 29,
            },
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 14,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                "lineNumber": 30,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": null,
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": "0 day",
                "className": "Clock__days",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": "0 day",
                "className": "Clock__days",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": FiberNode {
                "_debugID": 15,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                  "lineNumber": 31,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "0 hour",
                  "className": "Clock__hours",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "0 hour",
                  "className": "Clock__hours",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 16,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                    "lineNumber": 32,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 2,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "0 minute",
                    "className": "Clock__minutes",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "0 minute",
                    "className": "Clock__minutes",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 17,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                      "lineNumber": 33,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 3,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "0 second",
                      "className": "Clock__seconds",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "0 second",
                      "className": "Clock__seconds",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="Clock__seconds"
>
                      0 second
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <div
                    class="Clock__minutes"
>
                    0 minute
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": <div
                  class="Clock__hours"
>
                  0 hour
</div>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "div",
                "updateQueue": null,
              },
              "stateNode": <div
                class="Clock__days"
>
                0 day
</div>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "div",
              "updateQueue": null,
            },
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <div
                  className="Clock__days"
>
                  0 day
</div>,
                <div
                  className="Clock__hours"
>
                  0 hour
</div>,
                <div
                  className="Clock__minutes"
>
                  0 minute
</div>,
                <div
                  className="Clock__seconds"
>
                  0 second
</div>,
              ],
              "className": "Clock",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <div
                  className="Clock__days"
>
                  0 day
</div>,
                <div
                  className="Clock__hours"
>
                  0 hour
</div>,
                <div
                  className="Clock__minutes"
>
                  0 minute
</div>,
                <div
                  className="Clock__seconds"
>
                  0 second
</div>,
              ],
              "className": "Clock",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": <section
              class="Clock"
>
              <div
                            class="Clock__days"
              >
                            0 day
              </div>
              <div
                            class="Clock__hours"
              >
                            0 hour
              </div>
              <div
                            class="Clock__minutes"
              >
                            0 minute
              </div>
              <div
                            class="Clock__seconds"
              >
                            0 second
              </div>
</section>,
            "tag": 5,
            "treeBaseTime": 0,
            "type": "section",
            "updateQueue": null,
          },
          "effectTag": 5,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 1,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "deadline": "February 25, 2018",
          },
          "memoizedState": Object {
            "days": 0,
            "deadline": "",
            "hours": 0,
            "minutes": 0,
            "seconds": 0,
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "deadline": "February 25, 2018",
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
              "lineNumber": 20,
            },
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 7,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                "lineNumber": 21,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 10,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 22,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "Countdown for",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "Countdown for",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 11,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 23,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 12,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 24,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "February 25, 2018",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "February 25, 2018",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <p>
                      February 25, 2018
</p>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "p",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <p>
                      February 25, 2018
</p>,
                    "className": "App__event",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <p>
                      February 25, 2018
</p>,
                    "className": "App__event",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="App__event"
>
                    <p>
                                        February 25, 2018
                    </p>
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": <h1>
                  Countdown for
</h1>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "h1",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <h1>
                    Countdown for
</h1>,
                  <div
                    className="App__event"
>
                    <p>
                                        February 25, 2018
                    </p>
</div>,
                ],
                "className": "App__header",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <h1>
                    Countdown for
</h1>,
                  <div
                    className="App__event"
>
                    <p>
                                        February 25, 2018
                    </p>
</div>,
                ],
                "className": "App__header",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": [Circular],
              "stateNode": <header
                class="App__header"
>
                <h1>
                                Countdown for
                </h1>
                <div
                                class="App__event"
                >
                                <p>
                                                February 25, 2018
                                </p>
                </div>
</header>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "header",
              "updateQueue": null,
            },
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "children": Array [
                <header
                  className="App__header"
>
                  <h1>
                                    Countdown for
                  </h1>
                  <div
                                    className="App__event"
                  >
                                    <p>
                                                      February 25, 2018
                                    </p>
                  </div>
</header>,
                <Clock
                  deadline="February 25, 2018"
/>,
                <section
                  className="Add-Event"
>
                  <form
                                    className="Add-Event__form"
                  >
                                    <input
                                                      onChange={[Function]}
                                                      type="text"
                                    />
                                    <button
                                                      onClick={[Function]}
                                    >
                                                      Send
                                    </button>
                  </form>
</section>,
              ],
              "className": "App",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <header
                  className="App__header"
>
                  <h1>
                                    Countdown for
                  </h1>
                  <div
                                    className="App__event"
                  >
                                    <p>
                                                      February 25, 2018
                                    </p>
                  </div>
</header>,
                <Clock
                  deadline="February 25, 2018"
/>,
                <section
                  className="Add-Event"
>
                  <form
                                    className="Add-Event__form"
                  >
                                    <input
                                                      onChange={[Function]}
                                                      type="text"
                                    />
                                    <button
                                                      onClick={[Function]}
                                    >
                                                      Send
                                    </button>
                  </form>
</section>,
              ],
              "className": "App",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": <div
              class="App"
>
              <header
                            class="App__header"
              >
                            <h1>
                                          Countdown for
                            </h1>
                            <div
                                          class="App__event"
                            >
                                          <p>
                                                        February 25, 2018
                                          </p>
                            </div>
              </header>
              <section
                            class="Clock"
              >
                            <div
                                          class="Clock__days"
                            >
                                          0 day
                            </div>
                            <div
                                          class="Clock__hours"
                            >
                                          0 hour
                            </div>
                            <div
                                          class="Clock__minutes"
                            >
                                          0 minute
                            </div>
                            <div
                                          class="Clock__seconds"
                            >
                                          0 second
                            </div>
              </section>
              <section
                            class="Add-Event"
              >
                            <form
                                          class="Add-Event__form"
                            >
                                          <input
                                                        type="text"
                                          />
                                          <button>
                                                        Send
                                          </button>
                            </form>
              </section>
</div>,
            "tag": 5,
            "treeBaseTime": 0,
            "type": "div",
            "updateQueue": null,
          },
          "selfBaseTime": 0,
          "sibling": FiberNode {
            "_debugID": 9,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
              "lineNumber": 28,
            },
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 18,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                "lineNumber": 29,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 19,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 30,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "onChange": [Function],
                  "type": "text",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 20,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 31,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Send",
                    "onClick": [Function],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Send",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <button>
                    Send
</button>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "button",
                  "updateQueue": null,
                },
                "stateNode": <input
                  type="text"
/>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "input",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <input
                    onChange={[Function]}
                    type="text"
/>,
                  <button
                    onClick={[Function]}
>
                    Send
</button>,
                ],
                "className": "Add-Event__form",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <input
                    onChange={[Function]}
                    type="text"
/>,
                  <button
                    onClick={[Function]}
>
                    Send
</button>,
                ],
                "className": "Add-Event__form",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": <form
                class="Add-Event__form"
>
                <input
                                type="text"
                />
                <button>
                                Send
                </button>
</form>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "form",
              "updateQueue": null,
            },
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 2,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <form
                className="Add-Event__form"
>
                <input
                                onChange={[Function]}
                                type="text"
                />
                <button
                                onClick={[Function]}
                >
                                Send
                </button>
</form>,
              "className": "Add-Event",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <form
                className="Add-Event__form"
>
                <input
                                onChange={[Function]}
                                type="text"
                />
                <button
                                onClick={[Function]}
                >
                                Send
                </button>
</form>,
              "className": "Add-Event",
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                "lineNumber": 20,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 7,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 21,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 10,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 22,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Countdown for",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Countdown for",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 11,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 23,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 12,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 24,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "February 25, 2018",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "February 25, 2018",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <p>
                        February 25, 2018
</p>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "p",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <p>
                        February 25, 2018
</p>,
                      "className": "App__event",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <p>
                        February 25, 2018
</p>,
                      "className": "App__event",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="App__event"
>
                      <p>
                                            February 25, 2018
                      </p>
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <h1>
                    Countdown for
</h1>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "h1",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <h1>
                      Countdown for
</h1>,
                    <div
                      className="App__event"
>
                      <p>
                                            February 25, 2018
                      </p>
</div>,
                  ],
                  "className": "App__header",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <h1>
                      Countdown for
</h1>,
                    <div
                      className="App__event"
>
                      <p>
                                            February 25, 2018
                      </p>
</div>,
                  ],
                  "className": "App__header",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": [Circular],
                "stateNode": <header
                  class="App__header"
>
                  <h1>
                                    Countdown for
                  </h1>
                  <div
                                    class="App__event"
                  >
                                    <p>
                                                      February 25, 2018
                                    </p>
                  </div>
</header>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "header",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": Array [
                  <header
                    className="App__header"
>
                    <h1>
                                        Countdown for
                    </h1>
                    <div
                                        className="App__event"
                    >
                                        <p>
                                                            February 25, 2018
                                        </p>
                    </div>
</header>,
                  <Clock
                    deadline="February 25, 2018"
/>,
                  <section
                    className="Add-Event"
>
                    <form
                                        className="Add-Event__form"
                    >
                                        <input
                                                            onChange={[Function]}
                                                            type="text"
                                        />
                                        <button
                                                            onClick={[Function]}
                                        >
                                                            Send
                                        </button>
                    </form>
</section>,
                ],
                "className": "App",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <header
                    className="App__header"
>
                    <h1>
                                        Countdown for
                    </h1>
                    <div
                                        className="App__event"
                    >
                                        <p>
                                                            February 25, 2018
                                        </p>
                    </div>
</header>,
                  <Clock
                    deadline="February 25, 2018"
/>,
                  <section
                    className="Add-Event"
>
                    <form
                                        className="Add-Event__form"
                    >
                                        <input
                                                            onChange={[Function]}
                                                            type="text"
                                        />
                                        <button
                                                            onClick={[Function]}
                                        >
                                                            Send
                                        </button>
                    </form>
</section>,
                ],
                "className": "App",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": <div
                class="App"
>
                <header
                                class="App__header"
                >
                                <h1>
                                                Countdown for
                                </h1>
                                <div
                                                class="App__event"
                                >
                                                <p>
                                                                February 25, 2018
                                                </p>
                                </div>
                </header>
                <section
                                class="Clock"
                >
                                <div
                                                class="Clock__days"
                                >
                                                0 day
                                </div>
                                <div
                                                class="Clock__hours"
                                >
                                                0 hour
                                </div>
                                <div
                                                class="Clock__minutes"
                                >
                                                0 minute
                                </div>
                                <div
                                                class="Clock__seconds"
                                >
                                                0 second
                                </div>
                </section>
                <section
                                class="Add-Event"
                >
                                <form
                                                class="Add-Event__form"
                                >
                                                <input
                                                                type="text"
                                                />
                                                <button>
                                                                Send
                                                </button>
                                </form>
                </section>
</div>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "div",
              "updateQueue": null,
            },
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": <section
              class="Add-Event"
>
              <form
                            class="Add-Event__form"
              >
                            <input
                                          type="text"
                            />
                            <button>
                                          Send
                            </button>
              </form>
</section>,
            "tag": 5,
            "treeBaseTime": 0,
            "type": "section",
            "updateQueue": null,
          },
          "stateNode": Clock {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "intervalId": 2,
            "props": Object {
              "deadline": "February 25, 2018",
            },
            "refs": Object {},
            "state": Object {
              "days": 0,
              "deadline": "",
              "hours": 0,
              "minutes": 0,
              "seconds": 0,
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "index": 0,
        "key": null,
        "lastEffect": FiberNode {
          "_debugID": 8,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": Object {
            "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
            "lineNumber": 27,
          },
          "actualDuration": 0,
          "actualStartTime": 0,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 13,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
              "lineNumber": 29,
            },
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 14,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                "lineNumber": 30,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": null,
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": "0 day",
                "className": "Clock__days",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": "0 day",
                "className": "Clock__days",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": FiberNode {
                "_debugID": 15,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                  "lineNumber": 31,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "0 hour",
                  "className": "Clock__hours",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "0 hour",
                  "className": "Clock__hours",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 16,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                    "lineNumber": 32,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 2,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "0 minute",
                    "className": "Clock__minutes",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "0 minute",
                    "className": "Clock__minutes",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 17,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                      "lineNumber": 33,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 3,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "0 second",
                      "className": "Clock__seconds",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "0 second",
                      "className": "Clock__seconds",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="Clock__seconds"
>
                      0 second
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <div
                    class="Clock__minutes"
>
                    0 minute
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": <div
                  class="Clock__hours"
>
                  0 hour
</div>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "div",
                "updateQueue": null,
              },
              "stateNode": <div
                class="Clock__days"
>
                0 day
</div>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "div",
              "updateQueue": null,
            },
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <div
                  className="Clock__days"
>
                  0 day
</div>,
                <div
                  className="Clock__hours"
>
                  0 hour
</div>,
                <div
                  className="Clock__minutes"
>
                  0 minute
</div>,
                <div
                  className="Clock__seconds"
>
                  0 second
</div>,
              ],
              "className": "Clock",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <div
                  className="Clock__days"
>
                  0 day
</div>,
                <div
                  className="Clock__hours"
>
                  0 hour
</div>,
                <div
                  className="Clock__minutes"
>
                  0 minute
</div>,
                <div
                  className="Clock__seconds"
>
                  0 second
</div>,
              ],
              "className": "Clock",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": <section
              class="Clock"
>
              <div
                            class="Clock__days"
              >
                            0 day
              </div>
              <div
                            class="Clock__hours"
              >
                            0 hour
              </div>
              <div
                            class="Clock__minutes"
              >
                            0 minute
              </div>
              <div
                            class="Clock__seconds"
              >
                            0 second
              </div>
</section>,
            "tag": 5,
            "treeBaseTime": 0,
            "type": "section",
            "updateQueue": null,
          },
          "effectTag": 5,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 1,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "deadline": "February 25, 2018",
          },
          "memoizedState": Object {
            "days": 0,
            "deadline": "",
            "hours": 0,
            "minutes": 0,
            "seconds": 0,
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "deadline": "February 25, 2018",
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
              "lineNumber": 20,
            },
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 7,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                "lineNumber": 21,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 10,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 22,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "Countdown for",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "Countdown for",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 11,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 23,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 12,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 24,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "February 25, 2018",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "February 25, 2018",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <p>
                      February 25, 2018
</p>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "p",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <p>
                      February 25, 2018
</p>,
                    "className": "App__event",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <p>
                      February 25, 2018
</p>,
                    "className": "App__event",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="App__event"
>
                    <p>
                                        February 25, 2018
                    </p>
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": <h1>
                  Countdown for
</h1>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "h1",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <h1>
                    Countdown for
</h1>,
                  <div
                    className="App__event"
>
                    <p>
                                        February 25, 2018
                    </p>
</div>,
                ],
                "className": "App__header",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <h1>
                    Countdown for
</h1>,
                  <div
                    className="App__event"
>
                    <p>
                                        February 25, 2018
                    </p>
</div>,
                ],
                "className": "App__header",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": [Circular],
              "stateNode": <header
                class="App__header"
>
                <h1>
                                Countdown for
                </h1>
                <div
                                class="App__event"
                >
                                <p>
                                                February 25, 2018
                                </p>
                </div>
</header>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "header",
              "updateQueue": null,
            },
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "children": Array [
                <header
                  className="App__header"
>
                  <h1>
                                    Countdown for
                  </h1>
                  <div
                                    className="App__event"
                  >
                                    <p>
                                                      February 25, 2018
                                    </p>
                  </div>
</header>,
                <Clock
                  deadline="February 25, 2018"
/>,
                <section
                  className="Add-Event"
>
                  <form
                                    className="Add-Event__form"
                  >
                                    <input
                                                      onChange={[Function]}
                                                      type="text"
                                    />
                                    <button
                                                      onClick={[Function]}
                                    >
                                                      Send
                                    </button>
                  </form>
</section>,
              ],
              "className": "App",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <header
                  className="App__header"
>
                  <h1>
                                    Countdown for
                  </h1>
                  <div
                                    className="App__event"
                  >
                                    <p>
                                                      February 25, 2018
                                    </p>
                  </div>
</header>,
                <Clock
                  deadline="February 25, 2018"
/>,
                <section
                  className="Add-Event"
>
                  <form
                                    className="Add-Event__form"
                  >
                                    <input
                                                      onChange={[Function]}
                                                      type="text"
                                    />
                                    <button
                                                      onClick={[Function]}
                                    >
                                                      Send
                                    </button>
                  </form>
</section>,
              ],
              "className": "App",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": <div
              class="App"
>
              <header
                            class="App__header"
              >
                            <h1>
                                          Countdown for
                            </h1>
                            <div
                                          class="App__event"
                            >
                                          <p>
                                                        February 25, 2018
                                          </p>
                            </div>
              </header>
              <section
                            class="Clock"
              >
                            <div
                                          class="Clock__days"
                            >
                                          0 day
                            </div>
                            <div
                                          class="Clock__hours"
                            >
                                          0 hour
                            </div>
                            <div
                                          class="Clock__minutes"
                            >
                                          0 minute
                            </div>
                            <div
                                          class="Clock__seconds"
                            >
                                          0 second
                            </div>
              </section>
              <section
                            class="Add-Event"
              >
                            <form
                                          class="Add-Event__form"
                            >
                                          <input
                                                        type="text"
                                          />
                                          <button>
                                                        Send
                                          </button>
                            </form>
              </section>
</div>,
            "tag": 5,
            "treeBaseTime": 0,
            "type": "div",
            "updateQueue": null,
          },
          "selfBaseTime": 0,
          "sibling": FiberNode {
            "_debugID": 9,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
              "lineNumber": 28,
            },
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 18,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                "lineNumber": 29,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 19,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 30,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "onChange": [Function],
                  "type": "text",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 20,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 31,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Send",
                    "onClick": [Function],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Send",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <button>
                    Send
</button>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "button",
                  "updateQueue": null,
                },
                "stateNode": <input
                  type="text"
/>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "input",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <input
                    onChange={[Function]}
                    type="text"
/>,
                  <button
                    onClick={[Function]}
>
                    Send
</button>,
                ],
                "className": "Add-Event__form",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <input
                    onChange={[Function]}
                    type="text"
/>,
                  <button
                    onClick={[Function]}
>
                    Send
</button>,
                ],
                "className": "Add-Event__form",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": <form
                class="Add-Event__form"
>
                <input
                                type="text"
                />
                <button>
                                Send
                </button>
</form>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "form",
              "updateQueue": null,
            },
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 2,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <form
                className="Add-Event__form"
>
                <input
                                onChange={[Function]}
                                type="text"
                />
                <button
                                onClick={[Function]}
                >
                                Send
                </button>
</form>,
              "className": "Add-Event",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <form
                className="Add-Event__form"
>
                <input
                                onChange={[Function]}
                                type="text"
                />
                <button
                                onClick={[Function]}
                >
                                Send
                </button>
</form>,
              "className": "Add-Event",
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                "lineNumber": 20,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 7,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 21,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 10,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 22,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Countdown for",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Countdown for",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 11,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 23,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 12,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 24,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "February 25, 2018",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "February 25, 2018",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <p>
                        February 25, 2018
</p>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "p",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <p>
                        February 25, 2018
</p>,
                      "className": "App__event",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <p>
                        February 25, 2018
</p>,
                      "className": "App__event",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="App__event"
>
                      <p>
                                            February 25, 2018
                      </p>
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <h1>
                    Countdown for
</h1>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "h1",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <h1>
                      Countdown for
</h1>,
                    <div
                      className="App__event"
>
                      <p>
                                            February 25, 2018
                      </p>
</div>,
                  ],
                  "className": "App__header",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <h1>
                      Countdown for
</h1>,
                    <div
                      className="App__event"
>
                      <p>
                                            February 25, 2018
                      </p>
</div>,
                  ],
                  "className": "App__header",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": [Circular],
                "stateNode": <header
                  class="App__header"
>
                  <h1>
                                    Countdown for
                  </h1>
                  <div
                                    class="App__event"
                  >
                                    <p>
                                                      February 25, 2018
                                    </p>
                  </div>
</header>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "header",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": Array [
                  <header
                    className="App__header"
>
                    <h1>
                                        Countdown for
                    </h1>
                    <div
                                        className="App__event"
                    >
                                        <p>
                                                            February 25, 2018
                                        </p>
                    </div>
</header>,
                  <Clock
                    deadline="February 25, 2018"
/>,
                  <section
                    className="Add-Event"
>
                    <form
                                        className="Add-Event__form"
                    >
                                        <input
                                                            onChange={[Function]}
                                                            type="text"
                                        />
                                        <button
                                                            onClick={[Function]}
                                        >
                                                            Send
                                        </button>
                    </form>
</section>,
                ],
                "className": "App",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <header
                    className="App__header"
>
                    <h1>
                                        Countdown for
                    </h1>
                    <div
                                        className="App__event"
                    >
                                        <p>
                                                            February 25, 2018
                                        </p>
                    </div>
</header>,
                  <Clock
                    deadline="February 25, 2018"
/>,
                  <section
                    className="Add-Event"
>
                    <form
                                        className="Add-Event__form"
                    >
                                        <input
                                                            onChange={[Function]}
                                                            type="text"
                                        />
                                        <button
                                                            onClick={[Function]}
                                        >
                                                            Send
                                        </button>
                    </form>
</section>,
                ],
                "className": "App",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": <div
                class="App"
>
                <header
                                class="App__header"
                >
                                <h1>
                                                Countdown for
                                </h1>
                                <div
                                                class="App__event"
                                >
                                                <p>
                                                                February 25, 2018
                                                </p>
                                </div>
                </header>
                <section
                                class="Clock"
                >
                                <div
                                                class="Clock__days"
                                >
                                                0 day
                                </div>
                                <div
                                                class="Clock__hours"
                                >
                                                0 hour
                                </div>
                                <div
                                                class="Clock__minutes"
                                >
                                                0 minute
                                </div>
                                <div
                                                class="Clock__seconds"
                                >
                                                0 second
                                </div>
                </section>
                <section
                                class="Add-Event"
                >
                                <form
                                                class="Add-Event__form"
                                >
                                                <input
                                                                type="text"
                                                />
                                                <button>
                                                                Send
                                                </button>
                                </form>
                </section>
</div>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "div",
              "updateQueue": null,
            },
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": <section
              class="Add-Event"
>
              <form
                            class="Add-Event__form"
              >
                            <input
                                          type="text"
                            />
                            <button>
                                          Send
                            </button>
              </form>
</section>,
            "tag": 5,
            "treeBaseTime": 0,
            "type": "section",
            "updateQueue": null,
          },
          "stateNode": Clock {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "intervalId": 2,
            "props": Object {
              "deadline": "February 25, 2018",
            },
            "refs": Object {},
            "state": Object {
              "days": 0,
              "deadline": "",
              "hours": 0,
              "minutes": 0,
              "seconds": 0,
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "memoizedProps": Object {},
        "memoizedState": Object {
          "deadline": "February 25, 2018",
          "newDeadline": "",
        },
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {},
        "ref": null,
        "return": FiberNode {
          "_debugID": 4,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": 0,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": FiberNode {
            "_debugID": 8,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
              "lineNumber": 27,
            },
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 13,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                "lineNumber": 29,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 14,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                  "lineNumber": 30,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "0 day",
                  "className": "Clock__days",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "0 day",
                  "className": "Clock__days",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 15,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                    "lineNumber": 31,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "0 hour",
                    "className": "Clock__hours",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "0 hour",
                    "className": "Clock__hours",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 16,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                      "lineNumber": 32,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 2,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "0 minute",
                      "className": "Clock__minutes",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "0 minute",
                      "className": "Clock__minutes",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 17,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                        "lineNumber": 33,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 3,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "0 second",
                        "className": "Clock__seconds",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "0 second",
                        "className": "Clock__seconds",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="Clock__seconds"
>
                        0 second
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <div
                      class="Clock__minutes"
>
                      0 minute
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <div
                    class="Clock__hours"
>
                    0 hour
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": <div
                  class="Clock__days"
>
                  0 day
</div>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "div",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <div
                    className="Clock__days"
>
                    0 day
</div>,
                  <div
                    className="Clock__hours"
>
                    0 hour
</div>,
                  <div
                    className="Clock__minutes"
>
                    0 minute
</div>,
                  <div
                    className="Clock__seconds"
>
                    0 second
</div>,
                ],
                "className": "Clock",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <div
                    className="Clock__days"
>
                    0 day
</div>,
                  <div
                    className="Clock__hours"
>
                    0 hour
</div>,
                  <div
                    className="Clock__minutes"
>
                    0 minute
</div>,
                  <div
                    className="Clock__seconds"
>
                    0 second
</div>,
                ],
                "className": "Clock",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": <section
                class="Clock"
>
                <div
                                class="Clock__days"
                >
                                0 day
                </div>
                <div
                                class="Clock__hours"
                >
                                0 hour
                </div>
                <div
                                class="Clock__minutes"
                >
                                0 minute
                </div>
                <div
                                class="Clock__seconds"
                >
                                0 second
                </div>
</section>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "section",
              "updateQueue": null,
            },
            "effectTag": 5,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 1,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "deadline": "February 25, 2018",
            },
            "memoizedState": Object {
              "days": 0,
              "deadline": "",
              "hours": 0,
              "minutes": 0,
              "seconds": 0,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "deadline": "February 25, 2018",
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                "lineNumber": 20,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 7,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 21,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 10,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 22,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Countdown for",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Countdown for",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 11,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 23,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 12,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 24,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "February 25, 2018",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "February 25, 2018",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <p>
                        February 25, 2018
</p>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "p",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <p>
                        February 25, 2018
</p>,
                      "className": "App__event",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <p>
                        February 25, 2018
</p>,
                      "className": "App__event",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="App__event"
>
                      <p>
                                            February 25, 2018
                      </p>
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <h1>
                    Countdown for
</h1>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "h1",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <h1>
                      Countdown for
</h1>,
                    <div
                      className="App__event"
>
                      <p>
                                            February 25, 2018
                      </p>
</div>,
                  ],
                  "className": "App__header",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <h1>
                      Countdown for
</h1>,
                    <div
                      className="App__event"
>
                      <p>
                                            February 25, 2018
                      </p>
</div>,
                  ],
                  "className": "App__header",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": [Circular],
                "stateNode": <header
                  class="App__header"
>
                  <h1>
                                    Countdown for
                  </h1>
                  <div
                                    class="App__event"
                  >
                                    <p>
                                                      February 25, 2018
                                    </p>
                  </div>
</header>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "header",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": Array [
                  <header
                    className="App__header"
>
                    <h1>
                                        Countdown for
                    </h1>
                    <div
                                        className="App__event"
                    >
                                        <p>
                                                            February 25, 2018
                                        </p>
                    </div>
</header>,
                  <Clock
                    deadline="February 25, 2018"
/>,
                  <section
                    className="Add-Event"
>
                    <form
                                        className="Add-Event__form"
                    >
                                        <input
                                                            onChange={[Function]}
                                                            type="text"
                                        />
                                        <button
                                                            onClick={[Function]}
                                        >
                                                            Send
                                        </button>
                    </form>
</section>,
                ],
                "className": "App",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <header
                    className="App__header"
>
                    <h1>
                                        Countdown for
                    </h1>
                    <div
                                        className="App__event"
                    >
                                        <p>
                                                            February 25, 2018
                                        </p>
                    </div>
</header>,
                  <Clock
                    deadline="February 25, 2018"
/>,
                  <section
                    className="Add-Event"
>
                    <form
                                        className="Add-Event__form"
                    >
                                        <input
                                                            onChange={[Function]}
                                                            type="text"
                                        />
                                        <button
                                                            onClick={[Function]}
                                        >
                                                            Send
                                        </button>
                    </form>
</section>,
                ],
                "className": "App",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": <div
                class="App"
>
                <header
                                class="App__header"
                >
                                <h1>
                                                Countdown for
                                </h1>
                                <div
                                                class="App__event"
                                >
                                                <p>
                                                                February 25, 2018
                                                </p>
                                </div>
                </header>
                <section
                                class="Clock"
                >
                                <div
                                                class="Clock__days"
                                >
                                                0 day
                                </div>
                                <div
                                                class="Clock__hours"
                                >
                                                0 hour
                                </div>
                                <div
                                                class="Clock__minutes"
                                >
                                                0 minute
                                </div>
                                <div
                                                class="Clock__seconds"
                                >
                                                0 second
                                </div>
                </section>
                <section
                                class="Add-Event"
                >
                                <form
                                                class="Add-Event__form"
                                >
                                                <input
                                                                type="text"
                                                />
                                                <button>
                                                                Send
                                                </button>
                                </form>
                </section>
</div>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "div",
              "updateQueue": null,
            },
            "selfBaseTime": 0,
            "sibling": FiberNode {
              "_debugID": 9,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                "lineNumber": 28,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 18,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 29,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 19,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 30,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "onChange": [Function],
                    "type": "text",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "onChange": [Function],
                    "type": "text",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 20,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 31,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Send",
                      "onClick": [Function],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Send",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <button>
                      Send
</button>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "button",
                    "updateQueue": null,
                  },
                  "stateNode": <input
                    type="text"
/>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "input",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <input
                      onChange={[Function]}
                      type="text"
/>,
                    <button
                      onClick={[Function]}
>
                      Send
</button>,
                  ],
                  "className": "Add-Event__form",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <input
                      onChange={[Function]}
                      type="text"
/>,
                    <button
                      onClick={[Function]}
>
                      Send
</button>,
                  ],
                  "className": "Add-Event__form",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <form
                  class="Add-Event__form"
>
                  <input
                                    type="text"
                  />
                  <button>
                                    Send
                  </button>
</form>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "form",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 2,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <form
                  className="Add-Event__form"
>
                  <input
                                    onChange={[Function]}
                                    type="text"
                  />
                  <button
                                    onClick={[Function]}
                  >
                                    Send
                  </button>
</form>,
                "className": "Add-Event",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <form
                  className="Add-Event__form"
>
                  <input
                                    onChange={[Function]}
                                    type="text"
                  />
                  <button
                                    onClick={[Function]}
                  >
                                    Send
                  </button>
</form>,
                "className": "Add-Event",
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 6,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 20,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 21,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 22,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Countdown for",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Countdown for",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 11,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 23,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 12,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                          "lineNumber": 24,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "February 25, 2018",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "February 25, 2018",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <p>
                          February 25, 2018
</p>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "p",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <p>
                          February 25, 2018
</p>,
                        "className": "App__event",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <p>
                          February 25, 2018
</p>,
                        "className": "App__event",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="App__event"
>
                        <p>
                                                February 25, 2018
                        </p>
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <h1>
                      Countdown for
</h1>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "h1",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <h1>
                        Countdown for
</h1>,
                      <div
                        className="App__event"
>
                        <p>
                                                February 25, 2018
                        </p>
</div>,
                    ],
                    "className": "App__header",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <h1>
                        Countdown for
</h1>,
                      <div
                        className="App__event"
>
                        <p>
                                                February 25, 2018
                        </p>
</div>,
                    ],
                    "className": "App__header",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": [Circular],
                  "stateNode": <header
                    class="App__header"
>
                    <h1>
                                        Countdown for
                    </h1>
                    <div
                                        class="App__event"
                    >
                                        <p>
                                                            February 25, 2018
                                        </p>
                    </div>
</header>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "header",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": Array [
                    <header
                      className="App__header"
>
                      <h1>
                                            Countdown for
                      </h1>
                      <div
                                            className="App__event"
                      >
                                            <p>
                                                                  February 25, 2018
                                            </p>
                      </div>
</header>,
                    <Clock
                      deadline="February 25, 2018"
/>,
                    <section
                      className="Add-Event"
>
                      <form
                                            className="Add-Event__form"
                      >
                                            <input
                                                                  onChange={[Function]}
                                                                  type="text"
                                            />
                                            <button
                                                                  onClick={[Function]}
                                            >
                                                                  Send
                                            </button>
                      </form>
</section>,
                  ],
                  "className": "App",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <header
                      className="App__header"
>
                      <h1>
                                            Countdown for
                      </h1>
                      <div
                                            className="App__event"
                      >
                                            <p>
                                                                  February 25, 2018
                                            </p>
                      </div>
</header>,
                    <Clock
                      deadline="February 25, 2018"
/>,
                    <section
                      className="Add-Event"
>
                      <form
                                            className="Add-Event__form"
                      >
                                            <input
                                                                  onChange={[Function]}
                                                                  type="text"
                                            />
                                            <button
                                                                  onClick={[Function]}
                                            >
                                                                  Send
                                            </button>
                      </form>
</section>,
                  ],
                  "className": "App",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <div
                  class="App"
>
                  <header
                                    class="App__header"
                  >
                                    <h1>
                                                      Countdown for
                                    </h1>
                                    <div
                                                      class="App__event"
                                    >
                                                      <p>
                                                                        February 25, 2018
                                                      </p>
                                    </div>
                  </header>
                  <section
                                    class="Clock"
                  >
                                    <div
                                                      class="Clock__days"
                                    >
                                                      0 day
                                    </div>
                                    <div
                                                      class="Clock__hours"
                                    >
                                                      0 hour
                                    </div>
                                    <div
                                                      class="Clock__minutes"
                                    >
                                                      0 minute
                                    </div>
                                    <div
                                                      class="Clock__seconds"
                                    >
                                                      0 second
                                    </div>
                  </section>
                  <section
                                    class="Add-Event"
                  >
                                    <form
                                                      class="Add-Event__form"
                                    >
                                                      <input
                                                                        type="text"
                                                      />
                                                      <button>
                                                                        Send
                                                      </button>
                                    </form>
                  </section>
</div>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "div",
                "updateQueue": null,
              },
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": <section
                class="Add-Event"
>
                <form
                                class="Add-Event__form"
                >
                                <input
                                                type="text"
                                />
                                <button>
                                                Send
                                </button>
                </form>
</section>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "section",
              "updateQueue": null,
            },
            "stateNode": Clock {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "intervalId": 2,
              "props": Object {
                "deadline": "February 25, 2018",
              },
              "refs": Object {},
              "state": Object {
                "days": 0,
                "deadline": "",
                "hours": 0,
                "minutes": 0,
                "seconds": 0,
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseTime": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "index": 0,
          "key": null,
          "lastEffect": FiberNode {
            "_debugID": 8,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
              "lineNumber": 27,
            },
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 13,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                "lineNumber": 29,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 14,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                  "lineNumber": 30,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "0 day",
                  "className": "Clock__days",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "0 day",
                  "className": "Clock__days",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 15,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                    "lineNumber": 31,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "0 hour",
                    "className": "Clock__hours",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "0 hour",
                    "className": "Clock__hours",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 16,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                      "lineNumber": 32,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 2,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "0 minute",
                      "className": "Clock__minutes",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "0 minute",
                      "className": "Clock__minutes",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 17,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                        "lineNumber": 33,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 3,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "0 second",
                        "className": "Clock__seconds",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "0 second",
                        "className": "Clock__seconds",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="Clock__seconds"
>
                        0 second
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <div
                      class="Clock__minutes"
>
                      0 minute
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <div
                    class="Clock__hours"
>
                    0 hour
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": <div
                  class="Clock__days"
>
                  0 day
</div>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "div",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <div
                    className="Clock__days"
>
                    0 day
</div>,
                  <div
                    className="Clock__hours"
>
                    0 hour
</div>,
                  <div
                    className="Clock__minutes"
>
                    0 minute
</div>,
                  <div
                    className="Clock__seconds"
>
                    0 second
</div>,
                ],
                "className": "Clock",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <div
                    className="Clock__days"
>
                    0 day
</div>,
                  <div
                    className="Clock__hours"
>
                    0 hour
</div>,
                  <div
                    className="Clock__minutes"
>
                    0 minute
</div>,
                  <div
                    className="Clock__seconds"
>
                    0 second
</div>,
                ],
                "className": "Clock",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": <section
                class="Clock"
>
                <div
                                class="Clock__days"
                >
                                0 day
                </div>
                <div
                                class="Clock__hours"
                >
                                0 hour
                </div>
                <div
                                class="Clock__minutes"
                >
                                0 minute
                </div>
                <div
                                class="Clock__seconds"
                >
                                0 second
                </div>
</section>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "section",
              "updateQueue": null,
            },
            "effectTag": 5,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 1,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "deadline": "February 25, 2018",
            },
            "memoizedState": Object {
              "days": 0,
              "deadline": "",
              "hours": 0,
              "minutes": 0,
              "seconds": 0,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "deadline": "February 25, 2018",
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                "lineNumber": 20,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 7,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 21,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 10,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 22,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Countdown for",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Countdown for",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 11,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 23,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 12,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 24,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "February 25, 2018",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "February 25, 2018",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <p>
                        February 25, 2018
</p>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "p",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <p>
                        February 25, 2018
</p>,
                      "className": "App__event",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <p>
                        February 25, 2018
</p>,
                      "className": "App__event",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="App__event"
>
                      <p>
                                            February 25, 2018
                      </p>
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <h1>
                    Countdown for
</h1>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "h1",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <h1>
                      Countdown for
</h1>,
                    <div
                      className="App__event"
>
                      <p>
                                            February 25, 2018
                      </p>
</div>,
                  ],
                  "className": "App__header",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <h1>
                      Countdown for
</h1>,
                    <div
                      className="App__event"
>
                      <p>
                                            February 25, 2018
                      </p>
</div>,
                  ],
                  "className": "App__header",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": [Circular],
                "stateNode": <header
                  class="App__header"
>
                  <h1>
                                    Countdown for
                  </h1>
                  <div
                                    class="App__event"
                  >
                                    <p>
                                                      February 25, 2018
                                    </p>
                  </div>
</header>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "header",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": Array [
                  <header
                    className="App__header"
>
                    <h1>
                                        Countdown for
                    </h1>
                    <div
                                        className="App__event"
                    >
                                        <p>
                                                            February 25, 2018
                                        </p>
                    </div>
</header>,
                  <Clock
                    deadline="February 25, 2018"
/>,
                  <section
                    className="Add-Event"
>
                    <form
                                        className="Add-Event__form"
                    >
                                        <input
                                                            onChange={[Function]}
                                                            type="text"
                                        />
                                        <button
                                                            onClick={[Function]}
                                        >
                                                            Send
                                        </button>
                    </form>
</section>,
                ],
                "className": "App",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <header
                    className="App__header"
>
                    <h1>
                                        Countdown for
                    </h1>
                    <div
                                        className="App__event"
                    >
                                        <p>
                                                            February 25, 2018
                                        </p>
                    </div>
</header>,
                  <Clock
                    deadline="February 25, 2018"
/>,
                  <section
                    className="Add-Event"
>
                    <form
                                        className="Add-Event__form"
                    >
                                        <input
                                                            onChange={[Function]}
                                                            type="text"
                                        />
                                        <button
                                                            onClick={[Function]}
                                        >
                                                            Send
                                        </button>
                    </form>
</section>,
                ],
                "className": "App",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": <div
                class="App"
>
                <header
                                class="App__header"
                >
                                <h1>
                                                Countdown for
                                </h1>
                                <div
                                                class="App__event"
                                >
                                                <p>
                                                                February 25, 2018
                                                </p>
                                </div>
                </header>
                <section
                                class="Clock"
                >
                                <div
                                                class="Clock__days"
                                >
                                                0 day
                                </div>
                                <div
                                                class="Clock__hours"
                                >
                                                0 hour
                                </div>
                                <div
                                                class="Clock__minutes"
                                >
                                                0 minute
                                </div>
                                <div
                                                class="Clock__seconds"
                                >
                                                0 second
                                </div>
                </section>
                <section
                                class="Add-Event"
                >
                                <form
                                                class="Add-Event__form"
                                >
                                                <input
                                                                type="text"
                                                />
                                                <button>
                                                                Send
                                                </button>
                                </form>
                </section>
</div>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "div",
              "updateQueue": null,
            },
            "selfBaseTime": 0,
            "sibling": FiberNode {
              "_debugID": 9,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                "lineNumber": 28,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 18,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 29,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 19,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 30,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "onChange": [Function],
                    "type": "text",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "onChange": [Function],
                    "type": "text",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 20,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 31,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Send",
                      "onClick": [Function],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Send",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <button>
                      Send
</button>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "button",
                    "updateQueue": null,
                  },
                  "stateNode": <input
                    type="text"
/>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "input",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <input
                      onChange={[Function]}
                      type="text"
/>,
                    <button
                      onClick={[Function]}
>
                      Send
</button>,
                  ],
                  "className": "Add-Event__form",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <input
                      onChange={[Function]}
                      type="text"
/>,
                    <button
                      onClick={[Function]}
>
                      Send
</button>,
                  ],
                  "className": "Add-Event__form",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <form
                  class="Add-Event__form"
>
                  <input
                                    type="text"
                  />
                  <button>
                                    Send
                  </button>
</form>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "form",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 2,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <form
                  className="Add-Event__form"
>
                  <input
                                    onChange={[Function]}
                                    type="text"
                  />
                  <button
                                    onClick={[Function]}
                  >
                                    Send
                  </button>
</form>,
                "className": "Add-Event",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <form
                  className="Add-Event__form"
>
                  <input
                                    onChange={[Function]}
                                    type="text"
                  />
                  <button
                                    onClick={[Function]}
                  >
                                    Send
                  </button>
</form>,
                "className": "Add-Event",
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 6,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 20,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 21,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 22,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Countdown for",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Countdown for",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 11,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 23,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 12,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                          "lineNumber": 24,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "February 25, 2018",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "February 25, 2018",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <p>
                          February 25, 2018
</p>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "p",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <p>
                          February 25, 2018
</p>,
                        "className": "App__event",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <p>
                          February 25, 2018
</p>,
                        "className": "App__event",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="App__event"
>
                        <p>
                                                February 25, 2018
                        </p>
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <h1>
                      Countdown for
</h1>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "h1",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <h1>
                        Countdown for
</h1>,
                      <div
                        className="App__event"
>
                        <p>
                                                February 25, 2018
                        </p>
</div>,
                    ],
                    "className": "App__header",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <h1>
                        Countdown for
</h1>,
                      <div
                        className="App__event"
>
                        <p>
                                                February 25, 2018
                        </p>
</div>,
                    ],
                    "className": "App__header",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": [Circular],
                  "stateNode": <header
                    class="App__header"
>
                    <h1>
                                        Countdown for
                    </h1>
                    <div
                                        class="App__event"
                    >
                                        <p>
                                                            February 25, 2018
                                        </p>
                    </div>
</header>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "header",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": Array [
                    <header
                      className="App__header"
>
                      <h1>
                                            Countdown for
                      </h1>
                      <div
                                            className="App__event"
                      >
                                            <p>
                                                                  February 25, 2018
                                            </p>
                      </div>
</header>,
                    <Clock
                      deadline="February 25, 2018"
/>,
                    <section
                      className="Add-Event"
>
                      <form
                                            className="Add-Event__form"
                      >
                                            <input
                                                                  onChange={[Function]}
                                                                  type="text"
                                            />
                                            <button
                                                                  onClick={[Function]}
                                            >
                                                                  Send
                                            </button>
                      </form>
</section>,
                  ],
                  "className": "App",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <header
                      className="App__header"
>
                      <h1>
                                            Countdown for
                      </h1>
                      <div
                                            className="App__event"
                      >
                                            <p>
                                                                  February 25, 2018
                                            </p>
                      </div>
</header>,
                    <Clock
                      deadline="February 25, 2018"
/>,
                    <section
                      className="Add-Event"
>
                      <form
                                            className="Add-Event__form"
                      >
                                            <input
                                                                  onChange={[Function]}
                                                                  type="text"
                                            />
                                            <button
                                                                  onClick={[Function]}
                                            >
                                                                  Send
                                            </button>
                      </form>
</section>,
                  ],
                  "className": "App",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <div
                  class="App"
>
                  <header
                                    class="App__header"
                  >
                                    <h1>
                                                      Countdown for
                                    </h1>
                                    <div
                                                      class="App__event"
                                    >
                                                      <p>
                                                                        February 25, 2018
                                                      </p>
                                    </div>
                  </header>
                  <section
                                    class="Clock"
                  >
                                    <div
                                                      class="Clock__days"
                                    >
                                                      0 day
                                    </div>
                                    <div
                                                      class="Clock__hours"
                                    >
                                                      0 hour
                                    </div>
                                    <div
                                                      class="Clock__minutes"
                                    >
                                                      0 minute
                                    </div>
                                    <div
                                                      class="Clock__seconds"
                                    >
                                                      0 second
                                    </div>
                  </section>
                  <section
                                    class="Add-Event"
                  >
                                    <form
                                                      class="Add-Event__form"
                                    >
                                                      <input
                                                                        type="text"
                                                      />
                                                      <button>
                                                                        Send
                                                      </button>
                                    </form>
                  </section>
</div>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "div",
                "updateQueue": null,
              },
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": <section
                class="Add-Event"
>
                <form
                                class="Add-Event__form"
                >
                                <input
                                                type="text"
                                />
                                <button>
                                                Send
                                </button>
                </form>
</section>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "section",
              "updateQueue": null,
            },
            "stateNode": Clock {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "intervalId": 2,
              "props": Object {
                "deadline": "February 25, 2018",
              },
              "refs": Object {},
              "state": Object {
                "days": 0,
                "deadline": "",
                "hours": 0,
                "minutes": 0,
                "seconds": 0,
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseTime": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {},
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 1,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 1,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                                    class="App"
                  >
                                    <header
                                                      class="App__header"
                                    >
                                                      <h1>
                                                                        Countdown for
                                                      </h1>
                                                      <div
                                                                        class="App__event"
                                                      >
                                                                        <p>
                                                                                          February 25, 2018
                                                                        </p>
                                                      </div>
                                    </header>
                                    <section
                                                      class="Clock"
                                    >
                                                      <div
                                                                        class="Clock__days"
                                                      >
                                                                        0 day
                                                      </div>
                                                      <div
                                                                        class="Clock__hours"
                                                      >
                                                                        0 hour
                                                      </div>
                                                      <div
                                                                        class="Clock__minutes"
                                                      >
                                                                        0 minute
                                                      </div>
                                                      <div
                                                                        class="Clock__seconds"
                                                      >
                                                                        0 second
                                                      </div>
                                    </section>
                                    <section
                                                      class="Add-Event"
                                    >
                                                      <form
                                                                        class="Add-Event__form"
                                                      >
                                                                        <input
                                                                                          type="text"
                                                                        />
                                                                        <button>
                                                                                          Send
                                                                        </button>
                                                      </form>
                                    </section>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "expirationTime": 1,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
/>,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
/>,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "effectTag": 32,
            "expirationTime": 0,
            "firstEffect": FiberNode {
              "_debugID": 8,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                "lineNumber": 27,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 13,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                  "lineNumber": 29,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 14,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                    "lineNumber": 30,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "0 day",
                    "className": "Clock__days",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "0 day",
                    "className": "Clock__days",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 15,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                      "lineNumber": 31,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "0 hour",
                      "className": "Clock__hours",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "0 hour",
                      "className": "Clock__hours",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 16,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                        "lineNumber": 32,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 2,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "0 minute",
                        "className": "Clock__minutes",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "0 minute",
                        "className": "Clock__minutes",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": FiberNode {
                        "_debugID": 17,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                          "lineNumber": 33,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 3,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "0 second",
                          "className": "Clock__seconds",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "0 second",
                          "className": "Clock__seconds",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="Clock__seconds"
>
                          0 second
</div>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <div
                        class="Clock__minutes"
>
                        0 minute
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <div
                      class="Clock__hours"
>
                      0 hour
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <div
                    class="Clock__days"
>
                    0 day
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <div
                      className="Clock__days"
>
                      0 day
</div>,
                    <div
                      className="Clock__hours"
>
                      0 hour
</div>,
                    <div
                      className="Clock__minutes"
>
                      0 minute
</div>,
                    <div
                      className="Clock__seconds"
>
                      0 second
</div>,
                  ],
                  "className": "Clock",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <div
                      className="Clock__days"
>
                      0 day
</div>,
                    <div
                      className="Clock__hours"
>
                      0 hour
</div>,
                    <div
                      className="Clock__minutes"
>
                      0 minute
</div>,
                    <div
                      className="Clock__seconds"
>
                      0 second
</div>,
                  ],
                  "className": "Clock",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <section
                  class="Clock"
>
                  <div
                                    class="Clock__days"
                  >
                                    0 day
                  </div>
                  <div
                                    class="Clock__hours"
                  >
                                    0 hour
                  </div>
                  <div
                                    class="Clock__minutes"
                  >
                                    0 minute
                  </div>
                  <div
                                    class="Clock__seconds"
                  >
                                    0 second
                  </div>
</section>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "section",
                "updateQueue": null,
              },
              "effectTag": 5,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 1,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "deadline": "February 25, 2018",
              },
              "memoizedState": Object {
                "days": 0,
                "deadline": "",
                "hours": 0,
                "minutes": 0,
                "seconds": 0,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "deadline": "February 25, 2018",
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 6,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 20,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 21,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 22,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Countdown for",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Countdown for",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 11,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 23,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 12,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                          "lineNumber": 24,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "February 25, 2018",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "February 25, 2018",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <p>
                          February 25, 2018
</p>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "p",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <p>
                          February 25, 2018
</p>,
                        "className": "App__event",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <p>
                          February 25, 2018
</p>,
                        "className": "App__event",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="App__event"
>
                        <p>
                                                February 25, 2018
                        </p>
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <h1>
                      Countdown for
</h1>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "h1",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <h1>
                        Countdown for
</h1>,
                      <div
                        className="App__event"
>
                        <p>
                                                February 25, 2018
                        </p>
</div>,
                    ],
                    "className": "App__header",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <h1>
                        Countdown for
</h1>,
                      <div
                        className="App__event"
>
                        <p>
                                                February 25, 2018
                        </p>
</div>,
                    ],
                    "className": "App__header",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": [Circular],
                  "stateNode": <header
                    class="App__header"
>
                    <h1>
                                        Countdown for
                    </h1>
                    <div
                                        class="App__event"
                    >
                                        <p>
                                                            February 25, 2018
                                        </p>
                    </div>
</header>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "header",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": Array [
                    <header
                      className="App__header"
>
                      <h1>
                                            Countdown for
                      </h1>
                      <div
                                            className="App__event"
                      >
                                            <p>
                                                                  February 25, 2018
                                            </p>
                      </div>
</header>,
                    <Clock
                      deadline="February 25, 2018"
/>,
                    <section
                      className="Add-Event"
>
                      <form
                                            className="Add-Event__form"
                      >
                                            <input
                                                                  onChange={[Function]}
                                                                  type="text"
                                            />
                                            <button
                                                                  onClick={[Function]}
                                            >
                                                                  Send
                                            </button>
                      </form>
</section>,
                  ],
                  "className": "App",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <header
                      className="App__header"
>
                      <h1>
                                            Countdown for
                      </h1>
                      <div
                                            className="App__event"
                      >
                                            <p>
                                                                  February 25, 2018
                                            </p>
                      </div>
</header>,
                    <Clock
                      deadline="February 25, 2018"
/>,
                    <section
                      className="Add-Event"
>
                      <form
                                            className="Add-Event__form"
                      >
                                            <input
                                                                  onChange={[Function]}
                                                                  type="text"
                                            />
                                            <button
                                                                  onClick={[Function]}
                                            >
                                                                  Send
                                            </button>
                      </form>
</section>,
                  ],
                  "className": "App",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <div
                  class="App"
>
                  <header
                                    class="App__header"
                  >
                                    <h1>
                                                      Countdown for
                                    </h1>
                                    <div
                                                      class="App__event"
                                    >
                                                      <p>
                                                                        February 25, 2018
                                                      </p>
                                    </div>
                  </header>
                  <section
                                    class="Clock"
                  >
                                    <div
                                                      class="Clock__days"
                                    >
                                                      0 day
                                    </div>
                                    <div
                                                      class="Clock__hours"
                                    >
                                                      0 hour
                                    </div>
                                    <div
                                                      class="Clock__minutes"
                                    >
                                                      0 minute
                                    </div>
                                    <div
                                                      class="Clock__seconds"
                                    >
                                                      0 second
                                    </div>
                  </section>
                  <section
                                    class="Add-Event"
                  >
                                    <form
                                                      class="Add-Event__form"
                                    >
                                                      <input
                                                                        type="text"
                                                      />
                                                      <button>
                                                                        Send
                                                      </button>
                                    </form>
                  </section>
</div>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "div",
                "updateQueue": null,
              },
              "selfBaseTime": 0,
              "sibling": FiberNode {
                "_debugID": 9,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 28,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 18,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 29,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 19,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 30,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "onChange": [Function],
                      "type": "text",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "onChange": [Function],
                      "type": "text",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 20,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 31,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Send",
                        "onClick": [Function],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "Send",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <button>
                        Send
</button>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "button",
                      "updateQueue": null,
                    },
                    "stateNode": <input
                      type="text"
/>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <input
                        onChange={[Function]}
                        type="text"
/>,
                      <button
                        onClick={[Function]}
>
                        Send
</button>,
                    ],
                    "className": "Add-Event__form",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <input
                        onChange={[Function]}
                        type="text"
/>,
                      <button
                        onClick={[Function]}
>
                        Send
</button>,
                    ],
                    "className": "Add-Event__form",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <form
                    class="Add-Event__form"
>
                    <input
                                        type="text"
                    />
                    <button>
                                        Send
                    </button>
</form>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "form",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 2,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <form
                    className="Add-Event__form"
>
                    <input
                                        onChange={[Function]}
                                        type="text"
                    />
                    <button
                                        onClick={[Function]}
                    >
                                        Send
                    </button>
</form>,
                  "className": "Add-Event",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <form
                    className="Add-Event__form"
>
                    <input
                                        onChange={[Function]}
                                        type="text"
                    />
                    <button
                                        onClick={[Function]}
                    >
                                        Send
                    </button>
</form>,
                  "className": "Add-Event",
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 6,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 20,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 7,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 21,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 10,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 22,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Countdown for",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "Countdown for",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": FiberNode {
                        "_debugID": 11,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                          "lineNumber": 23,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 12,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                            "lineNumber": 24,
                          },
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "February 25, 2018",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "February 25, 2018",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": <p>
                            February 25, 2018
</p>,
                          "tag": 5,
                          "treeBaseTime": 0,
                          "type": "p",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <p>
                            February 25, 2018
</p>,
                          "className": "App__event",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <p>
                            February 25, 2018
</p>,
                          "className": "App__event",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="App__event"
>
                          <p>
                                                    February 25, 2018
                          </p>
</div>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <h1>
                        Countdown for
</h1>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "h1",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <h1>
                          Countdown for
</h1>,
                        <div
                          className="App__event"
>
                          <p>
                                                    February 25, 2018
                          </p>
</div>,
                      ],
                      "className": "App__header",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <h1>
                          Countdown for
</h1>,
                        <div
                          className="App__event"
>
                          <p>
                                                    February 25, 2018
                          </p>
</div>,
                      ],
                      "className": "App__header",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": [Circular],
                    "stateNode": <header
                      class="App__header"
>
                      <h1>
                                            Countdown for
                      </h1>
                      <div
                                            class="App__event"
                      >
                                            <p>
                                                                  February 25, 2018
                                            </p>
                      </div>
</header>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "header",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": Array [
                      <header
                        className="App__header"
>
                        <h1>
                                                Countdown for
                        </h1>
                        <div
                                                className="App__event"
                        >
                                                <p>
                                                                        February 25, 2018
                                                </p>
                        </div>
</header>,
                      <Clock
                        deadline="February 25, 2018"
/>,
                      <section
                        className="Add-Event"
>
                        <form
                                                className="Add-Event__form"
                        >
                                                <input
                                                                        onChange={[Function]}
                                                                        type="text"
                                                />
                                                <button
                                                                        onClick={[Function]}
                                                >
                                                                        Send
                                                </button>
                        </form>
</section>,
                    ],
                    "className": "App",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <header
                        className="App__header"
>
                        <h1>
                                                Countdown for
                        </h1>
                        <div
                                                className="App__event"
                        >
                                                <p>
                                                                        February 25, 2018
                                                </p>
                        </div>
</header>,
                      <Clock
                        deadline="February 25, 2018"
/>,
                      <section
                        className="Add-Event"
>
                        <form
                                                className="Add-Event__form"
                        >
                                                <input
                                                                        onChange={[Function]}
                                                                        type="text"
                                                />
                                                <button
                                                                        onClick={[Function]}
                                                >
                                                                        Send
                                                </button>
                        </form>
</section>,
                    ],
                    "className": "App",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="App"
>
                    <header
                                        class="App__header"
                    >
                                        <h1>
                                                            Countdown for
                                        </h1>
                                        <div
                                                            class="App__event"
                                        >
                                                            <p>
                                                                                February 25, 2018
                                                            </p>
                                        </div>
                    </header>
                    <section
                                        class="Clock"
                    >
                                        <div
                                                            class="Clock__days"
                                        >
                                                            0 day
                                        </div>
                                        <div
                                                            class="Clock__hours"
                                        >
                                                            0 hour
                                        </div>
                                        <div
                                                            class="Clock__minutes"
                                        >
                                                            0 minute
                                        </div>
                                        <div
                                                            class="Clock__seconds"
                                        >
                                                            0 second
                                        </div>
                    </section>
                    <section
                                        class="Add-Event"
                    >
                                        <form
                                                            class="Add-Event__form"
                                        >
                                                            <input
                                                                                type="text"
                                                            />
                                                            <button>
                                                                                Send
                                                            </button>
                                        </form>
                    </section>
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <section
                  class="Add-Event"
>
                  <form
                                    class="Add-Event__form"
                  >
                                    <input
                                                      type="text"
                                    />
                                    <button>
                                                      Send
                                    </button>
                  </form>
</section>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "section",
                "updateQueue": null,
              },
              "stateNode": Clock {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "intervalId": 2,
                "props": Object {
                  "deadline": "February 25, 2018",
                },
                "refs": Object {},
                "state": Object {
                  "days": 0,
                  "deadline": "",
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 0,
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseTime": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={Object {}}
/>,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                                class="App"
                >
                                <header
                                                class="App__header"
                                >
                                                <h1>
                                                                Countdown for
                                                </h1>
                                                <div
                                                                class="App__event"
                                                >
                                                                <p>
                                                                                February 25, 2018
                                                                </p>
                                                </div>
                                </header>
                                <section
                                                class="Clock"
                                >
                                                <div
                                                                class="Clock__days"
                                                >
                                                                0 day
                                                </div>
                                                <div
                                                                class="Clock__hours"
                                                >
                                                                0 hour
                                                </div>
                                                <div
                                                                class="Clock__minutes"
                                                >
                                                                0 minute
                                                </div>
                                                <div
                                                                class="Clock__seconds"
                                                >
                                                                0 second
                                                </div>
                                </section>
                                <section
                                                class="Add-Event"
                                >
                                                <form
                                                                class="Add-Event__form"
                                                >
                                                                <input
                                                                                type="text"
                                                                />
                                                                <button>
                                                                                Send
                                                                </button>
                                                </form>
                                </section>
                </div>
</div>,
              "context": Object {},
              "current": [Circular],
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "treeBaseTime": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
/>,
              },
              "expirationTime": 0,
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {},
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "selfBaseTime": 0,
        "sibling": null,
        "stateNode": [Circular],
        "tag": 2,
        "treeBaseTime": 0,
        "type": [Function],
        "updateQueue": null,
      },
      "_reactInternalInstance": Object {},
      "_setNewDeadLine": [Function],
      "context": Object {},
      "props": Object {},
      "refs": Object {},
      "state": Object {
        "deadline": "February 25, 2018",
        "newDeadline": "",
      },
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {},
    "ref": null,
    "rendered": Object {
      "instance": <div
        class="App"
>
        <header
                class="App__header"
        >
                <h1>
                        Countdown for
                </h1>
                <div
                        class="App__event"
                >
                        <p>
                                February 25, 2018
                        </p>
                </div>
        </header>
        <section
                class="Clock"
        >
                <div
                        class="Clock__days"
                >
                        0 day
                </div>
                <div
                        class="Clock__hours"
                >
                        0 hour
                </div>
                <div
                        class="Clock__minutes"
                >
                        0 minute
                </div>
                <div
                        class="Clock__seconds"
                >
                        0 second
                </div>
        </section>
        <section
                class="Add-Event"
        >
                <form
                        class="Add-Event__form"
                >
                        <input
                                type="text"
                        />
                        <button>
                                Send
                        </button>
                </form>
        </section>
</div>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header
            className="App__header"
>
            <h1>
                        Countdown for
            </h1>
            <div
                        className="App__event"
            >
                        <p>
                                    February 25, 2018
                        </p>
            </div>
</header>,
          <Clock
            deadline="February 25, 2018"
/>,
          <section
            className="Add-Event"
>
            <form
                        className="Add-Event__form"
            >
                        <input
                                    onChange={[Function]}
                                    type="text"
                        />
                        <button
                                    onClick={[Function]}
                        >
                                    Send
                        </button>
            </form>
</section>,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <header
            class="App__header"
>
            <h1>
                        Countdown for
            </h1>
            <div
                        class="App__event"
            >
                        <p>
                                    February 25, 2018
                        </p>
            </div>
</header>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h1>
                Countdown for
</h1>,
              <div
                className="App__event"
>
                <p>
                                February 25, 2018
                </p>
</div>,
            ],
            "className": "App__header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <h1>
                Countdown for
</h1>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Countdown for",
              },
              "ref": null,
              "rendered": Array [
                "Countdown for",
              ],
              "type": "h1",
            },
            Object {
              "instance": <div
                class="App__event"
>
                <p>
                                February 25, 2018
                </p>
</div>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <p>
                  February 25, 2018
</p>,
                "className": "App__event",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <p>
                    February 25, 2018
</p>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "February 25, 2018",
                  },
                  "ref": null,
                  "rendered": Array [
                    "February 25, 2018",
                  ],
                  "type": "p",
                },
              ],
              "type": "div",
            },
          ],
          "type": "header",
        },
        Object {
          "instance": Clock {
            "_reactInternalFiber": FiberNode {
              "_debugID": 8,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": FiberNode {
                "_debugID": 5,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 4,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {},
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {},
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {},
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": [Circular],
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 1,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                                                    class="App"
                          >
                                                    <header
                                                                              class="App__header"
                                                    >
                                                                              <h1>
                                                                                                        Countdown for
                                                                              </h1>
                                                                              <div
                                                                                                        class="App__event"
                                                                              >
                                                                                                        <p>
                                                                                                                                  February 25, 2018
                                                                                                        </p>
                                                                              </div>
                                                    </header>
                                                    <section
                                                                              class="Clock"
                                                    >
                                                                              <div
                                                                                                        class="Clock__days"
                                                                              >
                                                                                                        0 day
                                                                              </div>
                                                                              <div
                                                                                                        class="Clock__hours"
                                                                              >
                                                                                                        0 hour
                                                                              </div>
                                                                              <div
                                                                                                        class="Clock__minutes"
                                                                              >
                                                                                                        0 minute
                                                                              </div>
                                                                              <div
                                                                                                        class="Clock__seconds"
                                                                              >
                                                                                                        0 second
                                                                              </div>
                                                    </section>
                                                    <section
                                                                              class="Add-Event"
                                                    >
                                                                              <form
                                                                                                        class="Add-Event__form"
                                                                              >
                                                                                                        <input
                                                                                                                                  type="text"
                                                                                                        />
                                                                                                        <button>
                                                                                                                                  Send
                                                                                                        </button>
                                                                              </form>
                                                    </section>
                          </div>
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "treeBaseTime": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "expirationTime": 1,
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
/>,
                          },
                          "tag": 0,
                        },
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
/>,
                          },
                          "tag": 0,
                        },
                      },
                    },
                    "child": [Circular],
                    "effectTag": 32,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
/>,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div
                                                class="App"
                        >
                                                <header
                                                                        class="App__header"
                                                >
                                                                        <h1>
                                                                                                Countdown for
                                                                        </h1>
                                                                        <div
                                                                                                class="App__event"
                                                                        >
                                                                                                <p>
                                                                                                                        February 25, 2018
                                                                                                </p>
                                                                        </div>
                                                </header>
                                                <section
                                                                        class="Clock"
                                                >
                                                                        <div
                                                                                                class="Clock__days"
                                                                        >
                                                                                                0 day
                                                                        </div>
                                                                        <div
                                                                                                class="Clock__hours"
                                                                        >
                                                                                                0 hour
                                                                        </div>
                                                                        <div
                                                                                                class="Clock__minutes"
                                                                        >
                                                                                                0 minute
                                                                        </div>
                                                                        <div
                                                                                                class="Clock__seconds"
                                                                        >
                                                                                                0 second
                                                                        </div>
                                                </section>
                                                <section
                                                                        class="Add-Event"
                                                >
                                                                        <form
                                                                                                class="Add-Event__form"
                                                                        >
                                                                                                <input
                                                                                                                        type="text"
                                                                                                />
                                                                                                <button>
                                                                                                                        Send
                                                                                                </button>
                                                                        </form>
                                                </section>
                        </div>
</div>,
                      "context": Object {},
                      "current": [Circular],
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "treeBaseTime": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={Object {}}
/>,
                      },
                      "expirationTime": 0,
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": null,
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": null,
                    },
                  },
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {},
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {},
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "treeBaseTime": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 6,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 20,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 7,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 21,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 10,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 22,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Countdown for",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "Countdown for",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": FiberNode {
                        "_debugID": 11,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                          "lineNumber": 23,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 12,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                            "lineNumber": 24,
                          },
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "February 25, 2018",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "February 25, 2018",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": <p>
                            February 25, 2018
</p>,
                          "tag": 5,
                          "treeBaseTime": 0,
                          "type": "p",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <p>
                            February 25, 2018
</p>,
                          "className": "App__event",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <p>
                            February 25, 2018
</p>,
                          "className": "App__event",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="App__event"
>
                          <p>
                                                    February 25, 2018
                          </p>
</div>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <h1>
                        Countdown for
</h1>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "h1",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <h1>
                          Countdown for
</h1>,
                        <div
                          className="App__event"
>
                          <p>
                                                    February 25, 2018
                          </p>
</div>,
                      ],
                      "className": "App__header",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <h1>
                          Countdown for
</h1>,
                        <div
                          className="App__event"
>
                          <p>
                                                    February 25, 2018
                          </p>
</div>,
                      ],
                      "className": "App__header",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": [Circular],
                    "stateNode": <header
                      class="App__header"
>
                      <h1>
                                            Countdown for
                      </h1>
                      <div
                                            class="App__event"
                      >
                                            <p>
                                                                  February 25, 2018
                                            </p>
                      </div>
</header>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "header",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": Array [
                      <header
                        className="App__header"
>
                        <h1>
                                                Countdown for
                        </h1>
                        <div
                                                className="App__event"
                        >
                                                <p>
                                                                        February 25, 2018
                                                </p>
                        </div>
</header>,
                      <Clock
                        deadline="February 25, 2018"
/>,
                      <section
                        className="Add-Event"
>
                        <form
                                                className="Add-Event__form"
                        >
                                                <input
                                                                        onChange={[Function]}
                                                                        type="text"
                                                />
                                                <button
                                                                        onClick={[Function]}
                                                >
                                                                        Send
                                                </button>
                        </form>
</section>,
                    ],
                    "className": "App",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <header
                        className="App__header"
>
                        <h1>
                                                Countdown for
                        </h1>
                        <div
                                                className="App__event"
                        >
                                                <p>
                                                                        February 25, 2018
                                                </p>
                        </div>
</header>,
                      <Clock
                        deadline="February 25, 2018"
/>,
                      <section
                        className="Add-Event"
>
                        <form
                                                className="Add-Event__form"
                        >
                                                <input
                                                                        onChange={[Function]}
                                                                        type="text"
                                                />
                                                <button
                                                                        onClick={[Function]}
                                                >
                                                                        Send
                                                </button>
                        </form>
</section>,
                    ],
                    "className": "App",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="App"
>
                    <header
                                        class="App__header"
                    >
                                        <h1>
                                                            Countdown for
                                        </h1>
                                        <div
                                                            class="App__event"
                                        >
                                                            <p>
                                                                                February 25, 2018
                                                            </p>
                                        </div>
                    </header>
                    <section
                                        class="Clock"
                    >
                                        <div
                                                            class="Clock__days"
                                        >
                                                            0 day
                                        </div>
                                        <div
                                                            class="Clock__hours"
                                        >
                                                            0 hour
                                        </div>
                                        <div
                                                            class="Clock__minutes"
                                        >
                                                            0 minute
                                        </div>
                                        <div
                                                            class="Clock__seconds"
                                        >
                                                            0 second
                                        </div>
                    </section>
                    <section
                                        class="Add-Event"
                    >
                                        <form
                                                            class="Add-Event__form"
                                        >
                                                            <input
                                                                                type="text"
                                                            />
                                                            <button>
                                                                                Send
                                                            </button>
                                        </form>
                    </section>
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {},
                "memoizedState": Object {
                  "deadline": "February 25, 2018",
                  "newDeadline": "",
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {},
                "ref": null,
                "return": FiberNode {
                  "_debugID": 4,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {},
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {},
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {},
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": [Circular],
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 1,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                                                    class="App"
                          >
                                                    <header
                                                                              class="App__header"
                                                    >
                                                                              <h1>
                                                                                                        Countdown for
                                                                              </h1>
                                                                              <div
                                                                                                        class="App__event"
                                                                              >
                                                                                                        <p>
                                                                                                                                  February 25, 2018
                                                                                                        </p>
                                                                              </div>
                                                    </header>
                                                    <section
                                                                              class="Clock"
                                                    >
                                                                              <div
                                                                                                        class="Clock__days"
                                                                              >
                                                                                                        0 day
                                                                              </div>
                                                                              <div
                                                                                                        class="Clock__hours"
                                                                              >
                                                                                                        0 hour
                                                                              </div>
                                                                              <div
                                                                                                        class="Clock__minutes"
                                                                              >
                                                                                                        0 minute
                                                                              </div>
                                                                              <div
                                                                                                        class="Clock__seconds"
                                                                              >
                                                                                                        0 second
                                                                              </div>
                                                    </section>
                                                    <section
                                                                              class="Add-Event"
                                                    >
                                                                              <form
                                                                                                        class="Add-Event__form"
                                                                              >
                                                                                                        <input
                                                                                                                                  type="text"
                                                                                                        />
                                                                                                        <button>
                                                                                                                                  Send
                                                                                                        </button>
                                                                              </form>
                                                    </section>
                          </div>
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "treeBaseTime": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "expirationTime": 1,
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
/>,
                          },
                          "tag": 0,
                        },
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
/>,
                          },
                          "tag": 0,
                        },
                      },
                    },
                    "child": [Circular],
                    "effectTag": 32,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
/>,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div
                                                class="App"
                        >
                                                <header
                                                                        class="App__header"
                                                >
                                                                        <h1>
                                                                                                Countdown for
                                                                        </h1>
                                                                        <div
                                                                                                class="App__event"
                                                                        >
                                                                                                <p>
                                                                                                                        February 25, 2018
                                                                                                </p>
                                                                        </div>
                                                </header>
                                                <section
                                                                        class="Clock"
                                                >
                                                                        <div
                                                                                                class="Clock__days"
                                                                        >
                                                                                                0 day
                                                                        </div>
                                                                        <div
                                                                                                class="Clock__hours"
                                                                        >
                                                                                                0 hour
                                                                        </div>
                                                                        <div
                                                                                                class="Clock__minutes"
                                                                        >
                                                                                                0 minute
                                                                        </div>
                                                                        <div
                                                                                                class="Clock__seconds"
                                                                        >
                                                                                                0 second
                                                                        </div>
                                                </section>
                                                <section
                                                                        class="Add-Event"
                                                >
                                                                        <form
                                                                                                class="Add-Event__form"
                                                                        >
                                                                                                <input
                                                                                                                        type="text"
                                                                                                />
                                                                                                <button>
                                                                                                                        Send
                                                                                                </button>
                                                                        </form>
                                                </section>
                        </div>
</div>,
                      "context": Object {},
                      "current": [Circular],
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "treeBaseTime": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={Object {}}
/>,
                      },
                      "expirationTime": 0,
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": null,
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": null,
                    },
                  },
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {},
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {},
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "treeBaseTime": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": App {
                  "_handleOnChangeDeadline": [Function],
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "_setNewDeadLine": [Function],
                  "context": Object {},
                  "props": Object {},
                  "refs": Object {},
                  "state": Object {
                    "deadline": "February 25, 2018",
                    "newDeadline": "",
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "treeBaseTime": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                "lineNumber": 27,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 13,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                  "lineNumber": 29,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 14,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                    "lineNumber": 30,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "0 day",
                    "className": "Clock__days",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "0 day",
                    "className": "Clock__days",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 15,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                      "lineNumber": 31,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "0 hour",
                      "className": "Clock__hours",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "0 hour",
                      "className": "Clock__hours",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 16,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                        "lineNumber": 32,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 2,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "0 minute",
                        "className": "Clock__minutes",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "0 minute",
                        "className": "Clock__minutes",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": FiberNode {
                        "_debugID": 17,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                          "lineNumber": 33,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 3,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "0 second",
                          "className": "Clock__seconds",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "0 second",
                          "className": "Clock__seconds",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="Clock__seconds"
>
                          0 second
</div>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <div
                        class="Clock__minutes"
>
                        0 minute
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <div
                      class="Clock__hours"
>
                      0 hour
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <div
                    class="Clock__days"
>
                    0 day
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <div
                      className="Clock__days"
>
                      0 day
</div>,
                    <div
                      className="Clock__hours"
>
                      0 hour
</div>,
                    <div
                      className="Clock__minutes"
>
                      0 minute
</div>,
                    <div
                      className="Clock__seconds"
>
                      0 second
</div>,
                  ],
                  "className": "Clock",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <div
                      className="Clock__days"
>
                      0 day
</div>,
                    <div
                      className="Clock__hours"
>
                      0 hour
</div>,
                    <div
                      className="Clock__minutes"
>
                      0 minute
</div>,
                    <div
                      className="Clock__seconds"
>
                      0 second
</div>,
                  ],
                  "className": "Clock",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <section
                  class="Clock"
>
                  <div
                                    class="Clock__days"
                  >
                                    0 day
                  </div>
                  <div
                                    class="Clock__hours"
                  >
                                    0 hour
                  </div>
                  <div
                                    class="Clock__minutes"
                  >
                                    0 minute
                  </div>
                  <div
                                    class="Clock__seconds"
                  >
                                    0 second
                  </div>
</section>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "section",
                "updateQueue": null,
              },
              "effectTag": 5,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 1,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "deadline": "February 25, 2018",
              },
              "memoizedState": Object {
                "days": 0,
                "deadline": "",
                "hours": 0,
                "minutes": 0,
                "seconds": 0,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "deadline": "February 25, 2018",
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 6,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 5,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 4,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {},
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {},
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {},
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                                                        class="App"
                            >
                                                        <header
                                                                                    class="App__header"
                                                        >
                                                                                    <h1>
                                                                                                                Countdown for
                                                                                    </h1>
                                                                                    <div
                                                                                                                class="App__event"
                                                                                    >
                                                                                                                <p>
                                                                                                                                            February 25, 2018
                                                                                                                </p>
                                                                                    </div>
                                                        </header>
                                                        <section
                                                                                    class="Clock"
                                                        >
                                                                                    <div
                                                                                                                class="Clock__days"
                                                                                    >
                                                                                                                0 day
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__hours"
                                                                                    >
                                                                                                                0 hour
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__minutes"
                                                                                    >
                                                                                                                0 minute
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__seconds"
                                                                                    >
                                                                                                                0 second
                                                                                    </div>
                                                        </section>
                                                        <section
                                                                                    class="Add-Event"
                                                        >
                                                                                    <form
                                                                                                                class="Add-Event__form"
                                                                                    >
                                                                                                                <input
                                                                                                                                            type="text"
                                                                                                                />
                                                                                                                <button>
                                                                                                                                            Send
                                                                                                                </button>
                                                                                    </form>
                                                        </section>
                            </div>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "treeBaseTime": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "expirationTime": 1,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "tag": 0,
                          },
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "tag": 0,
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 32,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={Object {}}
/>,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                                                    class="App"
                          >
                                                    <header
                                                                              class="App__header"
                                                    >
                                                                              <h1>
                                                                                                        Countdown for
                                                                              </h1>
                                                                              <div
                                                                                                        class="App__event"
                                                                              >
                                                                                                        <p>
                                                                                                                                  February 25, 2018
                                                                                                        </p>
                                                                              </div>
                                                    </header>
                                                    <section
                                                                              class="Clock"
                                                    >
                                                                              <div
                                                                                                        class="Clock__days"
                                                                              >
                                                                                                        0 day
                                                                              </div>
                                                                              <div
                                                                                                        class="Clock__hours"
                                                                              >
                                                                                                        0 hour
                                                                              </div>
                                                                              <div
                                                                                                        class="Clock__minutes"
                                                                              >
                                                                                                        0 minute
                                                                              </div>
                                                                              <div
                                                                                                        class="Clock__seconds"
                                                                              >
                                                                                                        0 second
                                                                              </div>
                                                    </section>
                                                    <section
                                                                              class="Add-Event"
                                                    >
                                                                              <form
                                                                                                        class="Add-Event__form"
                                                                              >
                                                                                                        <input
                                                                                                                                  type="text"
                                                                                                        />
                                                                                                        <button>
                                                                                                                                  Send
                                                                                                        </button>
                                                                              </form>
                                                    </section>
                          </div>
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "treeBaseTime": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={Object {}}
/>,
                        },
                        "expirationTime": 0,
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseTime": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {},
                  "memoizedState": Object {
                    "deadline": "February 25, 2018",
                    "newDeadline": "",
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {},
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 4,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {},
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {},
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {},
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                                                        class="App"
                            >
                                                        <header
                                                                                    class="App__header"
                                                        >
                                                                                    <h1>
                                                                                                                Countdown for
                                                                                    </h1>
                                                                                    <div
                                                                                                                class="App__event"
                                                                                    >
                                                                                                                <p>
                                                                                                                                            February 25, 2018
                                                                                                                </p>
                                                                                    </div>
                                                        </header>
                                                        <section
                                                                                    class="Clock"
                                                        >
                                                                                    <div
                                                                                                                class="Clock__days"
                                                                                    >
                                                                                                                0 day
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__hours"
                                                                                    >
                                                                                                                0 hour
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__minutes"
                                                                                    >
                                                                                                                0 minute
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__seconds"
                                                                                    >
                                                                                                                0 second
                                                                                    </div>
                                                        </section>
                                                        <section
                                                                                    class="Add-Event"
                                                        >
                                                                                    <form
                                                                                                                class="Add-Event__form"
                                                                                    >
                                                                                                                <input
                                                                                                                                            type="text"
                                                                                                                />
                                                                                                                <button>
                                                                                                                                            Send
                                                                                                                </button>
                                                                                    </form>
                                                        </section>
                            </div>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "treeBaseTime": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "expirationTime": 1,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "tag": 0,
                          },
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "tag": 0,
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 32,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={Object {}}
/>,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                                                    class="App"
                          >
                                                    <header
                                                                              class="App__header"
                                                    >
                                                                              <h1>
                                                                                                        Countdown for
                                                                              </h1>
                                                                              <div
                                                                                                        class="App__event"
                                                                              >
                                                                                                        <p>
                                                                                                                                  February 25, 2018
                                                                                                        </p>
                                                                              </div>
                                                    </header>
                                                    <section
                                                                              class="Clock"
                                                    >
                                                                              <div
                                                                                                        class="Clock__days"
                                                                              >
                                                                                                        0 day
                                                                              </div>
                                                                              <div
                                                                                                        class="Clock__hours"
                                                                              >
                                                                                                        0 hour
                                                                              </div>
                                                                              <div
                                                                                                        class="Clock__minutes"
                                                                              >
                                                                                                        0 minute
                                                                              </div>
                                                                              <div
                                                                                                        class="Clock__seconds"
                                                                              >
                                                                                                        0 second
                                                                              </div>
                                                    </section>
                                                    <section
                                                                              class="Add-Event"
                                                    >
                                                                              <form
                                                                                                        class="Add-Event__form"
                                                                              >
                                                                                                        <input
                                                                                                                                  type="text"
                                                                                                        />
                                                                                                        <button>
                                                                                                                                  Send
                                                                                                        </button>
                                                                              </form>
                                                    </section>
                          </div>
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "treeBaseTime": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={Object {}}
/>,
                        },
                        "expirationTime": 0,
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseTime": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": App {
                    "_handleOnChangeDeadline": [Function],
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "_setNewDeadLine": [Function],
                    "context": Object {},
                    "props": Object {},
                    "refs": Object {},
                    "state": Object {
                      "deadline": "February 25, 2018",
                      "newDeadline": "",
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "treeBaseTime": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 20,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 5,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="App"
                              >
                                                            <header
                                                                                          class="App__header"
                                                            >
                                                                                          <h1>
                                                                                                                        Countdown for
                                                                                          </h1>
                                                                                          <div
                                                                                                                        class="App__event"
                                                                                          >
                                                                                                                        <p>
                                                                                                                                                      February 25, 2018
                                                                                                                        </p>
                                                                                          </div>
                                                            </header>
                                                            <section
                                                                                          class="Clock"
                                                            >
                                                                                          <div
                                                                                                                        class="Clock__days"
                                                                                          >
                                                                                                                        0 day
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__hours"
                                                                                          >
                                                                                                                        0 hour
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__minutes"
                                                                                          >
                                                                                                                        0 minute
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__seconds"
                                                                                          >
                                                                                                                        0 second
                                                                                          </div>
                                                            </section>
                                                            <section
                                                                                          class="Add-Event"
                                                            >
                                                                                          <form
                                                                                                                        class="Add-Event__form"
                                                                                          >
                                                                                                                        <input
                                                                                                                                                      type="text"
                                                                                                                        />
                                                                                                                        <button>
                                                                                                                                                      Send
                                                                                                                        </button>
                                                                                          </form>
                                                            </section>
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "treeBaseTime": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "expirationTime": 1,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "tag": 0,
                            },
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "tag": 0,
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={Object {}}
/>,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                                                        class="App"
                            >
                                                        <header
                                                                                    class="App__header"
                                                        >
                                                                                    <h1>
                                                                                                                Countdown for
                                                                                    </h1>
                                                                                    <div
                                                                                                                class="App__event"
                                                                                    >
                                                                                                                <p>
                                                                                                                                            February 25, 2018
                                                                                                                </p>
                                                                                    </div>
                                                        </header>
                                                        <section
                                                                                    class="Clock"
                                                        >
                                                                                    <div
                                                                                                                class="Clock__days"
                                                                                    >
                                                                                                                0 day
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__hours"
                                                                                    >
                                                                                                                0 hour
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__minutes"
                                                                                    >
                                                                                                                0 minute
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__seconds"
                                                                                    >
                                                                                                                0 second
                                                                                    </div>
                                                        </section>
                                                        <section
                                                                                    class="Add-Event"
                                                        >
                                                                                    <form
                                                                                                                class="Add-Event__form"
                                                                                    >
                                                                                                                <input
                                                                                                                                            type="text"
                                                                                                                />
                                                                                                                <button>
                                                                                                                                            Send
                                                                                                                </button>
                                                                                    </form>
                                                        </section>
                            </div>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "treeBaseTime": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
/>,
                          },
                          "expirationTime": 0,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": null,
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": null,
                        },
                      },
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseTime": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {},
                    "memoizedState": Object {
                      "deadline": "February 25, 2018",
                      "newDeadline": "",
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {},
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="App"
                              >
                                                            <header
                                                                                          class="App__header"
                                                            >
                                                                                          <h1>
                                                                                                                        Countdown for
                                                                                          </h1>
                                                                                          <div
                                                                                                                        class="App__event"
                                                                                          >
                                                                                                                        <p>
                                                                                                                                                      February 25, 2018
                                                                                                                        </p>
                                                                                          </div>
                                                            </header>
                                                            <section
                                                                                          class="Clock"
                                                            >
                                                                                          <div
                                                                                                                        class="Clock__days"
                                                                                          >
                                                                                                                        0 day
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__hours"
                                                                                          >
                                                                                                                        0 hour
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__minutes"
                                                                                          >
                                                                                                                        0 minute
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__seconds"
                                                                                          >
                                                                                                                        0 second
                                                                                          </div>
                                                            </section>
                                                            <section
                                                                                          class="Add-Event"
                                                            >
                                                                                          <form
                                                                                                                        class="Add-Event__form"
                                                                                          >
                                                                                                                        <input
                                                                                                                                                      type="text"
                                                                                                                        />
                                                                                                                        <button>
                                                                                                                                                      Send
                                                                                                                        </button>
                                                                                          </form>
                                                            </section>
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "treeBaseTime": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "expirationTime": 1,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "tag": 0,
                            },
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "tag": 0,
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={Object {}}
/>,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                                                        class="App"
                            >
                                                        <header
                                                                                    class="App__header"
                                                        >
                                                                                    <h1>
                                                                                                                Countdown for
                                                                                    </h1>
                                                                                    <div
                                                                                                                class="App__event"
                                                                                    >
                                                                                                                <p>
                                                                                                                                            February 25, 2018
                                                                                                                </p>
                                                                                    </div>
                                                        </header>
                                                        <section
                                                                                    class="Clock"
                                                        >
                                                                                    <div
                                                                                                                class="Clock__days"
                                                                                    >
                                                                                                                0 day
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__hours"
                                                                                    >
                                                                                                                0 hour
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__minutes"
                                                                                    >
                                                                                                                0 minute
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__seconds"
                                                                                    >
                                                                                                                0 second
                                                                                    </div>
                                                        </section>
                                                        <section
                                                                                    class="Add-Event"
                                                        >
                                                                                    <form
                                                                                                                class="Add-Event__form"
                                                                                    >
                                                                                                                <input
                                                                                                                                            type="text"
                                                                                                                />
                                                                                                                <button>
                                                                                                                                            Send
                                                                                                                </button>
                                                                                    </form>
                                                        </section>
                            </div>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "treeBaseTime": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
/>,
                          },
                          "expirationTime": 0,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": null,
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": null,
                        },
                      },
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseTime": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": App {
                      "_handleOnChangeDeadline": [Function],
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "_setNewDeadLine": [Function],
                      "context": Object {},
                      "props": Object {},
                      "refs": Object {},
                      "state": Object {
                        "deadline": "February 25, 2018",
                        "newDeadline": "",
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseTime": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 21,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 5,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="App"
                                >
                                                                <header
                                                                                                class="App__header"
                                                                >
                                                                                                <h1>
                                                                                                                                Countdown for
                                                                                                </h1>
                                                                                                <div
                                                                                                                                class="App__event"
                                                                                                >
                                                                                                                                <p>
                                                                                                                                                                February 25, 2018
                                                                                                                                </p>
                                                                                                </div>
                                                                </header>
                                                                <section
                                                                                                class="Clock"
                                                                >
                                                                                                <div
                                                                                                                                class="Clock__days"
                                                                                                >
                                                                                                                                0 day
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__hours"
                                                                                                >
                                                                                                                                0 hour
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__minutes"
                                                                                                >
                                                                                                                                0 minute
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__seconds"
                                                                                                >
                                                                                                                                0 second
                                                                                                </div>
                                                                </section>
                                                                <section
                                                                                                class="Add-Event"
                                                                >
                                                                                                <form
                                                                                                                                class="Add-Event__form"
                                                                                                >
                                                                                                                                <input
                                                                                                                                                                type="text"
                                                                                                                                />
                                                                                                                                <button>
                                                                                                                                                                Send
                                                                                                                                </button>
                                                                                                </form>
                                                                </section>
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "treeBaseTime": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "expirationTime": 1,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "tag": 0,
                              },
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "tag": 0,
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="App"
                              >
                                                            <header
                                                                                          class="App__header"
                                                            >
                                                                                          <h1>
                                                                                                                        Countdown for
                                                                                          </h1>
                                                                                          <div
                                                                                                                        class="App__event"
                                                                                          >
                                                                                                                        <p>
                                                                                                                                                      February 25, 2018
                                                                                                                        </p>
                                                                                          </div>
                                                            </header>
                                                            <section
                                                                                          class="Clock"
                                                            >
                                                                                          <div
                                                                                                                        class="Clock__days"
                                                                                          >
                                                                                                                        0 day
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__hours"
                                                                                          >
                                                                                                                        0 hour
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__minutes"
                                                                                          >
                                                                                                                        0 minute
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__seconds"
                                                                                          >
                                                                                                                        0 second
                                                                                          </div>
                                                            </section>
                                                            <section
                                                                                          class="Add-Event"
                                                            >
                                                                                          <form
                                                                                                                        class="Add-Event__form"
                                                                                          >
                                                                                                                        <input
                                                                                                                                                      type="text"
                                                                                                                        />
                                                                                                                        <button>
                                                                                                                                                      Send
                                                                                                                        </button>
                                                                                          </form>
                                                            </section>
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "treeBaseTime": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "expirationTime": 0,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": null,
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": null,
                          },
                        },
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {},
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseTime": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {},
                      "memoizedState": Object {
                        "deadline": "February 25, 2018",
                        "newDeadline": "",
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {},
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="App"
                                >
                                                                <header
                                                                                                class="App__header"
                                                                >
                                                                                                <h1>
                                                                                                                                Countdown for
                                                                                                </h1>
                                                                                                <div
                                                                                                                                class="App__event"
                                                                                                >
                                                                                                                                <p>
                                                                                                                                                                February 25, 2018
                                                                                                                                </p>
                                                                                                </div>
                                                                </header>
                                                                <section
                                                                                                class="Clock"
                                                                >
                                                                                                <div
                                                                                                                                class="Clock__days"
                                                                                                >
                                                                                                                                0 day
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__hours"
                                                                                                >
                                                                                                                                0 hour
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__minutes"
                                                                                                >
                                                                                                                                0 minute
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__seconds"
                                                                                                >
                                                                                                                                0 second
                                                                                                </div>
                                                                </section>
                                                                <section
                                                                                                class="Add-Event"
                                                                >
                                                                                                <form
                                                                                                                                class="Add-Event__form"
                                                                                                >
                                                                                                                                <input
                                                                                                                                                                type="text"
                                                                                                                                />
                                                                                                                                <button>
                                                                                                                                                                Send
                                                                                                                                </button>
                                                                                                </form>
                                                                </section>
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "treeBaseTime": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "expirationTime": 1,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "tag": 0,
                              },
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "tag": 0,
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="App"
                              >
                                                            <header
                                                                                          class="App__header"
                                                            >
                                                                                          <h1>
                                                                                                                        Countdown for
                                                                                          </h1>
                                                                                          <div
                                                                                                                        class="App__event"
                                                                                          >
                                                                                                                        <p>
                                                                                                                                                      February 25, 2018
                                                                                                                        </p>
                                                                                          </div>
                                                            </header>
                                                            <section
                                                                                          class="Clock"
                                                            >
                                                                                          <div
                                                                                                                        class="Clock__days"
                                                                                          >
                                                                                                                        0 day
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__hours"
                                                                                          >
                                                                                                                        0 hour
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__minutes"
                                                                                          >
                                                                                                                        0 minute
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__seconds"
                                                                                          >
                                                                                                                        0 second
                                                                                          </div>
                                                            </section>
                                                            <section
                                                                                          class="Add-Event"
                                                            >
                                                                                          <form
                                                                                                                        class="Add-Event__form"
                                                                                          >
                                                                                                                        <input
                                                                                                                                                      type="text"
                                                                                                                        />
                                                                                                                        <button>
                                                                                                                                                      Send
                                                                                                                        </button>
                                                                                          </form>
                                                            </section>
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "treeBaseTime": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "expirationTime": 0,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": null,
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": null,
                          },
                        },
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {},
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseTime": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": App {
                        "_handleOnChangeDeadline": [Function],
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "_setNewDeadLine": [Function],
                        "context": Object {},
                        "props": Object {},
                        "refs": Object {},
                        "state": Object {
                          "deadline": "February 25, 2018",
                          "newDeadline": "",
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseTime": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 22,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Countdown for",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Countdown for",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 11,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 5,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {},
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": 0,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                                                    class="App"
                                  >
                                                                    <header
                                                                                                      class="App__header"
                                                                    >
                                                                                                      <h1>
                                                                                                                                        Countdown for
                                                                                                      </h1>
                                                                                                      <div
                                                                                                                                        class="App__event"
                                                                                                      >
                                                                                                                                        <p>
                                                                                                                                                                          February 25, 2018
                                                                                                                                        </p>
                                                                                                      </div>
                                                                    </header>
                                                                    <section
                                                                                                      class="Clock"
                                                                    >
                                                                                                      <div
                                                                                                                                        class="Clock__days"
                                                                                                      >
                                                                                                                                        0 day
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__hours"
                                                                                                      >
                                                                                                                                        0 hour
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__minutes"
                                                                                                      >
                                                                                                                                        0 minute
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__seconds"
                                                                                                      >
                                                                                                                                        0 second
                                                                                                      </div>
                                                                    </section>
                                                                    <section
                                                                                                      class="Add-Event"
                                                                    >
                                                                                                      <form
                                                                                                                                        class="Add-Event__form"
                                                                                                      >
                                                                                                                                        <input
                                                                                                                                                                          type="text"
                                                                                                                                        />
                                                                                                                                        <button>
                                                                                                                                                                          Send
                                                                                                                                        </button>
                                                                                                      </form>
                                                                    </section>
                                  </div>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "treeBaseTime": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "expirationTime": 1,
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={Object {}}
/>,
                                  },
                                  "tag": 0,
                                },
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={Object {}}
/>,
                                  },
                                  "tag": 0,
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="App"
                                >
                                                                <header
                                                                                                class="App__header"
                                                                >
                                                                                                <h1>
                                                                                                                                Countdown for
                                                                                                </h1>
                                                                                                <div
                                                                                                                                class="App__event"
                                                                                                >
                                                                                                                                <p>
                                                                                                                                                                February 25, 2018
                                                                                                                                </p>
                                                                                                </div>
                                                                </header>
                                                                <section
                                                                                                class="Clock"
                                                                >
                                                                                                <div
                                                                                                                                class="Clock__days"
                                                                                                >
                                                                                                                                0 day
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__hours"
                                                                                                >
                                                                                                                                0 hour
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__minutes"
                                                                                                >
                                                                                                                                0 minute
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__seconds"
                                                                                                >
                                                                                                                                0 second
                                                                                                </div>
                                                                </section>
                                                                <section
                                                                                                class="Add-Event"
                                                                >
                                                                                                <form
                                                                                                                                class="Add-Event__form"
                                                                                                >
                                                                                                                                <input
                                                                                                                                                                type="text"
                                                                                                                                />
                                                                                                                                <button>
                                                                                                                                                                Send
                                                                                                                                </button>
                                                                                                </form>
                                                                </section>
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "treeBaseTime": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "expirationTime": 0,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": null,
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": null,
                            },
                          },
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {},
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {},
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseTime": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {},
                        "memoizedState": Object {
                          "deadline": "February 25, 2018",
                          "newDeadline": "",
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {},
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {},
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": 0,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                                                    class="App"
                                  >
                                                                    <header
                                                                                                      class="App__header"
                                                                    >
                                                                                                      <h1>
                                                                                                                                        Countdown for
                                                                                                      </h1>
                                                                                                      <div
                                                                                                                                        class="App__event"
                                                                                                      >
                                                                                                                                        <p>
                                                                                                                                                                          February 25, 2018
                                                                                                                                        </p>
                                                                                                      </div>
                                                                    </header>
                                                                    <section
                                                                                                      class="Clock"
                                                                    >
                                                                                                      <div
                                                                                                                                        class="Clock__days"
                                                                                                      >
                                                                                                                                        0 day
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__hours"
                                                                                                      >
                                                                                                                                        0 hour
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__minutes"
                                                                                                      >
                                                                                                                                        0 minute
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__seconds"
                                                                                                      >
                                                                                                                                        0 second
                                                                                                      </div>
                                                                    </section>
                                                                    <section
                                                                                                      class="Add-Event"
                                                                    >
                                                                                                      <form
                                                                                                                                        class="Add-Event__form"
                                                                                                      >
                                                                                                                                        <input
                                                                                                                                                                          type="text"
                                                                                                                                        />
                                                                                                                                        <button>
                                                                                                                                                                          Send
                                                                                                                                        </button>
                                                                                                      </form>
                                                                    </section>
                                  </div>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "treeBaseTime": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "expirationTime": 1,
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={Object {}}
/>,
                                  },
                                  "tag": 0,
                                },
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={Object {}}
/>,
                                  },
                                  "tag": 0,
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="App"
                                >
                                                                <header
                                                                                                class="App__header"
                                                                >
                                                                                                <h1>
                                                                                                                                Countdown for
                                                                                                </h1>
                                                                                                <div
                                                                                                                                class="App__event"
                                                                                                >
                                                                                                                                <p>
                                                                                                                                                                February 25, 2018
                                                                                                                                </p>
                                                                                                </div>
                                                                </header>
                                                                <section
                                                                                                class="Clock"
                                                                >
                                                                                                <div
                                                                                                                                class="Clock__days"
                                                                                                >
                                                                                                                                0 day
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__hours"
                                                                                                >
                                                                                                                                0 hour
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__minutes"
                                                                                                >
                                                                                                                                0 minute
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__seconds"
                                                                                                >
                                                                                                                                0 second
                                                                                                </div>
                                                                </section>
                                                                <section
                                                                                                class="Add-Event"
                                                                >
                                                                                                <form
                                                                                                                                class="Add-Event__form"
                                                                                                >
                                                                                                                                <input
                                                                                                                                                                type="text"
                                                                                                                                />
                                                                                                                                <button>
                                                                                                                                                                Send
                                                                                                                                </button>
                                                                                                </form>
                                                                </section>
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "treeBaseTime": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "expirationTime": 0,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": null,
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": null,
                            },
                          },
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {},
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {},
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseTime": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": App {
                          "_handleOnChangeDeadline": [Function],
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "_setNewDeadLine": [Function],
                          "context": Object {},
                          "props": Object {},
                          "refs": Object {},
                          "state": Object {
                            "deadline": "February 25, 2018",
                            "newDeadline": "",
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseTime": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 23,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 12,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 5,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 4,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {},
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {},
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {},
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": 0,
                              "alternate": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": 0,
                                "alternate": [Circular],
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseTime": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                                                        class="App"
                                    >
                                                                        <header
                                                                                                            class="App__header"
                                                                        >
                                                                                                            <h1>
                                                                                                                                                Countdown for
                                                                                                            </h1>
                                                                                                            <div
                                                                                                                                                class="App__event"
                                                                                                            >
                                                                                                                                                <p>
                                                                                                                                                                                    February 25, 2018
                                                                                                                                                </p>
                                                                                                            </div>
                                                                        </header>
                                                                        <section
                                                                                                            class="Clock"
                                                                        >
                                                                                                            <div
                                                                                                                                                class="Clock__days"
                                                                                                            >
                                                                                                                                                0 day
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__hours"
                                                                                                            >
                                                                                                                                                0 hour
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__minutes"
                                                                                                            >
                                                                                                                                                0 minute
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__seconds"
                                                                                                            >
                                                                                                                                                0 second
                                                                                                            </div>
                                                                        </section>
                                                                        <section
                                                                                                            class="Add-Event"
                                                                        >
                                                                                                            <form
                                                                                                                                                class="Add-Event__form"
                                                                                                            >
                                                                                                                                                <input
                                                                                                                                                                                    type="text"
                                                                                                                                                />
                                                                                                                                                <button>
                                                                                                                                                                                    Send
                                                                                                                                                </button>
                                                                                                            </form>
                                                                        </section>
                                    </div>
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "treeBaseTime": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "expirationTime": 1,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={Object {}}
/>,
                                    },
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={Object {}}
/>,
                                    },
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                                                    class="App"
                                  >
                                                                    <header
                                                                                                      class="App__header"
                                                                    >
                                                                                                      <h1>
                                                                                                                                        Countdown for
                                                                                                      </h1>
                                                                                                      <div
                                                                                                                                        class="App__event"
                                                                                                      >
                                                                                                                                        <p>
                                                                                                                                                                          February 25, 2018
                                                                                                                                        </p>
                                                                                                      </div>
                                                                    </header>
                                                                    <section
                                                                                                      class="Clock"
                                                                    >
                                                                                                      <div
                                                                                                                                        class="Clock__days"
                                                                                                      >
                                                                                                                                        0 day
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__hours"
                                                                                                      >
                                                                                                                                        0 hour
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__minutes"
                                                                                                      >
                                                                                                                                        0 minute
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__seconds"
                                                                                                      >
                                                                                                                                        0 second
                                                                                                      </div>
                                                                    </section>
                                                                    <section
                                                                                                      class="Add-Event"
                                                                    >
                                                                                                      <form
                                                                                                                                        class="Add-Event__form"
                                                                                                      >
                                                                                                                                        <input
                                                                                                                                                                          type="text"
                                                                                                                                        />
                                                                                                                                        <button>
                                                                                                                                                                          Send
                                                                                                                                        </button>
                                                                                                      </form>
                                                                    </section>
                                  </div>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "treeBaseTime": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "expirationTime": 0,
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {},
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {},
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseTime": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {},
                          "memoizedState": Object {
                            "deadline": "February 25, 2018",
                            "newDeadline": "",
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {},
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 4,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {},
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {},
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {},
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": 0,
                              "alternate": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": 0,
                                "alternate": [Circular],
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseTime": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                                                        class="App"
                                    >
                                                                        <header
                                                                                                            class="App__header"
                                                                        >
                                                                                                            <h1>
                                                                                                                                                Countdown for
                                                                                                            </h1>
                                                                                                            <div
                                                                                                                                                class="App__event"
                                                                                                            >
                                                                                                                                                <p>
                                                                                                                                                                                    February 25, 2018
                                                                                                                                                </p>
                                                                                                            </div>
                                                                        </header>
                                                                        <section
                                                                                                            class="Clock"
                                                                        >
                                                                                                            <div
                                                                                                                                                class="Clock__days"
                                                                                                            >
                                                                                                                                                0 day
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__hours"
                                                                                                            >
                                                                                                                                                0 hour
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__minutes"
                                                                                                            >
                                                                                                                                                0 minute
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__seconds"
                                                                                                            >
                                                                                                                                                0 second
                                                                                                            </div>
                                                                        </section>
                                                                        <section
                                                                                                            class="Add-Event"
                                                                        >
                                                                                                            <form
                                                                                                                                                class="Add-Event__form"
                                                                                                            >
                                                                                                                                                <input
                                                                                                                                                                                    type="text"
                                                                                                                                                />
                                                                                                                                                <button>
                                                                                                                                                                                    Send
                                                                                                                                                </button>
                                                                                                            </form>
                                                                        </section>
                                    </div>
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "treeBaseTime": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "expirationTime": 1,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={Object {}}
/>,
                                    },
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={Object {}}
/>,
                                    },
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                                                    class="App"
                                  >
                                                                    <header
                                                                                                      class="App__header"
                                                                    >
                                                                                                      <h1>
                                                                                                                                        Countdown for
                                                                                                      </h1>
                                                                                                      <div
                                                                                                                                        class="App__event"
                                                                                                      >
                                                                                                                                        <p>
                                                                                                                                                                          February 25, 2018
                                                                                                                                        </p>
                                                                                                      </div>
                                                                    </header>
                                                                    <section
                                                                                                      class="Clock"
                                                                    >
                                                                                                      <div
                                                                                                                                        class="Clock__days"
                                                                                                      >
                                                                                                                                        0 day
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__hours"
                                                                                                      >
                                                                                                                                        0 hour
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__minutes"
                                                                                                      >
                                                                                                                                        0 minute
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__seconds"
                                                                                                      >
                                                                                                                                        0 second
                                                                                                      </div>
                                                                    </section>
                                                                    <section
                                                                                                      class="Add-Event"
                                                                    >
                                                                                                      <form
                                                                                                                                        class="Add-Event__form"
                                                                                                      >
                                                                                                                                        <input
                                                                                                                                                                          type="text"
                                                                                                                                        />
                                                                                                                                        <button>
                                                                                                                                                                          Send
                                                                                                                                        </button>
                                                                                                      </form>
                                                                    </section>
                                  </div>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "treeBaseTime": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "expirationTime": 0,
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {},
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {},
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseTime": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": App {
                            "_handleOnChangeDeadline": [Function],
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "_setNewDeadLine": [Function],
                            "context": Object {},
                            "props": Object {},
                            "refs": Object {},
                            "state": Object {
                              "deadline": "February 25, 2018",
                              "newDeadline": "",
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseTime": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                          "lineNumber": 24,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "February 25, 2018",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "February 25, 2018",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <p>
                          February 25, 2018
</p>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "p",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <p>
                          February 25, 2018
</p>,
                        "className": "App__event",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <p>
                          February 25, 2018
</p>,
                        "className": "App__event",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="App__event"
>
                        <p>
                                                February 25, 2018
                        </p>
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <h1>
                      Countdown for
</h1>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "h1",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <h1>
                        Countdown for
</h1>,
                      <div
                        className="App__event"
>
                        <p>
                                                February 25, 2018
                        </p>
</div>,
                    ],
                    "className": "App__header",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <h1>
                        Countdown for
</h1>,
                      <div
                        className="App__event"
>
                        <p>
                                                February 25, 2018
                        </p>
</div>,
                    ],
                    "className": "App__header",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": [Circular],
                  "stateNode": <header
                    class="App__header"
>
                    <h1>
                                        Countdown for
                    </h1>
                    <div
                                        class="App__event"
                    >
                                        <p>
                                                            February 25, 2018
                                        </p>
                    </div>
</header>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "header",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": Array [
                    <header
                      className="App__header"
>
                      <h1>
                                            Countdown for
                      </h1>
                      <div
                                            className="App__event"
                      >
                                            <p>
                                                                  February 25, 2018
                                            </p>
                      </div>
</header>,
                    <Clock
                      deadline="February 25, 2018"
/>,
                    <section
                      className="Add-Event"
>
                      <form
                                            className="Add-Event__form"
                      >
                                            <input
                                                                  onChange={[Function]}
                                                                  type="text"
                                            />
                                            <button
                                                                  onClick={[Function]}
                                            >
                                                                  Send
                                            </button>
                      </form>
</section>,
                  ],
                  "className": "App",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <header
                      className="App__header"
>
                      <h1>
                                            Countdown for
                      </h1>
                      <div
                                            className="App__event"
                      >
                                            <p>
                                                                  February 25, 2018
                                            </p>
                      </div>
</header>,
                    <Clock
                      deadline="February 25, 2018"
/>,
                    <section
                      className="Add-Event"
>
                      <form
                                            className="Add-Event__form"
                      >
                                            <input
                                                                  onChange={[Function]}
                                                                  type="text"
                                            />
                                            <button
                                                                  onClick={[Function]}
                                            >
                                                                  Send
                                            </button>
                      </form>
</section>,
                  ],
                  "className": "App",
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 5,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 4,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {},
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {},
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {},
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                                                        class="App"
                            >
                                                        <header
                                                                                    class="App__header"
                                                        >
                                                                                    <h1>
                                                                                                                Countdown for
                                                                                    </h1>
                                                                                    <div
                                                                                                                class="App__event"
                                                                                    >
                                                                                                                <p>
                                                                                                                                            February 25, 2018
                                                                                                                </p>
                                                                                    </div>
                                                        </header>
                                                        <section
                                                                                    class="Clock"
                                                        >
                                                                                    <div
                                                                                                                class="Clock__days"
                                                                                    >
                                                                                                                0 day
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__hours"
                                                                                    >
                                                                                                                0 hour
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__minutes"
                                                                                    >
                                                                                                                0 minute
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__seconds"
                                                                                    >
                                                                                                                0 second
                                                                                    </div>
                                                        </section>
                                                        <section
                                                                                    class="Add-Event"
                                                        >
                                                                                    <form
                                                                                                                class="Add-Event__form"
                                                                                    >
                                                                                                                <input
                                                                                                                                            type="text"
                                                                                                                />
                                                                                                                <button>
                                                                                                                                            Send
                                                                                                                </button>
                                                                                    </form>
                                                        </section>
                            </div>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "treeBaseTime": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "expirationTime": 1,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "tag": 0,
                          },
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "tag": 0,
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 32,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={Object {}}
/>,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                                                    class="App"
                          >
                                                    <header
                                                                              class="App__header"
                                                    >
                                                                              <h1>
                                                                                                        Countdown for
                                                                              </h1>
                                                                              <div
                                                                                                        class="App__event"
                                                                              >
                                                                                                        <p>
                                                                                                                                  February 25, 2018
                                                                                                        </p>
                                                                              </div>
                                                    </header>
                                                    <section
                                                                              class="Clock"
                                                    >
                                                                              <div
                                                                                                        class="Clock__days"
                                                                              >
                                                                                                        0 day
                                                                              </div>
                                                                              <div
                                                                                                        class="Clock__hours"
                                                                              >
                                                                                                        0 hour
                                                                              </div>
                                                                              <div
                                                                                                        class="Clock__minutes"
                                                                              >
                                                                                                        0 minute
                                                                              </div>
                                                                              <div
                                                                                                        class="Clock__seconds"
                                                                              >
                                                                                                        0 second
                                                                              </div>
                                                    </section>
                                                    <section
                                                                              class="Add-Event"
                                                    >
                                                                              <form
                                                                                                        class="Add-Event__form"
                                                                              >
                                                                                                        <input
                                                                                                                                  type="text"
                                                                                                        />
                                                                                                        <button>
                                                                                                                                  Send
                                                                                                        </button>
                                                                              </form>
                                                    </section>
                          </div>
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "treeBaseTime": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={Object {}}
/>,
                        },
                        "expirationTime": 0,
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseTime": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {},
                  "memoizedState": Object {
                    "deadline": "February 25, 2018",
                    "newDeadline": "",
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {},
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 4,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {},
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {},
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {},
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                                                        class="App"
                            >
                                                        <header
                                                                                    class="App__header"
                                                        >
                                                                                    <h1>
                                                                                                                Countdown for
                                                                                    </h1>
                                                                                    <div
                                                                                                                class="App__event"
                                                                                    >
                                                                                                                <p>
                                                                                                                                            February 25, 2018
                                                                                                                </p>
                                                                                    </div>
                                                        </header>
                                                        <section
                                                                                    class="Clock"
                                                        >
                                                                                    <div
                                                                                                                class="Clock__days"
                                                                                    >
                                                                                                                0 day
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__hours"
                                                                                    >
                                                                                                                0 hour
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__minutes"
                                                                                    >
                                                                                                                0 minute
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__seconds"
                                                                                    >
                                                                                                                0 second
                                                                                    </div>
                                                        </section>
                                                        <section
                                                                                    class="Add-Event"
                                                        >
                                                                                    <form
                                                                                                                class="Add-Event__form"
                                                                                    >
                                                                                                                <input
                                                                                                                                            type="text"
                                                                                                                />
                                                                                                                <button>
                                                                                                                                            Send
                                                                                                                </button>
                                                                                    </form>
                                                        </section>
                            </div>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "treeBaseTime": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "expirationTime": 1,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "tag": 0,
                          },
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "tag": 0,
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 32,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={Object {}}
/>,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                                                    class="App"
                          >
                                                    <header
                                                                              class="App__header"
                                                    >
                                                                              <h1>
                                                                                                        Countdown for
                                                                              </h1>
                                                                              <div
                                                                                                        class="App__event"
                                                                              >
                                                                                                        <p>
                                                                                                                                  February 25, 2018
                                                                                                        </p>
                                                                              </div>
                                                    </header>
                                                    <section
                                                                              class="Clock"
                                                    >
                                                                              <div
                                                                                                        class="Clock__days"
                                                                              >
                                                                                                        0 day
                                                                              </div>
                                                                              <div
                                                                                                        class="Clock__hours"
                                                                              >
                                                                                                        0 hour
                                                                              </div>
                                                                              <div
                                                                                                        class="Clock__minutes"
                                                                              >
                                                                                                        0 minute
                                                                              </div>
                                                                              <div
                                                                                                        class="Clock__seconds"
                                                                              >
                                                                                                        0 second
                                                                              </div>
                                                    </section>
                                                    <section
                                                                              class="Add-Event"
                                                    >
                                                                              <form
                                                                                                        class="Add-Event__form"
                                                                              >
                                                                                                        <input
                                                                                                                                  type="text"
                                                                                                        />
                                                                                                        <button>
                                                                                                                                  Send
                                                                                                        </button>
                                                                              </form>
                                                    </section>
                          </div>
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "treeBaseTime": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={Object {}}
/>,
                        },
                        "expirationTime": 0,
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseTime": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": App {
                    "_handleOnChangeDeadline": [Function],
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "_setNewDeadLine": [Function],
                    "context": Object {},
                    "props": Object {},
                    "refs": Object {},
                    "state": Object {
                      "deadline": "February 25, 2018",
                      "newDeadline": "",
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "treeBaseTime": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <div
                  class="App"
>
                  <header
                                    class="App__header"
                  >
                                    <h1>
                                                      Countdown for
                                    </h1>
                                    <div
                                                      class="App__event"
                                    >
                                                      <p>
                                                                        February 25, 2018
                                                      </p>
                                    </div>
                  </header>
                  <section
                                    class="Clock"
                  >
                                    <div
                                                      class="Clock__days"
                                    >
                                                      0 day
                                    </div>
                                    <div
                                                      class="Clock__hours"
                                    >
                                                      0 hour
                                    </div>
                                    <div
                                                      class="Clock__minutes"
                                    >
                                                      0 minute
                                    </div>
                                    <div
                                                      class="Clock__seconds"
                                    >
                                                      0 second
                                    </div>
                  </section>
                  <section
                                    class="Add-Event"
                  >
                                    <form
                                                      class="Add-Event__form"
                                    >
                                                      <input
                                                                        type="text"
                                                      />
                                                      <button>
                                                                        Send
                                                      </button>
                                    </form>
                  </section>
</div>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "div",
                "updateQueue": null,
              },
              "selfBaseTime": 0,
              "sibling": FiberNode {
                "_debugID": 9,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 5,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 4,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {},
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {},
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {},
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                                                        class="App"
                            >
                                                        <header
                                                                                    class="App__header"
                                                        >
                                                                                    <h1>
                                                                                                                Countdown for
                                                                                    </h1>
                                                                                    <div
                                                                                                                class="App__event"
                                                                                    >
                                                                                                                <p>
                                                                                                                                            February 25, 2018
                                                                                                                </p>
                                                                                    </div>
                                                        </header>
                                                        <section
                                                                                    class="Clock"
                                                        >
                                                                                    <div
                                                                                                                class="Clock__days"
                                                                                    >
                                                                                                                0 day
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__hours"
                                                                                    >
                                                                                                                0 hour
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__minutes"
                                                                                    >
                                                                                                                0 minute
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__seconds"
                                                                                    >
                                                                                                                0 second
                                                                                    </div>
                                                        </section>
                                                        <section
                                                                                    class="Add-Event"
                                                        >
                                                                                    <form
                                                                                                                class="Add-Event__form"
                                                                                    >
                                                                                                                <input
                                                                                                                                            type="text"
                                                                                                                />
                                                                                                                <button>
                                                                                                                                            Send
                                                                                                                </button>
                                                                                    </form>
                                                        </section>
                            </div>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "treeBaseTime": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "expirationTime": 1,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "tag": 0,
                          },
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "tag": 0,
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 32,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={Object {}}
/>,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                                                    class="App"
                          >
                                                    <header
                                                                              class="App__header"
                                                    >
                                                                              <h1>
                                                                                                        Countdown for
                                                                              </h1>
                                                                              <div
                                                                                                        class="App__event"
                                                                              >
                                                                                                        <p>
                                                                                                                                  February 25, 2018
                                                                                                        </p>
                                                                              </div>
                                                    </header>
                                                    <section
                                                                              class="Clock"
                                                    >
                                                                              <div
                                                                                                        class="Clock__days"
                                                                              >
                                                                                                        0 day
                                                                              </div>
                                                                              <div
                                                                                                        class="Clock__hours"
                                                                              >
                                                                                                        0 hour
                                                                              </div>
                                                                              <div
                                                                                                        class="Clock__minutes"
                                                                              >
                                                                                                        0 minute
                                                                              </div>
                                                                              <div
                                                                                                        class="Clock__seconds"
                                                                              >
                                                                                                        0 second
                                                                              </div>
                                                    </section>
                                                    <section
                                                                              class="Add-Event"
                                                    >
                                                                              <form
                                                                                                        class="Add-Event__form"
                                                                              >
                                                                                                        <input
                                                                                                                                  type="text"
                                                                                                        />
                                                                                                        <button>
                                                                                                                                  Send
                                                                                                        </button>
                                                                              </form>
                                                    </section>
                          </div>
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "treeBaseTime": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={Object {}}
/>,
                        },
                        "expirationTime": 0,
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseTime": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 6,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 20,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 7,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 21,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 10,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                          "lineNumber": 22,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Countdown for",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "Countdown for",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": FiberNode {
                          "_debugID": 11,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                            "lineNumber": 23,
                          },
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 12,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                              "lineNumber": 24,
                            },
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "February 25, 2018",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "February 25, 2018",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": <p>
                              February 25, 2018
</p>,
                            "tag": 5,
                            "treeBaseTime": 0,
                            "type": "p",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <p>
                              February 25, 2018
</p>,
                            "className": "App__event",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <p>
                              February 25, 2018
</p>,
                            "className": "App__event",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": <div
                            class="App__event"
>
                            <p>
                                                        February 25, 2018
                            </p>
</div>,
                          "tag": 5,
                          "treeBaseTime": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "stateNode": <h1>
                          Countdown for
</h1>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "h1",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <h1>
                            Countdown for
</h1>,
                          <div
                            className="App__event"
>
                            <p>
                                                        February 25, 2018
                            </p>
</div>,
                        ],
                        "className": "App__header",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <h1>
                            Countdown for
</h1>,
                          <div
                            className="App__event"
>
                            <p>
                                                        February 25, 2018
                            </p>
</div>,
                        ],
                        "className": "App__header",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": [Circular],
                      "stateNode": <header
                        class="App__header"
>
                        <h1>
                                                Countdown for
                        </h1>
                        <div
                                                class="App__event"
                        >
                                                <p>
                                                                        February 25, 2018
                                                </p>
                        </div>
</header>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "header",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": Array [
                        <header
                          className="App__header"
>
                          <h1>
                                                    Countdown for
                          </h1>
                          <div
                                                    className="App__event"
                          >
                                                    <p>
                                                                              February 25, 2018
                                                    </p>
                          </div>
</header>,
                        <Clock
                          deadline="February 25, 2018"
/>,
                        <section
                          className="Add-Event"
>
                          <form
                                                    className="Add-Event__form"
                          >
                                                    <input
                                                                              onChange={[Function]}
                                                                              type="text"
                                                    />
                                                    <button
                                                                              onClick={[Function]}
                                                    >
                                                                              Send
                                                    </button>
                          </form>
</section>,
                      ],
                      "className": "App",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <header
                          className="App__header"
>
                          <h1>
                                                    Countdown for
                          </h1>
                          <div
                                                    className="App__event"
                          >
                                                    <p>
                                                                              February 25, 2018
                                                    </p>
                          </div>
</header>,
                        <Clock
                          deadline="February 25, 2018"
/>,
                        <section
                          className="Add-Event"
>
                          <form
                                                    className="Add-Event__form"
                          >
                                                    <input
                                                                              onChange={[Function]}
                                                                              type="text"
                                                    />
                                                    <button
                                                                              onClick={[Function]}
                                                    >
                                                                              Send
                                                    </button>
                          </form>
</section>,
                      ],
                      "className": "App",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="App"
>
                      <header
                                            class="App__header"
                      >
                                            <h1>
                                                                  Countdown for
                                            </h1>
                                            <div
                                                                  class="App__event"
                                            >
                                                                  <p>
                                                                                        February 25, 2018
                                                                  </p>
                                            </div>
                      </header>
                      <section
                                            class="Clock"
                      >
                                            <div
                                                                  class="Clock__days"
                                            >
                                                                  0 day
                                            </div>
                                            <div
                                                                  class="Clock__hours"
                                            >
                                                                  0 hour
                                            </div>
                                            <div
                                                                  class="Clock__minutes"
                                            >
                                                                  0 minute
                                            </div>
                                            <div
                                                                  class="Clock__seconds"
                                            >
                                                                  0 second
                                            </div>
                      </section>
                      <section
                                            class="Add-Event"
                      >
                                            <form
                                                                  class="Add-Event__form"
                                            >
                                                                  <input
                                                                                        type="text"
                                                                  />
                                                                  <button>
                                                                                        Send
                                                                  </button>
                                            </form>
                      </section>
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {},
                  "memoizedState": Object {
                    "deadline": "February 25, 2018",
                    "newDeadline": "",
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {},
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 4,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {},
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {},
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {},
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                                                        class="App"
                            >
                                                        <header
                                                                                    class="App__header"
                                                        >
                                                                                    <h1>
                                                                                                                Countdown for
                                                                                    </h1>
                                                                                    <div
                                                                                                                class="App__event"
                                                                                    >
                                                                                                                <p>
                                                                                                                                            February 25, 2018
                                                                                                                </p>
                                                                                    </div>
                                                        </header>
                                                        <section
                                                                                    class="Clock"
                                                        >
                                                                                    <div
                                                                                                                class="Clock__days"
                                                                                    >
                                                                                                                0 day
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__hours"
                                                                                    >
                                                                                                                0 hour
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__minutes"
                                                                                    >
                                                                                                                0 minute
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__seconds"
                                                                                    >
                                                                                                                0 second
                                                                                    </div>
                                                        </section>
                                                        <section
                                                                                    class="Add-Event"
                                                        >
                                                                                    <form
                                                                                                                class="Add-Event__form"
                                                                                    >
                                                                                                                <input
                                                                                                                                            type="text"
                                                                                                                />
                                                                                                                <button>
                                                                                                                                            Send
                                                                                                                </button>
                                                                                    </form>
                                                        </section>
                            </div>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "treeBaseTime": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "expirationTime": 1,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "tag": 0,
                          },
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "tag": 0,
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 32,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={Object {}}
/>,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                                                    class="App"
                          >
                                                    <header
                                                                              class="App__header"
                                                    >
                                                                              <h1>
                                                                                                        Countdown for
                                                                              </h1>
                                                                              <div
                                                                                                        class="App__event"
                                                                              >
                                                                                                        <p>
                                                                                                                                  February 25, 2018
                                                                                                        </p>
                                                                              </div>
                                                    </header>
                                                    <section
                                                                              class="Clock"
                                                    >
                                                                              <div
                                                                                                        class="Clock__days"
                                                                              >
                                                                                                        0 day
                                                                              </div>
                                                                              <div
                                                                                                        class="Clock__hours"
                                                                              >
                                                                                                        0 hour
                                                                              </div>
                                                                              <div
                                                                                                        class="Clock__minutes"
                                                                              >
                                                                                                        0 minute
                                                                              </div>
                                                                              <div
                                                                                                        class="Clock__seconds"
                                                                              >
                                                                                                        0 second
                                                                              </div>
                                                    </section>
                                                    <section
                                                                              class="Add-Event"
                                                    >
                                                                              <form
                                                                                                        class="Add-Event__form"
                                                                              >
                                                                                                        <input
                                                                                                                                  type="text"
                                                                                                        />
                                                                                                        <button>
                                                                                                                                  Send
                                                                                                        </button>
                                                                              </form>
                                                    </section>
                          </div>
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "treeBaseTime": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={Object {}}
/>,
                        },
                        "expirationTime": 0,
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseTime": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": App {
                    "_handleOnChangeDeadline": [Function],
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "_setNewDeadLine": [Function],
                    "context": Object {},
                    "props": Object {},
                    "refs": Object {},
                    "state": Object {
                      "deadline": "February 25, 2018",
                      "newDeadline": "",
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "treeBaseTime": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 28,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 18,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 5,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="App"
                              >
                                                            <header
                                                                                          class="App__header"
                                                            >
                                                                                          <h1>
                                                                                                                        Countdown for
                                                                                          </h1>
                                                                                          <div
                                                                                                                        class="App__event"
                                                                                          >
                                                                                                                        <p>
                                                                                                                                                      February 25, 2018
                                                                                                                        </p>
                                                                                          </div>
                                                            </header>
                                                            <section
                                                                                          class="Clock"
                                                            >
                                                                                          <div
                                                                                                                        class="Clock__days"
                                                                                          >
                                                                                                                        0 day
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__hours"
                                                                                          >
                                                                                                                        0 hour
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__minutes"
                                                                                          >
                                                                                                                        0 minute
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__seconds"
                                                                                          >
                                                                                                                        0 second
                                                                                          </div>
                                                            </section>
                                                            <section
                                                                                          class="Add-Event"
                                                            >
                                                                                          <form
                                                                                                                        class="Add-Event__form"
                                                                                          >
                                                                                                                        <input
                                                                                                                                                      type="text"
                                                                                                                        />
                                                                                                                        <button>
                                                                                                                                                      Send
                                                                                                                        </button>
                                                                                          </form>
                                                            </section>
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "treeBaseTime": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "expirationTime": 1,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "tag": 0,
                            },
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "tag": 0,
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={Object {}}
/>,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                                                        class="App"
                            >
                                                        <header
                                                                                    class="App__header"
                                                        >
                                                                                    <h1>
                                                                                                                Countdown for
                                                                                    </h1>
                                                                                    <div
                                                                                                                class="App__event"
                                                                                    >
                                                                                                                <p>
                                                                                                                                            February 25, 2018
                                                                                                                </p>
                                                                                    </div>
                                                        </header>
                                                        <section
                                                                                    class="Clock"
                                                        >
                                                                                    <div
                                                                                                                class="Clock__days"
                                                                                    >
                                                                                                                0 day
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__hours"
                                                                                    >
                                                                                                                0 hour
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__minutes"
                                                                                    >
                                                                                                                0 minute
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__seconds"
                                                                                    >
                                                                                                                0 second
                                                                                    </div>
                                                        </section>
                                                        <section
                                                                                    class="Add-Event"
                                                        >
                                                                                    <form
                                                                                                                class="Add-Event__form"
                                                                                    >
                                                                                                                <input
                                                                                                                                            type="text"
                                                                                                                />
                                                                                                                <button>
                                                                                                                                            Send
                                                                                                                </button>
                                                                                    </form>
                                                        </section>
                            </div>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "treeBaseTime": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
/>,
                          },
                          "expirationTime": 0,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": null,
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": null,
                        },
                      },
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseTime": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 6,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 20,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 7,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                          "lineNumber": 21,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 10,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                            "lineNumber": 22,
                          },
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Countdown for",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "Countdown for",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseTime": 0,
                          "sibling": FiberNode {
                            "_debugID": 11,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                              "lineNumber": 23,
                            },
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 12,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                                "lineNumber": 24,
                              },
                              "actualDuration": 0,
                              "actualStartTime": 0,
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "February 25, 2018",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "February 25, 2018",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": <p>
                                February 25, 2018
</p>,
                              "tag": 5,
                              "treeBaseTime": 0,
                              "type": "p",
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": <p>
                                February 25, 2018
</p>,
                              "className": "App__event",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <p>
                                February 25, 2018
</p>,
                              "className": "App__event",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": <div
                              class="App__event"
>
                              <p>
                                                            February 25, 2018
                              </p>
</div>,
                            "tag": 5,
                            "treeBaseTime": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "stateNode": <h1>
                            Countdown for
</h1>,
                          "tag": 5,
                          "treeBaseTime": 0,
                          "type": "h1",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <h1>
                              Countdown for
</h1>,
                            <div
                              className="App__event"
>
                              <p>
                                                            February 25, 2018
                              </p>
</div>,
                          ],
                          "className": "App__header",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <h1>
                              Countdown for
</h1>,
                            <div
                              className="App__event"
>
                              <p>
                                                            February 25, 2018
                              </p>
</div>,
                          ],
                          "className": "App__header",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": [Circular],
                        "stateNode": <header
                          class="App__header"
>
                          <h1>
                                                    Countdown for
                          </h1>
                          <div
                                                    class="App__event"
                          >
                                                    <p>
                                                                              February 25, 2018
                                                    </p>
                          </div>
</header>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "header",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": Array [
                          <header
                            className="App__header"
>
                            <h1>
                                                        Countdown for
                            </h1>
                            <div
                                                        className="App__event"
                            >
                                                        <p>
                                                                                    February 25, 2018
                                                        </p>
                            </div>
</header>,
                          <Clock
                            deadline="February 25, 2018"
/>,
                          <section
                            className="Add-Event"
>
                            <form
                                                        className="Add-Event__form"
                            >
                                                        <input
                                                                                    onChange={[Function]}
                                                                                    type="text"
                                                        />
                                                        <button
                                                                                    onClick={[Function]}
                                                        >
                                                                                    Send
                                                        </button>
                            </form>
</section>,
                        ],
                        "className": "App",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <header
                            className="App__header"
>
                            <h1>
                                                        Countdown for
                            </h1>
                            <div
                                                        className="App__event"
                            >
                                                        <p>
                                                                                    February 25, 2018
                                                        </p>
                            </div>
</header>,
                          <Clock
                            deadline="February 25, 2018"
/>,
                          <section
                            className="Add-Event"
>
                            <form
                                                        className="Add-Event__form"
                            >
                                                        <input
                                                                                    onChange={[Function]}
                                                                                    type="text"
                                                        />
                                                        <button
                                                                                    onClick={[Function]}
                                                        >
                                                                                    Send
                                                        </button>
                            </form>
</section>,
                        ],
                        "className": "App",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="App"
>
                        <header
                                                class="App__header"
                        >
                                                <h1>
                                                                        Countdown for
                                                </h1>
                                                <div
                                                                        class="App__event"
                                                >
                                                                        <p>
                                                                                                February 25, 2018
                                                                        </p>
                                                </div>
                        </header>
                        <section
                                                class="Clock"
                        >
                                                <div
                                                                        class="Clock__days"
                                                >
                                                                        0 day
                                                </div>
                                                <div
                                                                        class="Clock__hours"
                                                >
                                                                        0 hour
                                                </div>
                                                <div
                                                                        class="Clock__minutes"
                                                >
                                                                        0 minute
                                                </div>
                                                <div
                                                                        class="Clock__seconds"
                                                >
                                                                        0 second
                                                </div>
                        </section>
                        <section
                                                class="Add-Event"
                        >
                                                <form
                                                                        class="Add-Event__form"
                                                >
                                                                        <input
                                                                                                type="text"
                                                                        />
                                                                        <button>
                                                                                                Send
                                                                        </button>
                                                </form>
                        </section>
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {},
                    "memoizedState": Object {
                      "deadline": "February 25, 2018",
                      "newDeadline": "",
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {},
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="App"
                              >
                                                            <header
                                                                                          class="App__header"
                                                            >
                                                                                          <h1>
                                                                                                                        Countdown for
                                                                                          </h1>
                                                                                          <div
                                                                                                                        class="App__event"
                                                                                          >
                                                                                                                        <p>
                                                                                                                                                      February 25, 2018
                                                                                                                        </p>
                                                                                          </div>
                                                            </header>
                                                            <section
                                                                                          class="Clock"
                                                            >
                                                                                          <div
                                                                                                                        class="Clock__days"
                                                                                          >
                                                                                                                        0 day
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__hours"
                                                                                          >
                                                                                                                        0 hour
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__minutes"
                                                                                          >
                                                                                                                        0 minute
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__seconds"
                                                                                          >
                                                                                                                        0 second
                                                                                          </div>
                                                            </section>
                                                            <section
                                                                                          class="Add-Event"
                                                            >
                                                                                          <form
                                                                                                                        class="Add-Event__form"
                                                                                          >
                                                                                                                        <input
                                                                                                                                                      type="text"
                                                                                                                        />
                                                                                                                        <button>
                                                                                                                                                      Send
                                                                                                                        </button>
                                                                                          </form>
                                                            </section>
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "treeBaseTime": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "expirationTime": 1,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "tag": 0,
                            },
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "tag": 0,
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={Object {}}
/>,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                                                        class="App"
                            >
                                                        <header
                                                                                    class="App__header"
                                                        >
                                                                                    <h1>
                                                                                                                Countdown for
                                                                                    </h1>
                                                                                    <div
                                                                                                                class="App__event"
                                                                                    >
                                                                                                                <p>
                                                                                                                                            February 25, 2018
                                                                                                                </p>
                                                                                    </div>
                                                        </header>
                                                        <section
                                                                                    class="Clock"
                                                        >
                                                                                    <div
                                                                                                                class="Clock__days"
                                                                                    >
                                                                                                                0 day
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__hours"
                                                                                    >
                                                                                                                0 hour
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__minutes"
                                                                                    >
                                                                                                                0 minute
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__seconds"
                                                                                    >
                                                                                                                0 second
                                                                                    </div>
                                                        </section>
                                                        <section
                                                                                    class="Add-Event"
                                                        >
                                                                                    <form
                                                                                                                class="Add-Event__form"
                                                                                    >
                                                                                                                <input
                                                                                                                                            type="text"
                                                                                                                />
                                                                                                                <button>
                                                                                                                                            Send
                                                                                                                </button>
                                                                                    </form>
                                                        </section>
                            </div>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "treeBaseTime": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
/>,
                          },
                          "expirationTime": 0,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": null,
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": null,
                        },
                      },
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseTime": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": App {
                      "_handleOnChangeDeadline": [Function],
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "_setNewDeadLine": [Function],
                      "context": Object {},
                      "props": Object {},
                      "refs": Object {},
                      "state": Object {
                        "deadline": "February 25, 2018",
                        "newDeadline": "",
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseTime": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 29,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 19,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 5,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="App"
                                >
                                                                <header
                                                                                                class="App__header"
                                                                >
                                                                                                <h1>
                                                                                                                                Countdown for
                                                                                                </h1>
                                                                                                <div
                                                                                                                                class="App__event"
                                                                                                >
                                                                                                                                <p>
                                                                                                                                                                February 25, 2018
                                                                                                                                </p>
                                                                                                </div>
                                                                </header>
                                                                <section
                                                                                                class="Clock"
                                                                >
                                                                                                <div
                                                                                                                                class="Clock__days"
                                                                                                >
                                                                                                                                0 day
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__hours"
                                                                                                >
                                                                                                                                0 hour
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__minutes"
                                                                                                >
                                                                                                                                0 minute
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__seconds"
                                                                                                >
                                                                                                                                0 second
                                                                                                </div>
                                                                </section>
                                                                <section
                                                                                                class="Add-Event"
                                                                >
                                                                                                <form
                                                                                                                                class="Add-Event__form"
                                                                                                >
                                                                                                                                <input
                                                                                                                                                                type="text"
                                                                                                                                />
                                                                                                                                <button>
                                                                                                                                                                Send
                                                                                                                                </button>
                                                                                                </form>
                                                                </section>
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "treeBaseTime": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "expirationTime": 1,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "tag": 0,
                              },
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "tag": 0,
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="App"
                              >
                                                            <header
                                                                                          class="App__header"
                                                            >
                                                                                          <h1>
                                                                                                                        Countdown for
                                                                                          </h1>
                                                                                          <div
                                                                                                                        class="App__event"
                                                                                          >
                                                                                                                        <p>
                                                                                                                                                      February 25, 2018
                                                                                                                        </p>
                                                                                          </div>
                                                            </header>
                                                            <section
                                                                                          class="Clock"
                                                            >
                                                                                          <div
                                                                                                                        class="Clock__days"
                                                                                          >
                                                                                                                        0 day
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__hours"
                                                                                          >
                                                                                                                        0 hour
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__minutes"
                                                                                          >
                                                                                                                        0 minute
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__seconds"
                                                                                          >
                                                                                                                        0 second
                                                                                          </div>
                                                            </section>
                                                            <section
                                                                                          class="Add-Event"
                                                            >
                                                                                          <form
                                                                                                                        class="Add-Event__form"
                                                                                          >
                                                                                                                        <input
                                                                                                                                                      type="text"
                                                                                                                        />
                                                                                                                        <button>
                                                                                                                                                      Send
                                                                                                                        </button>
                                                                                          </form>
                                                            </section>
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "treeBaseTime": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "expirationTime": 0,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": null,
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": null,
                          },
                        },
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {},
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseTime": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 6,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                          "lineNumber": 20,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 7,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                            "lineNumber": 21,
                          },
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 10,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                              "lineNumber": 22,
                            },
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Countdown for",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "Countdown for",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseTime": 0,
                            "sibling": FiberNode {
                              "_debugID": 11,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                                "lineNumber": 23,
                              },
                              "actualDuration": 0,
                              "actualStartTime": 0,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 12,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                                  "lineNumber": 24,
                                },
                                "actualDuration": 0,
                                "actualStartTime": 0,
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "February 25, 2018",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": "February 25, 2018",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseTime": 0,
                                "sibling": null,
                                "stateNode": <p>
                                  February 25, 2018
</p>,
                                "tag": 5,
                                "treeBaseTime": 0,
                                "type": "p",
                                "updateQueue": null,
                              },
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 1,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": <p>
                                  February 25, 2018
</p>,
                                "className": "App__event",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": <p>
                                  February 25, 2018
</p>,
                                "className": "App__event",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": <div
                                class="App__event"
>
                                <p>
                                                                February 25, 2018
                                </p>
</div>,
                              "tag": 5,
                              "treeBaseTime": 0,
                              "type": "div",
                              "updateQueue": null,
                            },
                            "stateNode": <h1>
                              Countdown for
</h1>,
                            "tag": 5,
                            "treeBaseTime": 0,
                            "type": "h1",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <h1>
                                Countdown for
</h1>,
                              <div
                                className="App__event"
>
                                <p>
                                                                February 25, 2018
                                </p>
</div>,
                            ],
                            "className": "App__header",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <h1>
                                Countdown for
</h1>,
                              <div
                                className="App__event"
>
                                <p>
                                                                February 25, 2018
                                </p>
</div>,
                            ],
                            "className": "App__header",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseTime": 0,
                          "sibling": [Circular],
                          "stateNode": <header
                            class="App__header"
>
                            <h1>
                                                        Countdown for
                            </h1>
                            <div
                                                        class="App__event"
                            >
                                                        <p>
                                                                                    February 25, 2018
                                                        </p>
                            </div>
</header>,
                          "tag": 5,
                          "treeBaseTime": 0,
                          "type": "header",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": Array [
                            <header
                              className="App__header"
>
                              <h1>
                                                            Countdown for
                              </h1>
                              <div
                                                            className="App__event"
                              >
                                                            <p>
                                                                                          February 25, 2018
                                                            </p>
                              </div>
</header>,
                            <Clock
                              deadline="February 25, 2018"
/>,
                            <section
                              className="Add-Event"
>
                              <form
                                                            className="Add-Event__form"
                              >
                                                            <input
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                            />
                                                            <button
                                                                                          onClick={[Function]}
                                                            >
                                                                                          Send
                                                            </button>
                              </form>
</section>,
                          ],
                          "className": "App",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <header
                              className="App__header"
>
                              <h1>
                                                            Countdown for
                              </h1>
                              <div
                                                            className="App__event"
                              >
                                                            <p>
                                                                                          February 25, 2018
                                                            </p>
                              </div>
</header>,
                            <Clock
                              deadline="February 25, 2018"
/>,
                            <section
                              className="Add-Event"
>
                              <form
                                                            className="Add-Event__form"
                              >
                                                            <input
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                            />
                                                            <button
                                                                                          onClick={[Function]}
                                                            >
                                                                                          Send
                                                            </button>
                              </form>
</section>,
                          ],
                          "className": "App",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="App"
>
                          <header
                                                    class="App__header"
                          >
                                                    <h1>
                                                                              Countdown for
                                                    </h1>
                                                    <div
                                                                              class="App__event"
                                                    >
                                                                              <p>
                                                                                                        February 25, 2018
                                                                              </p>
                                                    </div>
                          </header>
                          <section
                                                    class="Clock"
                          >
                                                    <div
                                                                              class="Clock__days"
                                                    >
                                                                              0 day
                                                    </div>
                                                    <div
                                                                              class="Clock__hours"
                                                    >
                                                                              0 hour
                                                    </div>
                                                    <div
                                                                              class="Clock__minutes"
                                                    >
                                                                              0 minute
                                                    </div>
                                                    <div
                                                                              class="Clock__seconds"
                                                    >
                                                                              0 second
                                                    </div>
                          </section>
                          <section
                                                    class="Add-Event"
                          >
                                                    <form
                                                                              class="Add-Event__form"
                                                    >
                                                                              <input
                                                                                                        type="text"
                                                                              />
                                                                              <button>
                                                                                                        Send
                                                                              </button>
                                                    </form>
                          </section>
</div>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {},
                      "memoizedState": Object {
                        "deadline": "February 25, 2018",
                        "newDeadline": "",
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {},
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="App"
                                >
                                                                <header
                                                                                                class="App__header"
                                                                >
                                                                                                <h1>
                                                                                                                                Countdown for
                                                                                                </h1>
                                                                                                <div
                                                                                                                                class="App__event"
                                                                                                >
                                                                                                                                <p>
                                                                                                                                                                February 25, 2018
                                                                                                                                </p>
                                                                                                </div>
                                                                </header>
                                                                <section
                                                                                                class="Clock"
                                                                >
                                                                                                <div
                                                                                                                                class="Clock__days"
                                                                                                >
                                                                                                                                0 day
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__hours"
                                                                                                >
                                                                                                                                0 hour
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__minutes"
                                                                                                >
                                                                                                                                0 minute
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__seconds"
                                                                                                >
                                                                                                                                0 second
                                                                                                </div>
                                                                </section>
                                                                <section
                                                                                                class="Add-Event"
                                                                >
                                                                                                <form
                                                                                                                                class="Add-Event__form"
                                                                                                >
                                                                                                                                <input
                                                                                                                                                                type="text"
                                                                                                                                />
                                                                                                                                <button>
                                                                                                                                                                Send
                                                                                                                                </button>
                                                                                                </form>
                                                                </section>
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "treeBaseTime": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "expirationTime": 1,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "tag": 0,
                              },
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "tag": 0,
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="App"
                              >
                                                            <header
                                                                                          class="App__header"
                                                            >
                                                                                          <h1>
                                                                                                                        Countdown for
                                                                                          </h1>
                                                                                          <div
                                                                                                                        class="App__event"
                                                                                          >
                                                                                                                        <p>
                                                                                                                                                      February 25, 2018
                                                                                                                        </p>
                                                                                          </div>
                                                            </header>
                                                            <section
                                                                                          class="Clock"
                                                            >
                                                                                          <div
                                                                                                                        class="Clock__days"
                                                                                          >
                                                                                                                        0 day
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__hours"
                                                                                          >
                                                                                                                        0 hour
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__minutes"
                                                                                          >
                                                                                                                        0 minute
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__seconds"
                                                                                          >
                                                                                                                        0 second
                                                                                          </div>
                                                            </section>
                                                            <section
                                                                                          class="Add-Event"
                                                            >
                                                                                          <form
                                                                                                                        class="Add-Event__form"
                                                                                          >
                                                                                                                        <input
                                                                                                                                                      type="text"
                                                                                                                        />
                                                                                                                        <button>
                                                                                                                                                      Send
                                                                                                                        </button>
                                                                                          </form>
                                                            </section>
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "treeBaseTime": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "expirationTime": 0,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": null,
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": null,
                          },
                        },
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {},
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseTime": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": App {
                        "_handleOnChangeDeadline": [Function],
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "_setNewDeadLine": [Function],
                        "context": Object {},
                        "props": Object {},
                        "refs": Object {},
                        "state": Object {
                          "deadline": "February 25, 2018",
                          "newDeadline": "",
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseTime": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 30,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "onChange": [Function],
                      "type": "text",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "onChange": [Function],
                      "type": "text",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 20,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 5,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {},
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": 0,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                                                    class="App"
                                  >
                                                                    <header
                                                                                                      class="App__header"
                                                                    >
                                                                                                      <h1>
                                                                                                                                        Countdown for
                                                                                                      </h1>
                                                                                                      <div
                                                                                                                                        class="App__event"
                                                                                                      >
                                                                                                                                        <p>
                                                                                                                                                                          February 25, 2018
                                                                                                                                        </p>
                                                                                                      </div>
                                                                    </header>
                                                                    <section
                                                                                                      class="Clock"
                                                                    >
                                                                                                      <div
                                                                                                                                        class="Clock__days"
                                                                                                      >
                                                                                                                                        0 day
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__hours"
                                                                                                      >
                                                                                                                                        0 hour
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__minutes"
                                                                                                      >
                                                                                                                                        0 minute
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__seconds"
                                                                                                      >
                                                                                                                                        0 second
                                                                                                      </div>
                                                                    </section>
                                                                    <section
                                                                                                      class="Add-Event"
                                                                    >
                                                                                                      <form
                                                                                                                                        class="Add-Event__form"
                                                                                                      >
                                                                                                                                        <input
                                                                                                                                                                          type="text"
                                                                                                                                        />
                                                                                                                                        <button>
                                                                                                                                                                          Send
                                                                                                                                        </button>
                                                                                                      </form>
                                                                    </section>
                                  </div>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "treeBaseTime": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "expirationTime": 1,
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={Object {}}
/>,
                                  },
                                  "tag": 0,
                                },
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={Object {}}
/>,
                                  },
                                  "tag": 0,
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="App"
                                >
                                                                <header
                                                                                                class="App__header"
                                                                >
                                                                                                <h1>
                                                                                                                                Countdown for
                                                                                                </h1>
                                                                                                <div
                                                                                                                                class="App__event"
                                                                                                >
                                                                                                                                <p>
                                                                                                                                                                February 25, 2018
                                                                                                                                </p>
                                                                                                </div>
                                                                </header>
                                                                <section
                                                                                                class="Clock"
                                                                >
                                                                                                <div
                                                                                                                                class="Clock__days"
                                                                                                >
                                                                                                                                0 day
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__hours"
                                                                                                >
                                                                                                                                0 hour
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__minutes"
                                                                                                >
                                                                                                                                0 minute
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__seconds"
                                                                                                >
                                                                                                                                0 second
                                                                                                </div>
                                                                </section>
                                                                <section
                                                                                                class="Add-Event"
                                                                >
                                                                                                <form
                                                                                                                                class="Add-Event__form"
                                                                                                >
                                                                                                                                <input
                                                                                                                                                                type="text"
                                                                                                                                />
                                                                                                                                <button>
                                                                                                                                                                Send
                                                                                                                                </button>
                                                                                                </form>
                                                                </section>
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "treeBaseTime": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "expirationTime": 0,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": null,
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": null,
                            },
                          },
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {},
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {},
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseTime": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 6,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                            "lineNumber": 20,
                          },
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 7,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                              "lineNumber": 21,
                            },
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 10,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                                "lineNumber": 22,
                              },
                              "actualDuration": 0,
                              "actualStartTime": 0,
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Countdown for",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "Countdown for",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseTime": 0,
                              "sibling": FiberNode {
                                "_debugID": 11,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                                  "lineNumber": 23,
                                },
                                "actualDuration": 0,
                                "actualStartTime": 0,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugID": 12,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                                    "lineNumber": 24,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": 0,
                                  "alternate": null,
                                  "child": null,
                                  "effectTag": 0,
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": "February 25, 2018",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": "February 25, 2018",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseTime": 0,
                                  "sibling": null,
                                  "stateNode": <p>
                                    February 25, 2018
</p>,
                                  "tag": 5,
                                  "treeBaseTime": 0,
                                  "type": "p",
                                  "updateQueue": null,
                                },
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 1,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": <p>
                                    February 25, 2018
</p>,
                                  "className": "App__event",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": <p>
                                    February 25, 2018
</p>,
                                  "className": "App__event",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseTime": 0,
                                "sibling": null,
                                "stateNode": <div
                                  class="App__event"
>
                                  <p>
                                                                    February 25, 2018
                                  </p>
</div>,
                                "tag": 5,
                                "treeBaseTime": 0,
                                "type": "div",
                                "updateQueue": null,
                              },
                              "stateNode": <h1>
                                Countdown for
</h1>,
                              "tag": 5,
                              "treeBaseTime": 0,
                              "type": "h1",
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <h1>
                                  Countdown for
</h1>,
                                <div
                                  className="App__event"
>
                                  <p>
                                                                    February 25, 2018
                                  </p>
</div>,
                              ],
                              "className": "App__header",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <h1>
                                  Countdown for
</h1>,
                                <div
                                  className="App__event"
>
                                  <p>
                                                                    February 25, 2018
                                  </p>
</div>,
                              ],
                              "className": "App__header",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseTime": 0,
                            "sibling": [Circular],
                            "stateNode": <header
                              class="App__header"
>
                              <h1>
                                                            Countdown for
                              </h1>
                              <div
                                                            class="App__event"
                              >
                                                            <p>
                                                                                          February 25, 2018
                                                            </p>
                              </div>
</header>,
                            "tag": 5,
                            "treeBaseTime": 0,
                            "type": "header",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": Array [
                              <header
                                className="App__header"
>
                                <h1>
                                                                Countdown for
                                </h1>
                                <div
                                                                className="App__event"
                                >
                                                                <p>
                                                                                                February 25, 2018
                                                                </p>
                                </div>
</header>,
                              <Clock
                                deadline="February 25, 2018"
/>,
                              <section
                                className="Add-Event"
>
                                <form
                                                                className="Add-Event__form"
                                >
                                                                <input
                                                                                                onChange={[Function]}
                                                                                                type="text"
                                                                />
                                                                <button
                                                                                                onClick={[Function]}
                                                                >
                                                                                                Send
                                                                </button>
                                </form>
</section>,
                            ],
                            "className": "App",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <header
                                className="App__header"
>
                                <h1>
                                                                Countdown for
                                </h1>
                                <div
                                                                className="App__event"
                                >
                                                                <p>
                                                                                                February 25, 2018
                                                                </p>
                                </div>
</header>,
                              <Clock
                                deadline="February 25, 2018"
/>,
                              <section
                                className="Add-Event"
>
                                <form
                                                                className="Add-Event__form"
                                >
                                                                <input
                                                                                                onChange={[Function]}
                                                                                                type="text"
                                                                />
                                                                <button
                                                                                                onClick={[Function]}
                                                                >
                                                                                                Send
                                                                </button>
                                </form>
</section>,
                            ],
                            "className": "App",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": <div
                            class="App"
>
                            <header
                                                        class="App__header"
                            >
                                                        <h1>
                                                                                    Countdown for
                                                        </h1>
                                                        <div
                                                                                    class="App__event"
                                                        >
                                                                                    <p>
                                                                                                                February 25, 2018
                                                                                    </p>
                                                        </div>
                            </header>
                            <section
                                                        class="Clock"
                            >
                                                        <div
                                                                                    class="Clock__days"
                                                        >
                                                                                    0 day
                                                        </div>
                                                        <div
                                                                                    class="Clock__hours"
                                                        >
                                                                                    0 hour
                                                        </div>
                                                        <div
                                                                                    class="Clock__minutes"
                                                        >
                                                                                    0 minute
                                                        </div>
                                                        <div
                                                                                    class="Clock__seconds"
                                                        >
                                                                                    0 second
                                                        </div>
                            </section>
                            <section
                                                        class="Add-Event"
                            >
                                                        <form
                                                                                    class="Add-Event__form"
                                                        >
                                                                                    <input
                                                                                                                type="text"
                                                                                    />
                                                                                    <button>
                                                                                                                Send
                                                                                    </button>
                                                        </form>
                            </section>
</div>,
                          "tag": 5,
                          "treeBaseTime": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {},
                        "memoizedState": Object {
                          "deadline": "February 25, 2018",
                          "newDeadline": "",
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {},
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {},
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": 0,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                                                    class="App"
                                  >
                                                                    <header
                                                                                                      class="App__header"
                                                                    >
                                                                                                      <h1>
                                                                                                                                        Countdown for
                                                                                                      </h1>
                                                                                                      <div
                                                                                                                                        class="App__event"
                                                                                                      >
                                                                                                                                        <p>
                                                                                                                                                                          February 25, 2018
                                                                                                                                        </p>
                                                                                                      </div>
                                                                    </header>
                                                                    <section
                                                                                                      class="Clock"
                                                                    >
                                                                                                      <div
                                                                                                                                        class="Clock__days"
                                                                                                      >
                                                                                                                                        0 day
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__hours"
                                                                                                      >
                                                                                                                                        0 hour
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__minutes"
                                                                                                      >
                                                                                                                                        0 minute
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__seconds"
                                                                                                      >
                                                                                                                                        0 second
                                                                                                      </div>
                                                                    </section>
                                                                    <section
                                                                                                      class="Add-Event"
                                                                    >
                                                                                                      <form
                                                                                                                                        class="Add-Event__form"
                                                                                                      >
                                                                                                                                        <input
                                                                                                                                                                          type="text"
                                                                                                                                        />
                                                                                                                                        <button>
                                                                                                                                                                          Send
                                                                                                                                        </button>
                                                                                                      </form>
                                                                    </section>
                                  </div>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "treeBaseTime": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "expirationTime": 1,
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={Object {}}
/>,
                                  },
                                  "tag": 0,
                                },
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={Object {}}
/>,
                                  },
                                  "tag": 0,
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="App"
                                >
                                                                <header
                                                                                                class="App__header"
                                                                >
                                                                                                <h1>
                                                                                                                                Countdown for
                                                                                                </h1>
                                                                                                <div
                                                                                                                                class="App__event"
                                                                                                >
                                                                                                                                <p>
                                                                                                                                                                February 25, 2018
                                                                                                                                </p>
                                                                                                </div>
                                                                </header>
                                                                <section
                                                                                                class="Clock"
                                                                >
                                                                                                <div
                                                                                                                                class="Clock__days"
                                                                                                >
                                                                                                                                0 day
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__hours"
                                                                                                >
                                                                                                                                0 hour
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__minutes"
                                                                                                >
                                                                                                                                0 minute
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__seconds"
                                                                                                >
                                                                                                                                0 second
                                                                                                </div>
                                                                </section>
                                                                <section
                                                                                                class="Add-Event"
                                                                >
                                                                                                <form
                                                                                                                                class="Add-Event__form"
                                                                                                >
                                                                                                                                <input
                                                                                                                                                                type="text"
                                                                                                                                />
                                                                                                                                <button>
                                                                                                                                                                Send
                                                                                                                                </button>
                                                                                                </form>
                                                                </section>
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "treeBaseTime": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "expirationTime": 0,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": null,
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": null,
                            },
                          },
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {},
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {},
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseTime": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": App {
                          "_handleOnChangeDeadline": [Function],
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "_setNewDeadLine": [Function],
                          "context": Object {},
                          "props": Object {},
                          "refs": Object {},
                          "state": Object {
                            "deadline": "February 25, 2018",
                            "newDeadline": "",
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseTime": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 31,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Send",
                        "onClick": [Function],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "Send",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <button>
                        Send
</button>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "button",
                      "updateQueue": null,
                    },
                    "stateNode": <input
                      type="text"
/>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <input
                        onChange={[Function]}
                        type="text"
/>,
                      <button
                        onClick={[Function]}
>
                        Send
</button>,
                    ],
                    "className": "Add-Event__form",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <input
                        onChange={[Function]}
                        type="text"
/>,
                      <button
                        onClick={[Function]}
>
                        Send
</button>,
                    ],
                    "className": "Add-Event__form",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <form
                    class="Add-Event__form"
>
                    <input
                                        type="text"
                    />
                    <button>
                                        Send
                    </button>
</form>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "form",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 2,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <form
                    className="Add-Event__form"
>
                    <input
                                        onChange={[Function]}
                                        type="text"
                    />
                    <button
                                        onClick={[Function]}
                    >
                                        Send
                    </button>
</form>,
                  "className": "Add-Event",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <form
                    className="Add-Event__form"
>
                    <input
                                        onChange={[Function]}
                                        type="text"
                    />
                    <button
                                        onClick={[Function]}
                    >
                                        Send
                    </button>
</form>,
                  "className": "Add-Event",
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 6,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 5,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="App"
                              >
                                                            <header
                                                                                          class="App__header"
                                                            >
                                                                                          <h1>
                                                                                                                        Countdown for
                                                                                          </h1>
                                                                                          <div
                                                                                                                        class="App__event"
                                                                                          >
                                                                                                                        <p>
                                                                                                                                                      February 25, 2018
                                                                                                                        </p>
                                                                                          </div>
                                                            </header>
                                                            <section
                                                                                          class="Clock"
                                                            >
                                                                                          <div
                                                                                                                        class="Clock__days"
                                                                                          >
                                                                                                                        0 day
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__hours"
                                                                                          >
                                                                                                                        0 hour
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__minutes"
                                                                                          >
                                                                                                                        0 minute
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__seconds"
                                                                                          >
                                                                                                                        0 second
                                                                                          </div>
                                                            </section>
                                                            <section
                                                                                          class="Add-Event"
                                                            >
                                                                                          <form
                                                                                                                        class="Add-Event__form"
                                                                                          >
                                                                                                                        <input
                                                                                                                                                      type="text"
                                                                                                                        />
                                                                                                                        <button>
                                                                                                                                                      Send
                                                                                                                        </button>
                                                                                          </form>
                                                            </section>
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "treeBaseTime": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "expirationTime": 1,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "tag": 0,
                            },
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "tag": 0,
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={Object {}}
/>,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                                                        class="App"
                            >
                                                        <header
                                                                                    class="App__header"
                                                        >
                                                                                    <h1>
                                                                                                                Countdown for
                                                                                    </h1>
                                                                                    <div
                                                                                                                class="App__event"
                                                                                    >
                                                                                                                <p>
                                                                                                                                            February 25, 2018
                                                                                                                </p>
                                                                                    </div>
                                                        </header>
                                                        <section
                                                                                    class="Clock"
                                                        >
                                                                                    <div
                                                                                                                class="Clock__days"
                                                                                    >
                                                                                                                0 day
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__hours"
                                                                                    >
                                                                                                                0 hour
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__minutes"
                                                                                    >
                                                                                                                0 minute
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__seconds"
                                                                                    >
                                                                                                                0 second
                                                                                    </div>
                                                        </section>
                                                        <section
                                                                                    class="Add-Event"
                                                        >
                                                                                    <form
                                                                                                                class="Add-Event__form"
                                                                                    >
                                                                                                                <input
                                                                                                                                            type="text"
                                                                                                                />
                                                                                                                <button>
                                                                                                                                            Send
                                                                                                                </button>
                                                                                    </form>
                                                        </section>
                            </div>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "treeBaseTime": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
/>,
                          },
                          "expirationTime": 0,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": null,
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": null,
                        },
                      },
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseTime": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {},
                    "memoizedState": Object {
                      "deadline": "February 25, 2018",
                      "newDeadline": "",
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {},
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="App"
                              >
                                                            <header
                                                                                          class="App__header"
                                                            >
                                                                                          <h1>
                                                                                                                        Countdown for
                                                                                          </h1>
                                                                                          <div
                                                                                                                        class="App__event"
                                                                                          >
                                                                                                                        <p>
                                                                                                                                                      February 25, 2018
                                                                                                                        </p>
                                                                                          </div>
                                                            </header>
                                                            <section
                                                                                          class="Clock"
                                                            >
                                                                                          <div
                                                                                                                        class="Clock__days"
                                                                                          >
                                                                                                                        0 day
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__hours"
                                                                                          >
                                                                                                                        0 hour
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__minutes"
                                                                                          >
                                                                                                                        0 minute
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__seconds"
                                                                                          >
                                                                                                                        0 second
                                                                                          </div>
                                                            </section>
                                                            <section
                                                                                          class="Add-Event"
                                                            >
                                                                                          <form
                                                                                                                        class="Add-Event__form"
                                                                                          >
                                                                                                                        <input
                                                                                                                                                      type="text"
                                                                                                                        />
                                                                                                                        <button>
                                                                                                                                                      Send
                                                                                                                        </button>
                                                                                          </form>
                                                            </section>
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "treeBaseTime": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "expirationTime": 1,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "tag": 0,
                            },
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "tag": 0,
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={Object {}}
/>,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                                                        class="App"
                            >
                                                        <header
                                                                                    class="App__header"
                                                        >
                                                                                    <h1>
                                                                                                                Countdown for
                                                                                    </h1>
                                                                                    <div
                                                                                                                class="App__event"
                                                                                    >
                                                                                                                <p>
                                                                                                                                            February 25, 2018
                                                                                                                </p>
                                                                                    </div>
                                                        </header>
                                                        <section
                                                                                    class="Clock"
                                                        >
                                                                                    <div
                                                                                                                class="Clock__days"
                                                                                    >
                                                                                                                0 day
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__hours"
                                                                                    >
                                                                                                                0 hour
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__minutes"
                                                                                    >
                                                                                                                0 minute
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__seconds"
                                                                                    >
                                                                                                                0 second
                                                                                    </div>
                                                        </section>
                                                        <section
                                                                                    class="Add-Event"
                                                        >
                                                                                    <form
                                                                                                                class="Add-Event__form"
                                                                                    >
                                                                                                                <input
                                                                                                                                            type="text"
                                                                                                                />
                                                                                                                <button>
                                                                                                                                            Send
                                                                                                                </button>
                                                                                    </form>
                                                        </section>
                            </div>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "treeBaseTime": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
/>,
                          },
                          "expirationTime": 0,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": null,
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": null,
                        },
                      },
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseTime": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": App {
                      "_handleOnChangeDeadline": [Function],
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "_setNewDeadLine": [Function],
                      "context": Object {},
                      "props": Object {},
                      "refs": Object {},
                      "state": Object {
                        "deadline": "February 25, 2018",
                        "newDeadline": "",
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseTime": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 20,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 7,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 5,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="App"
                                >
                                                                <header
                                                                                                class="App__header"
                                                                >
                                                                                                <h1>
                                                                                                                                Countdown for
                                                                                                </h1>
                                                                                                <div
                                                                                                                                class="App__event"
                                                                                                >
                                                                                                                                <p>
                                                                                                                                                                February 25, 2018
                                                                                                                                </p>
                                                                                                </div>
                                                                </header>
                                                                <section
                                                                                                class="Clock"
                                                                >
                                                                                                <div
                                                                                                                                class="Clock__days"
                                                                                                >
                                                                                                                                0 day
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__hours"
                                                                                                >
                                                                                                                                0 hour
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__minutes"
                                                                                                >
                                                                                                                                0 minute
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__seconds"
                                                                                                >
                                                                                                                                0 second
                                                                                                </div>
                                                                </section>
                                                                <section
                                                                                                class="Add-Event"
                                                                >
                                                                                                <form
                                                                                                                                class="Add-Event__form"
                                                                                                >
                                                                                                                                <input
                                                                                                                                                                type="text"
                                                                                                                                />
                                                                                                                                <button>
                                                                                                                                                                Send
                                                                                                                                </button>
                                                                                                </form>
                                                                </section>
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "treeBaseTime": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "expirationTime": 1,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "tag": 0,
                              },
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "tag": 0,
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="App"
                              >
                                                            <header
                                                                                          class="App__header"
                                                            >
                                                                                          <h1>
                                                                                                                        Countdown for
                                                                                          </h1>
                                                                                          <div
                                                                                                                        class="App__event"
                                                                                          >
                                                                                                                        <p>
                                                                                                                                                      February 25, 2018
                                                                                                                        </p>
                                                                                          </div>
                                                            </header>
                                                            <section
                                                                                          class="Clock"
                                                            >
                                                                                          <div
                                                                                                                        class="Clock__days"
                                                                                          >
                                                                                                                        0 day
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__hours"
                                                                                          >
                                                                                                                        0 hour
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__minutes"
                                                                                          >
                                                                                                                        0 minute
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__seconds"
                                                                                          >
                                                                                                                        0 second
                                                                                          </div>
                                                            </section>
                                                            <section
                                                                                          class="Add-Event"
                                                            >
                                                                                          <form
                                                                                                                        class="Add-Event__form"
                                                                                          >
                                                                                                                        <input
                                                                                                                                                      type="text"
                                                                                                                        />
                                                                                                                        <button>
                                                                                                                                                      Send
                                                                                                                        </button>
                                                                                          </form>
                                                            </section>
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "treeBaseTime": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "expirationTime": 0,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": null,
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": null,
                          },
                        },
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {},
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseTime": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {},
                      "memoizedState": Object {
                        "deadline": "February 25, 2018",
                        "newDeadline": "",
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {},
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="App"
                                >
                                                                <header
                                                                                                class="App__header"
                                                                >
                                                                                                <h1>
                                                                                                                                Countdown for
                                                                                                </h1>
                                                                                                <div
                                                                                                                                class="App__event"
                                                                                                >
                                                                                                                                <p>
                                                                                                                                                                February 25, 2018
                                                                                                                                </p>
                                                                                                </div>
                                                                </header>
                                                                <section
                                                                                                class="Clock"
                                                                >
                                                                                                <div
                                                                                                                                class="Clock__days"
                                                                                                >
                                                                                                                                0 day
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__hours"
                                                                                                >
                                                                                                                                0 hour
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__minutes"
                                                                                                >
                                                                                                                                0 minute
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__seconds"
                                                                                                >
                                                                                                                                0 second
                                                                                                </div>
                                                                </section>
                                                                <section
                                                                                                class="Add-Event"
                                                                >
                                                                                                <form
                                                                                                                                class="Add-Event__form"
                                                                                                >
                                                                                                                                <input
                                                                                                                                                                type="text"
                                                                                                                                />
                                                                                                                                <button>
                                                                                                                                                                Send
                                                                                                                                </button>
                                                                                                </form>
                                                                </section>
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "treeBaseTime": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "expirationTime": 1,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "tag": 0,
                              },
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "tag": 0,
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="App"
                              >
                                                            <header
                                                                                          class="App__header"
                                                            >
                                                                                          <h1>
                                                                                                                        Countdown for
                                                                                          </h1>
                                                                                          <div
                                                                                                                        class="App__event"
                                                                                          >
                                                                                                                        <p>
                                                                                                                                                      February 25, 2018
                                                                                                                        </p>
                                                                                          </div>
                                                            </header>
                                                            <section
                                                                                          class="Clock"
                                                            >
                                                                                          <div
                                                                                                                        class="Clock__days"
                                                                                          >
                                                                                                                        0 day
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__hours"
                                                                                          >
                                                                                                                        0 hour
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__minutes"
                                                                                          >
                                                                                                                        0 minute
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__seconds"
                                                                                          >
                                                                                                                        0 second
                                                                                          </div>
                                                            </section>
                                                            <section
                                                                                          class="Add-Event"
                                                            >
                                                                                          <form
                                                                                                                        class="Add-Event__form"
                                                                                          >
                                                                                                                        <input
                                                                                                                                                      type="text"
                                                                                                                        />
                                                                                                                        <button>
                                                                                                                                                      Send
                                                                                                                        </button>
                                                                                          </form>
                                                            </section>
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "treeBaseTime": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "expirationTime": 0,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": null,
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": null,
                          },
                        },
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {},
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseTime": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": App {
                        "_handleOnChangeDeadline": [Function],
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "_setNewDeadLine": [Function],
                        "context": Object {},
                        "props": Object {},
                        "refs": Object {},
                        "state": Object {
                          "deadline": "February 25, 2018",
                          "newDeadline": "",
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseTime": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 21,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 10,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 5,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {},
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": 0,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                                                    class="App"
                                  >
                                                                    <header
                                                                                                      class="App__header"
                                                                    >
                                                                                                      <h1>
                                                                                                                                        Countdown for
                                                                                                      </h1>
                                                                                                      <div
                                                                                                                                        class="App__event"
                                                                                                      >
                                                                                                                                        <p>
                                                                                                                                                                          February 25, 2018
                                                                                                                                        </p>
                                                                                                      </div>
                                                                    </header>
                                                                    <section
                                                                                                      class="Clock"
                                                                    >
                                                                                                      <div
                                                                                                                                        class="Clock__days"
                                                                                                      >
                                                                                                                                        0 day
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__hours"
                                                                                                      >
                                                                                                                                        0 hour
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__minutes"
                                                                                                      >
                                                                                                                                        0 minute
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__seconds"
                                                                                                      >
                                                                                                                                        0 second
                                                                                                      </div>
                                                                    </section>
                                                                    <section
                                                                                                      class="Add-Event"
                                                                    >
                                                                                                      <form
                                                                                                                                        class="Add-Event__form"
                                                                                                      >
                                                                                                                                        <input
                                                                                                                                                                          type="text"
                                                                                                                                        />
                                                                                                                                        <button>
                                                                                                                                                                          Send
                                                                                                                                        </button>
                                                                                                      </form>
                                                                    </section>
                                  </div>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "treeBaseTime": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "expirationTime": 1,
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={Object {}}
/>,
                                  },
                                  "tag": 0,
                                },
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={Object {}}
/>,
                                  },
                                  "tag": 0,
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="App"
                                >
                                                                <header
                                                                                                class="App__header"
                                                                >
                                                                                                <h1>
                                                                                                                                Countdown for
                                                                                                </h1>
                                                                                                <div
                                                                                                                                class="App__event"
                                                                                                >
                                                                                                                                <p>
                                                                                                                                                                February 25, 2018
                                                                                                                                </p>
                                                                                                </div>
                                                                </header>
                                                                <section
                                                                                                class="Clock"
                                                                >
                                                                                                <div
                                                                                                                                class="Clock__days"
                                                                                                >
                                                                                                                                0 day
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__hours"
                                                                                                >
                                                                                                                                0 hour
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__minutes"
                                                                                                >
                                                                                                                                0 minute
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__seconds"
                                                                                                >
                                                                                                                                0 second
                                                                                                </div>
                                                                </section>
                                                                <section
                                                                                                class="Add-Event"
                                                                >
                                                                                                <form
                                                                                                                                class="Add-Event__form"
                                                                                                >
                                                                                                                                <input
                                                                                                                                                                type="text"
                                                                                                                                />
                                                                                                                                <button>
                                                                                                                                                                Send
                                                                                                                                </button>
                                                                                                </form>
                                                                </section>
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "treeBaseTime": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "expirationTime": 0,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": null,
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": null,
                            },
                          },
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {},
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {},
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseTime": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {},
                        "memoizedState": Object {
                          "deadline": "February 25, 2018",
                          "newDeadline": "",
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {},
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {},
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": 0,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                                                    class="App"
                                  >
                                                                    <header
                                                                                                      class="App__header"
                                                                    >
                                                                                                      <h1>
                                                                                                                                        Countdown for
                                                                                                      </h1>
                                                                                                      <div
                                                                                                                                        class="App__event"
                                                                                                      >
                                                                                                                                        <p>
                                                                                                                                                                          February 25, 2018
                                                                                                                                        </p>
                                                                                                      </div>
                                                                    </header>
                                                                    <section
                                                                                                      class="Clock"
                                                                    >
                                                                                                      <div
                                                                                                                                        class="Clock__days"
                                                                                                      >
                                                                                                                                        0 day
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__hours"
                                                                                                      >
                                                                                                                                        0 hour
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__minutes"
                                                                                                      >
                                                                                                                                        0 minute
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__seconds"
                                                                                                      >
                                                                                                                                        0 second
                                                                                                      </div>
                                                                    </section>
                                                                    <section
                                                                                                      class="Add-Event"
                                                                    >
                                                                                                      <form
                                                                                                                                        class="Add-Event__form"
                                                                                                      >
                                                                                                                                        <input
                                                                                                                                                                          type="text"
                                                                                                                                        />
                                                                                                                                        <button>
                                                                                                                                                                          Send
                                                                                                                                        </button>
                                                                                                      </form>
                                                                    </section>
                                  </div>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "treeBaseTime": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "expirationTime": 1,
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={Object {}}
/>,
                                  },
                                  "tag": 0,
                                },
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={Object {}}
/>,
                                  },
                                  "tag": 0,
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="App"
                                >
                                                                <header
                                                                                                class="App__header"
                                                                >
                                                                                                <h1>
                                                                                                                                Countdown for
                                                                                                </h1>
                                                                                                <div
                                                                                                                                class="App__event"
                                                                                                >
                                                                                                                                <p>
                                                                                                                                                                February 25, 2018
                                                                                                                                </p>
                                                                                                </div>
                                                                </header>
                                                                <section
                                                                                                class="Clock"
                                                                >
                                                                                                <div
                                                                                                                                class="Clock__days"
                                                                                                >
                                                                                                                                0 day
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__hours"
                                                                                                >
                                                                                                                                0 hour
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__minutes"
                                                                                                >
                                                                                                                                0 minute
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__seconds"
                                                                                                >
                                                                                                                                0 second
                                                                                                </div>
                                                                </section>
                                                                <section
                                                                                                class="Add-Event"
                                                                >
                                                                                                <form
                                                                                                                                class="Add-Event__form"
                                                                                                >
                                                                                                                                <input
                                                                                                                                                                type="text"
                                                                                                                                />
                                                                                                                                <button>
                                                                                                                                                                Send
                                                                                                                                </button>
                                                                                                </form>
                                                                </section>
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "treeBaseTime": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "expirationTime": 0,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": null,
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": null,
                            },
                          },
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {},
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {},
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseTime": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": App {
                          "_handleOnChangeDeadline": [Function],
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "_setNewDeadLine": [Function],
                          "context": Object {},
                          "props": Object {},
                          "refs": Object {},
                          "state": Object {
                            "deadline": "February 25, 2018",
                            "newDeadline": "",
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseTime": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 22,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Countdown for",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "Countdown for",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": FiberNode {
                        "_debugID": 11,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 5,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 4,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {},
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {},
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {},
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": 0,
                              "alternate": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": 0,
                                "alternate": [Circular],
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseTime": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                                                        class="App"
                                    >
                                                                        <header
                                                                                                            class="App__header"
                                                                        >
                                                                                                            <h1>
                                                                                                                                                Countdown for
                                                                                                            </h1>
                                                                                                            <div
                                                                                                                                                class="App__event"
                                                                                                            >
                                                                                                                                                <p>
                                                                                                                                                                                    February 25, 2018
                                                                                                                                                </p>
                                                                                                            </div>
                                                                        </header>
                                                                        <section
                                                                                                            class="Clock"
                                                                        >
                                                                                                            <div
                                                                                                                                                class="Clock__days"
                                                                                                            >
                                                                                                                                                0 day
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__hours"
                                                                                                            >
                                                                                                                                                0 hour
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__minutes"
                                                                                                            >
                                                                                                                                                0 minute
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__seconds"
                                                                                                            >
                                                                                                                                                0 second
                                                                                                            </div>
                                                                        </section>
                                                                        <section
                                                                                                            class="Add-Event"
                                                                        >
                                                                                                            <form
                                                                                                                                                class="Add-Event__form"
                                                                                                            >
                                                                                                                                                <input
                                                                                                                                                                                    type="text"
                                                                                                                                                />
                                                                                                                                                <button>
                                                                                                                                                                                    Send
                                                                                                                                                </button>
                                                                                                            </form>
                                                                        </section>
                                    </div>
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "treeBaseTime": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "expirationTime": 1,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={Object {}}
/>,
                                    },
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={Object {}}
/>,
                                    },
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                                                    class="App"
                                  >
                                                                    <header
                                                                                                      class="App__header"
                                                                    >
                                                                                                      <h1>
                                                                                                                                        Countdown for
                                                                                                      </h1>
                                                                                                      <div
                                                                                                                                        class="App__event"
                                                                                                      >
                                                                                                                                        <p>
                                                                                                                                                                          February 25, 2018
                                                                                                                                        </p>
                                                                                                      </div>
                                                                    </header>
                                                                    <section
                                                                                                      class="Clock"
                                                                    >
                                                                                                      <div
                                                                                                                                        class="Clock__days"
                                                                                                      >
                                                                                                                                        0 day
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__hours"
                                                                                                      >
                                                                                                                                        0 hour
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__minutes"
                                                                                                      >
                                                                                                                                        0 minute
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__seconds"
                                                                                                      >
                                                                                                                                        0 second
                                                                                                      </div>
                                                                    </section>
                                                                    <section
                                                                                                      class="Add-Event"
                                                                    >
                                                                                                      <form
                                                                                                                                        class="Add-Event__form"
                                                                                                      >
                                                                                                                                        <input
                                                                                                                                                                          type="text"
                                                                                                                                        />
                                                                                                                                        <button>
                                                                                                                                                                          Send
                                                                                                                                        </button>
                                                                                                      </form>
                                                                    </section>
                                  </div>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "treeBaseTime": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "expirationTime": 0,
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {},
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {},
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseTime": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {},
                          "memoizedState": Object {
                            "deadline": "February 25, 2018",
                            "newDeadline": "",
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {},
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 4,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {},
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {},
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {},
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": 0,
                              "alternate": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": 0,
                                "alternate": [Circular],
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseTime": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                                                        class="App"
                                    >
                                                                        <header
                                                                                                            class="App__header"
                                                                        >
                                                                                                            <h1>
                                                                                                                                                Countdown for
                                                                                                            </h1>
                                                                                                            <div
                                                                                                                                                class="App__event"
                                                                                                            >
                                                                                                                                                <p>
                                                                                                                                                                                    February 25, 2018
                                                                                                                                                </p>
                                                                                                            </div>
                                                                        </header>
                                                                        <section
                                                                                                            class="Clock"
                                                                        >
                                                                                                            <div
                                                                                                                                                class="Clock__days"
                                                                                                            >
                                                                                                                                                0 day
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__hours"
                                                                                                            >
                                                                                                                                                0 hour
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__minutes"
                                                                                                            >
                                                                                                                                                0 minute
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__seconds"
                                                                                                            >
                                                                                                                                                0 second
                                                                                                            </div>
                                                                        </section>
                                                                        <section
                                                                                                            class="Add-Event"
                                                                        >
                                                                                                            <form
                                                                                                                                                class="Add-Event__form"
                                                                                                            >
                                                                                                                                                <input
                                                                                                                                                                                    type="text"
                                                                                                                                                />
                                                                                                                                                <button>
                                                                                                                                                                                    Send
                                                                                                                                                </button>
                                                                                                            </form>
                                                                        </section>
                                    </div>
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "treeBaseTime": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "expirationTime": 1,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={Object {}}
/>,
                                    },
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={Object {}}
/>,
                                    },
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                                                    class="App"
                                  >
                                                                    <header
                                                                                                      class="App__header"
                                                                    >
                                                                                                      <h1>
                                                                                                                                        Countdown for
                                                                                                      </h1>
                                                                                                      <div
                                                                                                                                        class="App__event"
                                                                                                      >
                                                                                                                                        <p>
                                                                                                                                                                          February 25, 2018
                                                                                                                                        </p>
                                                                                                      </div>
                                                                    </header>
                                                                    <section
                                                                                                      class="Clock"
                                                                    >
                                                                                                      <div
                                                                                                                                        class="Clock__days"
                                                                                                      >
                                                                                                                                        0 day
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__hours"
                                                                                                      >
                                                                                                                                        0 hour
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__minutes"
                                                                                                      >
                                                                                                                                        0 minute
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__seconds"
                                                                                                      >
                                                                                                                                        0 second
                                                                                                      </div>
                                                                    </section>
                                                                    <section
                                                                                                      class="Add-Event"
                                                                    >
                                                                                                      <form
                                                                                                                                        class="Add-Event__form"
                                                                                                      >
                                                                                                                                        <input
                                                                                                                                                                          type="text"
                                                                                                                                        />
                                                                                                                                        <button>
                                                                                                                                                                          Send
                                                                                                                                        </button>
                                                                                                      </form>
                                                                    </section>
                                  </div>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "treeBaseTime": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "expirationTime": 0,
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {},
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {},
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseTime": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": App {
                            "_handleOnChangeDeadline": [Function],
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "_setNewDeadLine": [Function],
                            "context": Object {},
                            "props": Object {},
                            "refs": Object {},
                            "state": Object {
                              "deadline": "February 25, 2018",
                              "newDeadline": "",
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseTime": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                          "lineNumber": 23,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 12,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 5,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": FiberNode {
                              "_debugID": 4,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": 0,
                              "alternate": null,
                              "child": [Circular],
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {},
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {},
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {},
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": 0,
                                "alternate": FiberNode {
                                  "_debugID": 1,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": 0,
                                  "alternate": [Circular],
                                  "child": null,
                                  "effectTag": 0,
                                  "expirationTime": 1,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseTime": 0,
                                  "sibling": null,
                                  "stateNode": Object {
                                    "containerInfo": <div>
                                      <div
                                                                            class="App"
                                      >
                                                                            <header
                                                                                                                  class="App__header"
                                                                            >
                                                                                                                  <h1>
                                                                                                                                                        Countdown for
                                                                                                                  </h1>
                                                                                                                  <div
                                                                                                                                                        class="App__event"
                                                                                                                  >
                                                                                                                                                        <p>
                                                                                                                                                                                              February 25, 2018
                                                                                                                                                        </p>
                                                                                                                  </div>
                                                                            </header>
                                                                            <section
                                                                                                                  class="Clock"
                                                                            >
                                                                                                                  <div
                                                                                                                                                        class="Clock__days"
                                                                                                                  >
                                                                                                                                                        0 day
                                                                                                                  </div>
                                                                                                                  <div
                                                                                                                                                        class="Clock__hours"
                                                                                                                  >
                                                                                                                                                        0 hour
                                                                                                                  </div>
                                                                                                                  <div
                                                                                                                                                        class="Clock__minutes"
                                                                                                                  >
                                                                                                                                                        0 minute
                                                                                                                  </div>
                                                                                                                  <div
                                                                                                                                                        class="Clock__seconds"
                                                                                                                  >
                                                                                                                                                        0 second
                                                                                                                  </div>
                                                                            </section>
                                                                            <section
                                                                                                                  class="Add-Event"
                                                                            >
                                                                                                                  <form
                                                                                                                                                        class="Add-Event__form"
                                                                                                                  >
                                                                                                                                                        <input
                                                                                                                                                                                              type="text"
                                                                                                                                                        />
                                                                                                                                                        <button>
                                                                                                                                                                                              Send
                                                                                                                                                        </button>
                                                                                                                  </form>
                                                                            </section>
                                      </div>
</div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "earliestPendingTime": 0,
                                    "earliestSuspendedTime": 0,
                                    "finishedWork": null,
                                    "firstBatch": null,
                                    "hydrate": false,
                                    "latestPendingTime": 0,
                                    "latestPingedTime": 0,
                                    "latestSuspendedTime": 0,
                                    "nextScheduledRoot": null,
                                    "pendingChildren": null,
                                    "pendingCommitExpirationTime": 0,
                                    "pendingContext": null,
                                    "remainingExpirationTime": 0,
                                  },
                                  "tag": 3,
                                  "treeBaseTime": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "expirationTime": 1,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={Object {}}
/>,
                                      },
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={Object {}}
/>,
                                      },
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "effectTag": 32,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseTime": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                                                        class="App"
                                    >
                                                                        <header
                                                                                                            class="App__header"
                                                                        >
                                                                                                            <h1>
                                                                                                                                                Countdown for
                                                                                                            </h1>
                                                                                                            <div
                                                                                                                                                class="App__event"
                                                                                                            >
                                                                                                                                                <p>
                                                                                                                                                                                    February 25, 2018
                                                                                                                                                </p>
                                                                                                            </div>
                                                                        </header>
                                                                        <section
                                                                                                            class="Clock"
                                                                        >
                                                                                                            <div
                                                                                                                                                class="Clock__days"
                                                                                                            >
                                                                                                                                                0 day
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__hours"
                                                                                                            >
                                                                                                                                                0 hour
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__minutes"
                                                                                                            >
                                                                                                                                                0 minute
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__seconds"
                                                                                                            >
                                                                                                                                                0 second
                                                                                                            </div>
                                                                        </section>
                                                                        <section
                                                                                                            class="Add-Event"
                                                                        >
                                                                                                            <form
                                                                                                                                                class="Add-Event__form"
                                                                                                            >
                                                                                                                                                <input
                                                                                                                                                                                    type="text"
                                                                                                                                                />
                                                                                                                                                <button>
                                                                                                                                                                                    Send
                                                                                                                                                </button>
                                                                                                            </form>
                                                                        </section>
                                    </div>
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "treeBaseTime": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={Object {}}
/>,
                                  },
                                  "expirationTime": 0,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {},
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {},
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 2,
                              "treeBaseTime": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {},
                            "memoizedState": Object {
                              "deadline": "February 25, 2018",
                              "newDeadline": "",
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {},
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 4,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": 0,
                              "alternate": null,
                              "child": [Circular],
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {},
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {},
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {},
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": 0,
                                "alternate": FiberNode {
                                  "_debugID": 1,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": 0,
                                  "alternate": [Circular],
                                  "child": null,
                                  "effectTag": 0,
                                  "expirationTime": 1,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseTime": 0,
                                  "sibling": null,
                                  "stateNode": Object {
                                    "containerInfo": <div>
                                      <div
                                                                            class="App"
                                      >
                                                                            <header
                                                                                                                  class="App__header"
                                                                            >
                                                                                                                  <h1>
                                                                                                                                                        Countdown for
                                                                                                                  </h1>
                                                                                                                  <div
                                                                                                                                                        class="App__event"
                                                                                                                  >
                                                                                                                                                        <p>
                                                                                                                                                                                              February 25, 2018
                                                                                                                                                        </p>
                                                                                                                  </div>
                                                                            </header>
                                                                            <section
                                                                                                                  class="Clock"
                                                                            >
                                                                                                                  <div
                                                                                                                                                        class="Clock__days"
                                                                                                                  >
                                                                                                                                                        0 day
                                                                                                                  </div>
                                                                                                                  <div
                                                                                                                                                        class="Clock__hours"
                                                                                                                  >
                                                                                                                                                        0 hour
                                                                                                                  </div>
                                                                                                                  <div
                                                                                                                                                        class="Clock__minutes"
                                                                                                                  >
                                                                                                                                                        0 minute
                                                                                                                  </div>
                                                                                                                  <div
                                                                                                                                                        class="Clock__seconds"
                                                                                                                  >
                                                                                                                                                        0 second
                                                                                                                  </div>
                                                                            </section>
                                                                            <section
                                                                                                                  class="Add-Event"
                                                                            >
                                                                                                                  <form
                                                                                                                                                        class="Add-Event__form"
                                                                                                                  >
                                                                                                                                                        <input
                                                                                                                                                                                              type="text"
                                                                                                                                                        />
                                                                                                                                                        <button>
                                                                                                                                                                                              Send
                                                                                                                                                        </button>
                                                                                                                  </form>
                                                                            </section>
                                      </div>
</div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "earliestPendingTime": 0,
                                    "earliestSuspendedTime": 0,
                                    "finishedWork": null,
                                    "firstBatch": null,
                                    "hydrate": false,
                                    "latestPendingTime": 0,
                                    "latestPingedTime": 0,
                                    "latestSuspendedTime": 0,
                                    "nextScheduledRoot": null,
                                    "pendingChildren": null,
                                    "pendingCommitExpirationTime": 0,
                                    "pendingContext": null,
                                    "remainingExpirationTime": 0,
                                  },
                                  "tag": 3,
                                  "treeBaseTime": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "expirationTime": 1,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={Object {}}
/>,
                                      },
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={Object {}}
/>,
                                      },
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "effectTag": 32,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseTime": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                                                        class="App"
                                    >
                                                                        <header
                                                                                                            class="App__header"
                                                                        >
                                                                                                            <h1>
                                                                                                                                                Countdown for
                                                                                                            </h1>
                                                                                                            <div
                                                                                                                                                class="App__event"
                                                                                                            >
                                                                                                                                                <p>
                                                                                                                                                                                    February 25, 2018
                                                                                                                                                </p>
                                                                                                            </div>
                                                                        </header>
                                                                        <section
                                                                                                            class="Clock"
                                                                        >
                                                                                                            <div
                                                                                                                                                class="Clock__days"
                                                                                                            >
                                                                                                                                                0 day
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__hours"
                                                                                                            >
                                                                                                                                                0 hour
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__minutes"
                                                                                                            >
                                                                                                                                                0 minute
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__seconds"
                                                                                                            >
                                                                                                                                                0 second
                                                                                                            </div>
                                                                        </section>
                                                                        <section
                                                                                                            class="Add-Event"
                                                                        >
                                                                                                            <form
                                                                                                                                                class="Add-Event__form"
                                                                                                            >
                                                                                                                                                <input
                                                                                                                                                                                    type="text"
                                                                                                                                                />
                                                                                                                                                <button>
                                                                                                                                                                                    Send
                                                                                                                                                </button>
                                                                                                            </form>
                                                                        </section>
                                    </div>
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "treeBaseTime": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={Object {}}
/>,
                                  },
                                  "expirationTime": 0,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {},
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {},
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 2,
                              "treeBaseTime": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": App {
                              "_handleOnChangeDeadline": [Function],
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "_setNewDeadLine": [Function],
                              "context": Object {},
                              "props": Object {},
                              "refs": Object {},
                              "state": Object {
                                "deadline": "February 25, 2018",
                                "newDeadline": "",
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseTime": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": Object {
                            "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                            "lineNumber": 24,
                          },
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "February 25, 2018",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "February 25, 2018",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": <p>
                            February 25, 2018
</p>,
                          "tag": 5,
                          "treeBaseTime": 0,
                          "type": "p",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <p>
                            February 25, 2018
</p>,
                          "className": "App__event",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <p>
                            February 25, 2018
</p>,
                          "className": "App__event",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="App__event"
>
                          <p>
                                                    February 25, 2018
                          </p>
</div>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <h1>
                        Countdown for
</h1>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "h1",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <h1>
                          Countdown for
</h1>,
                        <div
                          className="App__event"
>
                          <p>
                                                    February 25, 2018
                          </p>
</div>,
                      ],
                      "className": "App__header",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <h1>
                          Countdown for
</h1>,
                        <div
                          className="App__event"
>
                          <p>
                                                    February 25, 2018
                          </p>
</div>,
                      ],
                      "className": "App__header",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": [Circular],
                    "stateNode": <header
                      class="App__header"
>
                      <h1>
                                            Countdown for
                      </h1>
                      <div
                                            class="App__event"
                      >
                                            <p>
                                                                  February 25, 2018
                                            </p>
                      </div>
</header>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "header",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": Array [
                      <header
                        className="App__header"
>
                        <h1>
                                                Countdown for
                        </h1>
                        <div
                                                className="App__event"
                        >
                                                <p>
                                                                        February 25, 2018
                                                </p>
                        </div>
</header>,
                      <Clock
                        deadline="February 25, 2018"
/>,
                      <section
                        className="Add-Event"
>
                        <form
                                                className="Add-Event__form"
                        >
                                                <input
                                                                        onChange={[Function]}
                                                                        type="text"
                                                />
                                                <button
                                                                        onClick={[Function]}
                                                >
                                                                        Send
                                                </button>
                        </form>
</section>,
                    ],
                    "className": "App",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <header
                        className="App__header"
>
                        <h1>
                                                Countdown for
                        </h1>
                        <div
                                                className="App__event"
                        >
                                                <p>
                                                                        February 25, 2018
                                                </p>
                        </div>
</header>,
                      <Clock
                        deadline="February 25, 2018"
/>,
                      <section
                        className="Add-Event"
>
                        <form
                                                className="Add-Event__form"
                        >
                                                <input
                                                                        onChange={[Function]}
                                                                        type="text"
                                                />
                                                <button
                                                                        onClick={[Function]}
                                                >
                                                                        Send
                                                </button>
                        </form>
</section>,
                    ],
                    "className": "App",
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 5,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="App"
                              >
                                                            <header
                                                                                          class="App__header"
                                                            >
                                                                                          <h1>
                                                                                                                        Countdown for
                                                                                          </h1>
                                                                                          <div
                                                                                                                        class="App__event"
                                                                                          >
                                                                                                                        <p>
                                                                                                                                                      February 25, 2018
                                                                                                                        </p>
                                                                                          </div>
                                                            </header>
                                                            <section
                                                                                          class="Clock"
                                                            >
                                                                                          <div
                                                                                                                        class="Clock__days"
                                                                                          >
                                                                                                                        0 day
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__hours"
                                                                                          >
                                                                                                                        0 hour
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__minutes"
                                                                                          >
                                                                                                                        0 minute
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__seconds"
                                                                                          >
                                                                                                                        0 second
                                                                                          </div>
                                                            </section>
                                                            <section
                                                                                          class="Add-Event"
                                                            >
                                                                                          <form
                                                                                                                        class="Add-Event__form"
                                                                                          >
                                                                                                                        <input
                                                                                                                                                      type="text"
                                                                                                                        />
                                                                                                                        <button>
                                                                                                                                                      Send
                                                                                                                        </button>
                                                                                          </form>
                                                            </section>
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "treeBaseTime": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "expirationTime": 1,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "tag": 0,
                            },
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "tag": 0,
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={Object {}}
/>,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                                                        class="App"
                            >
                                                        <header
                                                                                    class="App__header"
                                                        >
                                                                                    <h1>
                                                                                                                Countdown for
                                                                                    </h1>
                                                                                    <div
                                                                                                                class="App__event"
                                                                                    >
                                                                                                                <p>
                                                                                                                                            February 25, 2018
                                                                                                                </p>
                                                                                    </div>
                                                        </header>
                                                        <section
                                                                                    class="Clock"
                                                        >
                                                                                    <div
                                                                                                                class="Clock__days"
                                                                                    >
                                                                                                                0 day
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__hours"
                                                                                    >
                                                                                                                0 hour
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__minutes"
                                                                                    >
                                                                                                                0 minute
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__seconds"
                                                                                    >
                                                                                                                0 second
                                                                                    </div>
                                                        </section>
                                                        <section
                                                                                    class="Add-Event"
                                                        >
                                                                                    <form
                                                                                                                class="Add-Event__form"
                                                                                    >
                                                                                                                <input
                                                                                                                                            type="text"
                                                                                                                />
                                                                                                                <button>
                                                                                                                                            Send
                                                                                                                </button>
                                                                                    </form>
                                                        </section>
                            </div>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "treeBaseTime": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
/>,
                          },
                          "expirationTime": 0,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": null,
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": null,
                        },
                      },
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseTime": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {},
                    "memoizedState": Object {
                      "deadline": "February 25, 2018",
                      "newDeadline": "",
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {},
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="App"
                              >
                                                            <header
                                                                                          class="App__header"
                                                            >
                                                                                          <h1>
                                                                                                                        Countdown for
                                                                                          </h1>
                                                                                          <div
                                                                                                                        class="App__event"
                                                                                          >
                                                                                                                        <p>
                                                                                                                                                      February 25, 2018
                                                                                                                        </p>
                                                                                          </div>
                                                            </header>
                                                            <section
                                                                                          class="Clock"
                                                            >
                                                                                          <div
                                                                                                                        class="Clock__days"
                                                                                          >
                                                                                                                        0 day
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__hours"
                                                                                          >
                                                                                                                        0 hour
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__minutes"
                                                                                          >
                                                                                                                        0 minute
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__seconds"
                                                                                          >
                                                                                                                        0 second
                                                                                          </div>
                                                            </section>
                                                            <section
                                                                                          class="Add-Event"
                                                            >
                                                                                          <form
                                                                                                                        class="Add-Event__form"
                                                                                          >
                                                                                                                        <input
                                                                                                                                                      type="text"
                                                                                                                        />
                                                                                                                        <button>
                                                                                                                                                      Send
                                                                                                                        </button>
                                                                                          </form>
                                                            </section>
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "treeBaseTime": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "expirationTime": 1,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "tag": 0,
                            },
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "tag": 0,
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={Object {}}
/>,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                                                        class="App"
                            >
                                                        <header
                                                                                    class="App__header"
                                                        >
                                                                                    <h1>
                                                                                                                Countdown for
                                                                                    </h1>
                                                                                    <div
                                                                                                                class="App__event"
                                                                                    >
                                                                                                                <p>
                                                                                                                                            February 25, 2018
                                                                                                                </p>
                                                                                    </div>
                                                        </header>
                                                        <section
                                                                                    class="Clock"
                                                        >
                                                                                    <div
                                                                                                                class="Clock__days"
                                                                                    >
                                                                                                                0 day
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__hours"
                                                                                    >
                                                                                                                0 hour
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__minutes"
                                                                                    >
                                                                                                                0 minute
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__seconds"
                                                                                    >
                                                                                                                0 second
                                                                                    </div>
                                                        </section>
                                                        <section
                                                                                    class="Add-Event"
                                                        >
                                                                                    <form
                                                                                                                class="Add-Event__form"
                                                                                    >
                                                                                                                <input
                                                                                                                                            type="text"
                                                                                                                />
                                                                                                                <button>
                                                                                                                                            Send
                                                                                                                </button>
                                                                                    </form>
                                                        </section>
                            </div>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "treeBaseTime": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
/>,
                          },
                          "expirationTime": 0,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": null,
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": null,
                        },
                      },
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseTime": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": App {
                      "_handleOnChangeDeadline": [Function],
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "_setNewDeadLine": [Function],
                      "context": Object {},
                      "props": Object {},
                      "refs": Object {},
                      "state": Object {
                        "deadline": "February 25, 2018",
                        "newDeadline": "",
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseTime": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="App"
>
                    <header
                                        class="App__header"
                    >
                                        <h1>
                                                            Countdown for
                                        </h1>
                                        <div
                                                            class="App__event"
                                        >
                                                            <p>
                                                                                February 25, 2018
                                                            </p>
                                        </div>
                    </header>
                    <section
                                        class="Clock"
                    >
                                        <div
                                                            class="Clock__days"
                                        >
                                                            0 day
                                        </div>
                                        <div
                                                            class="Clock__hours"
                                        >
                                                            0 hour
                                        </div>
                                        <div
                                                            class="Clock__minutes"
                                        >
                                                            0 minute
                                        </div>
                                        <div
                                                            class="Clock__seconds"
                                        >
                                                            0 second
                                        </div>
                    </section>
                    <section
                                        class="Add-Event"
                    >
                                        <form
                                                            class="Add-Event__form"
                                        >
                                                            <input
                                                                                type="text"
                                                            />
                                                            <button>
                                                                                Send
                                                            </button>
                                        </form>
                    </section>
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <section
                  class="Add-Event"
>
                  <form
                                    class="Add-Event__form"
                  >
                                    <input
                                                      type="text"
                                    />
                                    <button>
                                                      Send
                                    </button>
                  </form>
</section>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "section",
                "updateQueue": null,
              },
              "stateNode": [Circular],
              "tag": 2,
              "treeBaseTime": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "_reactInternalInstance": Object {},
            "context": Object {},
            "intervalId": 2,
            "props": Object {
              "deadline": "February 25, 2018",
            },
            "refs": Object {},
            "state": Object {
              "days": 0,
              "deadline": "",
              "hours": 0,
              "minutes": 0,
              "seconds": 0,
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "deadline": "February 25, 2018",
          },
          "ref": null,
          "rendered": Object {
            "instance": <section
              class="Clock"
>
              <div
                            class="Clock__days"
              >
                            0 day
              </div>
              <div
                            class="Clock__hours"
              >
                            0 hour
              </div>
              <div
                            class="Clock__minutes"
              >
                            0 minute
              </div>
              <div
                            class="Clock__seconds"
              >
                            0 second
              </div>
</section>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="Clock__days"
>
                  0 day
</div>,
                <div
                  className="Clock__hours"
>
                  0 hour
</div>,
                <div
                  className="Clock__minutes"
>
                  0 minute
</div>,
                <div
                  className="Clock__seconds"
>
                  0 second
</div>,
              ],
              "className": "Clock",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <div
                  class="Clock__days"
>
                  0 day
</div>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "0 day",
                  "className": "Clock__days",
                },
                "ref": null,
                "rendered": Array [
                  "0 day",
                ],
                "type": "div",
              },
              Object {
                "instance": <div
                  class="Clock__hours"
>
                  0 hour
</div>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "0 hour",
                  "className": "Clock__hours",
                },
                "ref": null,
                "rendered": Array [
                  "0 hour",
                ],
                "type": "div",
              },
              Object {
                "instance": <div
                  class="Clock__minutes"
>
                  0 minute
</div>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "0 minute",
                  "className": "Clock__minutes",
                },
                "ref": null,
                "rendered": Array [
                  "0 minute",
                ],
                "type": "div",
              },
              Object {
                "instance": <div
                  class="Clock__seconds"
>
                  0 second
</div>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "0 second",
                  "className": "Clock__seconds",
                },
                "ref": null,
                "rendered": Array [
                  "0 second",
                ],
                "type": "div",
              },
            ],
            "type": "section",
          },
          "type": [Function],
        },
        Object {
          "instance": <section
            class="Add-Event"
>
            <form
                        class="Add-Event__form"
            >
                        <input
                                    type="text"
                        />
                        <button>
                                    Send
                        </button>
            </form>
</section>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <form
              className="Add-Event__form"
>
              <input
                            onChange={[Function]}
                            type="text"
              />
              <button
                            onClick={[Function]}
              >
                            Send
              </button>
</form>,
            "className": "Add-Event",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <form
                class="Add-Event__form"
>
                <input
                                type="text"
                />
                <button>
                                Send
                </button>
</form>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <input
                    onChange={[Function]}
                    type="text"
/>,
                  <button
                    onClick={[Function]}
>
                    Send
</button>,
                ],
                "className": "Add-Event__form",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <input
                    type="text"
/>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "onChange": [Function],
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": Array [
                    undefined,
                  ],
                  "type": "input",
                },
                Object {
                  "instance": <button>
                    Send
</button>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Send",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": Array [
                    "Send",
                  ],
                  "type": "button",
                },
              ],
              "type": "form",
            },
          ],
          "type": "section",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": App {
        "_handleOnChangeDeadline": [Function],
        "_reactInternalFiber": FiberNode {
          "_debugID": 5,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 4,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": FiberNode {
              "_debugID": 8,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                "lineNumber": 27,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 13,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                  "lineNumber": 29,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 14,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                    "lineNumber": 30,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "0 day",
                    "className": "Clock__days",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "0 day",
                    "className": "Clock__days",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 15,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                      "lineNumber": 31,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "0 hour",
                      "className": "Clock__hours",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "0 hour",
                      "className": "Clock__hours",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 16,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                        "lineNumber": 32,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 2,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "0 minute",
                        "className": "Clock__minutes",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "0 minute",
                        "className": "Clock__minutes",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": FiberNode {
                        "_debugID": 17,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                          "lineNumber": 33,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 3,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "0 second",
                          "className": "Clock__seconds",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "0 second",
                          "className": "Clock__seconds",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="Clock__seconds"
>
                          0 second
</div>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <div
                        class="Clock__minutes"
>
                        0 minute
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <div
                      class="Clock__hours"
>
                      0 hour
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <div
                    class="Clock__days"
>
                    0 day
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <div
                      className="Clock__days"
>
                      0 day
</div>,
                    <div
                      className="Clock__hours"
>
                      0 hour
</div>,
                    <div
                      className="Clock__minutes"
>
                      0 minute
</div>,
                    <div
                      className="Clock__seconds"
>
                      0 second
</div>,
                  ],
                  "className": "Clock",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <div
                      className="Clock__days"
>
                      0 day
</div>,
                    <div
                      className="Clock__hours"
>
                      0 hour
</div>,
                    <div
                      className="Clock__minutes"
>
                      0 minute
</div>,
                    <div
                      className="Clock__seconds"
>
                      0 second
</div>,
                  ],
                  "className": "Clock",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <section
                  class="Clock"
>
                  <div
                                    class="Clock__days"
                  >
                                    0 day
                  </div>
                  <div
                                    class="Clock__hours"
                  >
                                    0 hour
                  </div>
                  <div
                                    class="Clock__minutes"
                  >
                                    0 minute
                  </div>
                  <div
                                    class="Clock__seconds"
                  >
                                    0 second
                  </div>
</section>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "section",
                "updateQueue": null,
              },
              "effectTag": 5,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 1,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "deadline": "February 25, 2018",
              },
              "memoizedState": Object {
                "days": 0,
                "deadline": "",
                "hours": 0,
                "minutes": 0,
                "seconds": 0,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "deadline": "February 25, 2018",
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 6,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 20,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 21,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 22,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Countdown for",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Countdown for",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 11,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 23,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 12,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                          "lineNumber": 24,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "February 25, 2018",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "February 25, 2018",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <p>
                          February 25, 2018
</p>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "p",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <p>
                          February 25, 2018
</p>,
                        "className": "App__event",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <p>
                          February 25, 2018
</p>,
                        "className": "App__event",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="App__event"
>
                        <p>
                                                February 25, 2018
                        </p>
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <h1>
                      Countdown for
</h1>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "h1",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <h1>
                        Countdown for
</h1>,
                      <div
                        className="App__event"
>
                        <p>
                                                February 25, 2018
                        </p>
</div>,
                    ],
                    "className": "App__header",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <h1>
                        Countdown for
</h1>,
                      <div
                        className="App__event"
>
                        <p>
                                                February 25, 2018
                        </p>
</div>,
                    ],
                    "className": "App__header",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": [Circular],
                  "stateNode": <header
                    class="App__header"
>
                    <h1>
                                        Countdown for
                    </h1>
                    <div
                                        class="App__event"
                    >
                                        <p>
                                                            February 25, 2018
                                        </p>
                    </div>
</header>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "header",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": Array [
                    <header
                      className="App__header"
>
                      <h1>
                                            Countdown for
                      </h1>
                      <div
                                            className="App__event"
                      >
                                            <p>
                                                                  February 25, 2018
                                            </p>
                      </div>
</header>,
                    <Clock
                      deadline="February 25, 2018"
/>,
                    <section
                      className="Add-Event"
>
                      <form
                                            className="Add-Event__form"
                      >
                                            <input
                                                                  onChange={[Function]}
                                                                  type="text"
                                            />
                                            <button
                                                                  onClick={[Function]}
                                            >
                                                                  Send
                                            </button>
                      </form>
</section>,
                  ],
                  "className": "App",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <header
                      className="App__header"
>
                      <h1>
                                            Countdown for
                      </h1>
                      <div
                                            className="App__event"
                      >
                                            <p>
                                                                  February 25, 2018
                                            </p>
                      </div>
</header>,
                    <Clock
                      deadline="February 25, 2018"
/>,
                    <section
                      className="Add-Event"
>
                      <form
                                            className="Add-Event__form"
                      >
                                            <input
                                                                  onChange={[Function]}
                                                                  type="text"
                                            />
                                            <button
                                                                  onClick={[Function]}
                                            >
                                                                  Send
                                            </button>
                      </form>
</section>,
                  ],
                  "className": "App",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <div
                  class="App"
>
                  <header
                                    class="App__header"
                  >
                                    <h1>
                                                      Countdown for
                                    </h1>
                                    <div
                                                      class="App__event"
                                    >
                                                      <p>
                                                                        February 25, 2018
                                                      </p>
                                    </div>
                  </header>
                  <section
                                    class="Clock"
                  >
                                    <div
                                                      class="Clock__days"
                                    >
                                                      0 day
                                    </div>
                                    <div
                                                      class="Clock__hours"
                                    >
                                                      0 hour
                                    </div>
                                    <div
                                                      class="Clock__minutes"
                                    >
                                                      0 minute
                                    </div>
                                    <div
                                                      class="Clock__seconds"
                                    >
                                                      0 second
                                    </div>
                  </section>
                  <section
                                    class="Add-Event"
                  >
                                    <form
                                                      class="Add-Event__form"
                                    >
                                                      <input
                                                                        type="text"
                                                      />
                                                      <button>
                                                                        Send
                                                      </button>
                                    </form>
                  </section>
</div>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "div",
                "updateQueue": null,
              },
              "selfBaseTime": 0,
              "sibling": FiberNode {
                "_debugID": 9,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 28,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 18,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 29,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 19,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 30,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "onChange": [Function],
                      "type": "text",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "onChange": [Function],
                      "type": "text",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 20,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 31,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Send",
                        "onClick": [Function],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "Send",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <button>
                        Send
</button>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "button",
                      "updateQueue": null,
                    },
                    "stateNode": <input
                      type="text"
/>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <input
                        onChange={[Function]}
                        type="text"
/>,
                      <button
                        onClick={[Function]}
>
                        Send
</button>,
                    ],
                    "className": "Add-Event__form",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <input
                        onChange={[Function]}
                        type="text"
/>,
                      <button
                        onClick={[Function]}
>
                        Send
</button>,
                    ],
                    "className": "Add-Event__form",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <form
                    class="Add-Event__form"
>
                    <input
                                        type="text"
                    />
                    <button>
                                        Send
                    </button>
</form>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "form",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 2,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <form
                    className="Add-Event__form"
>
                    <input
                                        onChange={[Function]}
                                        type="text"
                    />
                    <button
                                        onClick={[Function]}
                    >
                                        Send
                    </button>
</form>,
                  "className": "Add-Event",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <form
                    className="Add-Event__form"
>
                    <input
                                        onChange={[Function]}
                                        type="text"
                    />
                    <button
                                        onClick={[Function]}
                    >
                                        Send
                    </button>
</form>,
                  "className": "Add-Event",
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 6,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 20,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 7,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 21,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 10,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 22,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Countdown for",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "Countdown for",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": FiberNode {
                        "_debugID": 11,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                          "lineNumber": 23,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 12,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                            "lineNumber": 24,
                          },
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "February 25, 2018",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "February 25, 2018",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": <p>
                            February 25, 2018
</p>,
                          "tag": 5,
                          "treeBaseTime": 0,
                          "type": "p",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <p>
                            February 25, 2018
</p>,
                          "className": "App__event",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <p>
                            February 25, 2018
</p>,
                          "className": "App__event",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="App__event"
>
                          <p>
                                                    February 25, 2018
                          </p>
</div>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <h1>
                        Countdown for
</h1>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "h1",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <h1>
                          Countdown for
</h1>,
                        <div
                          className="App__event"
>
                          <p>
                                                    February 25, 2018
                          </p>
</div>,
                      ],
                      "className": "App__header",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <h1>
                          Countdown for
</h1>,
                        <div
                          className="App__event"
>
                          <p>
                                                    February 25, 2018
                          </p>
</div>,
                      ],
                      "className": "App__header",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": [Circular],
                    "stateNode": <header
                      class="App__header"
>
                      <h1>
                                            Countdown for
                      </h1>
                      <div
                                            class="App__event"
                      >
                                            <p>
                                                                  February 25, 2018
                                            </p>
                      </div>
</header>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "header",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": Array [
                      <header
                        className="App__header"
>
                        <h1>
                                                Countdown for
                        </h1>
                        <div
                                                className="App__event"
                        >
                                                <p>
                                                                        February 25, 2018
                                                </p>
                        </div>
</header>,
                      <Clock
                        deadline="February 25, 2018"
/>,
                      <section
                        className="Add-Event"
>
                        <form
                                                className="Add-Event__form"
                        >
                                                <input
                                                                        onChange={[Function]}
                                                                        type="text"
                                                />
                                                <button
                                                                        onClick={[Function]}
                                                >
                                                                        Send
                                                </button>
                        </form>
</section>,
                    ],
                    "className": "App",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <header
                        className="App__header"
>
                        <h1>
                                                Countdown for
                        </h1>
                        <div
                                                className="App__event"
                        >
                                                <p>
                                                                        February 25, 2018
                                                </p>
                        </div>
</header>,
                      <Clock
                        deadline="February 25, 2018"
/>,
                      <section
                        className="Add-Event"
>
                        <form
                                                className="Add-Event__form"
                        >
                                                <input
                                                                        onChange={[Function]}
                                                                        type="text"
                                                />
                                                <button
                                                                        onClick={[Function]}
                                                >
                                                                        Send
                                                </button>
                        </form>
</section>,
                    ],
                    "className": "App",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="App"
>
                    <header
                                        class="App__header"
                    >
                                        <h1>
                                                            Countdown for
                                        </h1>
                                        <div
                                                            class="App__event"
                                        >
                                                            <p>
                                                                                February 25, 2018
                                                            </p>
                                        </div>
                    </header>
                    <section
                                        class="Clock"
                    >
                                        <div
                                                            class="Clock__days"
                                        >
                                                            0 day
                                        </div>
                                        <div
                                                            class="Clock__hours"
                                        >
                                                            0 hour
                                        </div>
                                        <div
                                                            class="Clock__minutes"
                                        >
                                                            0 minute
                                        </div>
                                        <div
                                                            class="Clock__seconds"
                                        >
                                                            0 second
                                        </div>
                    </section>
                    <section
                                        class="Add-Event"
                    >
                                        <form
                                                            class="Add-Event__form"
                                        >
                                                            <input
                                                                                type="text"
                                                            />
                                                            <button>
                                                                                Send
                                                            </button>
                                        </form>
                    </section>
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <section
                  class="Add-Event"
>
                  <form
                                    class="Add-Event__form"
                  >
                                    <input
                                                      type="text"
                                    />
                                    <button>
                                                      Send
                                    </button>
                  </form>
</section>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "section",
                "updateQueue": null,
              },
              "stateNode": Clock {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "intervalId": 2,
                "props": Object {
                  "deadline": "February 25, 2018",
                },
                "refs": Object {},
                "state": Object {
                  "days": 0,
                  "deadline": "",
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 0,
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseTime": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "index": 0,
            "key": null,
            "lastEffect": FiberNode {
              "_debugID": 8,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                "lineNumber": 27,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 13,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                  "lineNumber": 29,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 14,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                    "lineNumber": 30,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "0 day",
                    "className": "Clock__days",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "0 day",
                    "className": "Clock__days",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 15,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                      "lineNumber": 31,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "0 hour",
                      "className": "Clock__hours",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "0 hour",
                      "className": "Clock__hours",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 16,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                        "lineNumber": 32,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 2,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "0 minute",
                        "className": "Clock__minutes",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "0 minute",
                        "className": "Clock__minutes",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": FiberNode {
                        "_debugID": 17,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                          "lineNumber": 33,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 3,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "0 second",
                          "className": "Clock__seconds",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "0 second",
                          "className": "Clock__seconds",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="Clock__seconds"
>
                          0 second
</div>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <div
                        class="Clock__minutes"
>
                        0 minute
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <div
                      class="Clock__hours"
>
                      0 hour
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <div
                    class="Clock__days"
>
                    0 day
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <div
                      className="Clock__days"
>
                      0 day
</div>,
                    <div
                      className="Clock__hours"
>
                      0 hour
</div>,
                    <div
                      className="Clock__minutes"
>
                      0 minute
</div>,
                    <div
                      className="Clock__seconds"
>
                      0 second
</div>,
                  ],
                  "className": "Clock",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <div
                      className="Clock__days"
>
                      0 day
</div>,
                    <div
                      className="Clock__hours"
>
                      0 hour
</div>,
                    <div
                      className="Clock__minutes"
>
                      0 minute
</div>,
                    <div
                      className="Clock__seconds"
>
                      0 second
</div>,
                  ],
                  "className": "Clock",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <section
                  class="Clock"
>
                  <div
                                    class="Clock__days"
                  >
                                    0 day
                  </div>
                  <div
                                    class="Clock__hours"
                  >
                                    0 hour
                  </div>
                  <div
                                    class="Clock__minutes"
                  >
                                    0 minute
                  </div>
                  <div
                                    class="Clock__seconds"
                  >
                                    0 second
                  </div>
</section>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "section",
                "updateQueue": null,
              },
              "effectTag": 5,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 1,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "deadline": "February 25, 2018",
              },
              "memoizedState": Object {
                "days": 0,
                "deadline": "",
                "hours": 0,
                "minutes": 0,
                "seconds": 0,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "deadline": "February 25, 2018",
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 6,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 20,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 21,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 22,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Countdown for",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Countdown for",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 11,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 23,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 12,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                          "lineNumber": 24,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "February 25, 2018",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "February 25, 2018",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <p>
                          February 25, 2018
</p>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "p",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <p>
                          February 25, 2018
</p>,
                        "className": "App__event",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <p>
                          February 25, 2018
</p>,
                        "className": "App__event",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="App__event"
>
                        <p>
                                                February 25, 2018
                        </p>
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <h1>
                      Countdown for
</h1>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "h1",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <h1>
                        Countdown for
</h1>,
                      <div
                        className="App__event"
>
                        <p>
                                                February 25, 2018
                        </p>
</div>,
                    ],
                    "className": "App__header",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <h1>
                        Countdown for
</h1>,
                      <div
                        className="App__event"
>
                        <p>
                                                February 25, 2018
                        </p>
</div>,
                    ],
                    "className": "App__header",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": [Circular],
                  "stateNode": <header
                    class="App__header"
>
                    <h1>
                                        Countdown for
                    </h1>
                    <div
                                        class="App__event"
                    >
                                        <p>
                                                            February 25, 2018
                                        </p>
                    </div>
</header>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "header",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": Array [
                    <header
                      className="App__header"
>
                      <h1>
                                            Countdown for
                      </h1>
                      <div
                                            className="App__event"
                      >
                                            <p>
                                                                  February 25, 2018
                                            </p>
                      </div>
</header>,
                    <Clock
                      deadline="February 25, 2018"
/>,
                    <section
                      className="Add-Event"
>
                      <form
                                            className="Add-Event__form"
                      >
                                            <input
                                                                  onChange={[Function]}
                                                                  type="text"
                                            />
                                            <button
                                                                  onClick={[Function]}
                                            >
                                                                  Send
                                            </button>
                      </form>
</section>,
                  ],
                  "className": "App",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <header
                      className="App__header"
>
                      <h1>
                                            Countdown for
                      </h1>
                      <div
                                            className="App__event"
                      >
                                            <p>
                                                                  February 25, 2018
                                            </p>
                      </div>
</header>,
                    <Clock
                      deadline="February 25, 2018"
/>,
                    <section
                      className="Add-Event"
>
                      <form
                                            className="Add-Event__form"
                      >
                                            <input
                                                                  onChange={[Function]}
                                                                  type="text"
                                            />
                                            <button
                                                                  onClick={[Function]}
                                            >
                                                                  Send
                                            </button>
                      </form>
</section>,
                  ],
                  "className": "App",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <div
                  class="App"
>
                  <header
                                    class="App__header"
                  >
                                    <h1>
                                                      Countdown for
                                    </h1>
                                    <div
                                                      class="App__event"
                                    >
                                                      <p>
                                                                        February 25, 2018
                                                      </p>
                                    </div>
                  </header>
                  <section
                                    class="Clock"
                  >
                                    <div
                                                      class="Clock__days"
                                    >
                                                      0 day
                                    </div>
                                    <div
                                                      class="Clock__hours"
                                    >
                                                      0 hour
                                    </div>
                                    <div
                                                      class="Clock__minutes"
                                    >
                                                      0 minute
                                    </div>
                                    <div
                                                      class="Clock__seconds"
                                    >
                                                      0 second
                                    </div>
                  </section>
                  <section
                                    class="Add-Event"
                  >
                                    <form
                                                      class="Add-Event__form"
                                    >
                                                      <input
                                                                        type="text"
                                                      />
                                                      <button>
                                                                        Send
                                                      </button>
                                    </form>
                  </section>
</div>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "div",
                "updateQueue": null,
              },
              "selfBaseTime": 0,
              "sibling": FiberNode {
                "_debugID": 9,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 28,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 18,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 29,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 19,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 30,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "onChange": [Function],
                      "type": "text",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "onChange": [Function],
                      "type": "text",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 20,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 31,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Send",
                        "onClick": [Function],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "Send",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <button>
                        Send
</button>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "button",
                      "updateQueue": null,
                    },
                    "stateNode": <input
                      type="text"
/>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <input
                        onChange={[Function]}
                        type="text"
/>,
                      <button
                        onClick={[Function]}
>
                        Send
</button>,
                    ],
                    "className": "Add-Event__form",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <input
                        onChange={[Function]}
                        type="text"
/>,
                      <button
                        onClick={[Function]}
>
                        Send
</button>,
                    ],
                    "className": "Add-Event__form",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <form
                    class="Add-Event__form"
>
                    <input
                                        type="text"
                    />
                    <button>
                                        Send
                    </button>
</form>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "form",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 2,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <form
                    className="Add-Event__form"
>
                    <input
                                        onChange={[Function]}
                                        type="text"
                    />
                    <button
                                        onClick={[Function]}
                    >
                                        Send
                    </button>
</form>,
                  "className": "Add-Event",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <form
                    className="Add-Event__form"
>
                    <input
                                        onChange={[Function]}
                                        type="text"
                    />
                    <button
                                        onClick={[Function]}
                    >
                                        Send
                    </button>
</form>,
                  "className": "Add-Event",
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 6,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 20,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 7,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 21,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 10,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 22,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Countdown for",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "Countdown for",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": FiberNode {
                        "_debugID": 11,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                          "lineNumber": 23,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 12,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                            "lineNumber": 24,
                          },
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "February 25, 2018",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "February 25, 2018",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": <p>
                            February 25, 2018
</p>,
                          "tag": 5,
                          "treeBaseTime": 0,
                          "type": "p",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <p>
                            February 25, 2018
</p>,
                          "className": "App__event",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <p>
                            February 25, 2018
</p>,
                          "className": "App__event",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="App__event"
>
                          <p>
                                                    February 25, 2018
                          </p>
</div>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <h1>
                        Countdown for
</h1>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "h1",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <h1>
                          Countdown for
</h1>,
                        <div
                          className="App__event"
>
                          <p>
                                                    February 25, 2018
                          </p>
</div>,
                      ],
                      "className": "App__header",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <h1>
                          Countdown for
</h1>,
                        <div
                          className="App__event"
>
                          <p>
                                                    February 25, 2018
                          </p>
</div>,
                      ],
                      "className": "App__header",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": [Circular],
                    "stateNode": <header
                      class="App__header"
>
                      <h1>
                                            Countdown for
                      </h1>
                      <div
                                            class="App__event"
                      >
                                            <p>
                                                                  February 25, 2018
                                            </p>
                      </div>
</header>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "header",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": Array [
                      <header
                        className="App__header"
>
                        <h1>
                                                Countdown for
                        </h1>
                        <div
                                                className="App__event"
                        >
                                                <p>
                                                                        February 25, 2018
                                                </p>
                        </div>
</header>,
                      <Clock
                        deadline="February 25, 2018"
/>,
                      <section
                        className="Add-Event"
>
                        <form
                                                className="Add-Event__form"
                        >
                                                <input
                                                                        onChange={[Function]}
                                                                        type="text"
                                                />
                                                <button
                                                                        onClick={[Function]}
                                                >
                                                                        Send
                                                </button>
                        </form>
</section>,
                    ],
                    "className": "App",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <header
                        className="App__header"
>
                        <h1>
                                                Countdown for
                        </h1>
                        <div
                                                className="App__event"
                        >
                                                <p>
                                                                        February 25, 2018
                                                </p>
                        </div>
</header>,
                      <Clock
                        deadline="February 25, 2018"
/>,
                      <section
                        className="Add-Event"
>
                        <form
                                                className="Add-Event__form"
                        >
                                                <input
                                                                        onChange={[Function]}
                                                                        type="text"
                                                />
                                                <button
                                                                        onClick={[Function]}
                                                >
                                                                        Send
                                                </button>
                        </form>
</section>,
                    ],
                    "className": "App",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="App"
>
                    <header
                                        class="App__header"
                    >
                                        <h1>
                                                            Countdown for
                                        </h1>
                                        <div
                                                            class="App__event"
                                        >
                                                            <p>
                                                                                February 25, 2018
                                                            </p>
                                        </div>
                    </header>
                    <section
                                        class="Clock"
                    >
                                        <div
                                                            class="Clock__days"
                                        >
                                                            0 day
                                        </div>
                                        <div
                                                            class="Clock__hours"
                                        >
                                                            0 hour
                                        </div>
                                        <div
                                                            class="Clock__minutes"
                                        >
                                                            0 minute
                                        </div>
                                        <div
                                                            class="Clock__seconds"
                                        >
                                                            0 second
                                        </div>
                    </section>
                    <section
                                        class="Add-Event"
                    >
                                        <form
                                                            class="Add-Event__form"
                                        >
                                                            <input
                                                                                type="text"
                                                            />
                                                            <button>
                                                                                Send
                                                            </button>
                                        </form>
                    </section>
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <section
                  class="Add-Event"
>
                  <form
                                    class="Add-Event__form"
                  >
                                    <input
                                                      type="text"
                                    />
                                    <button>
                                                      Send
                                    </button>
                  </form>
</section>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "section",
                "updateQueue": null,
              },
              "stateNode": Clock {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "intervalId": 2,
                "props": Object {
                  "deadline": "February 25, 2018",
                },
                "refs": Object {},
                "state": Object {
                  "days": 0,
                  "deadline": "",
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 0,
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseTime": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {},
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": FiberNode {
                "_debugID": 1,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 1,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                                        class="App"
                    >
                                        <header
                                                            class="App__header"
                                        >
                                                            <h1>
                                                                                Countdown for
                                                            </h1>
                                                            <div
                                                                                class="App__event"
                                                            >
                                                                                <p>
                                                                                                    February 25, 2018
                                                                                </p>
                                                            </div>
                                        </header>
                                        <section
                                                            class="Clock"
                                        >
                                                            <div
                                                                                class="Clock__days"
                                                            >
                                                                                0 day
                                                            </div>
                                                            <div
                                                                                class="Clock__hours"
                                                            >
                                                                                0 hour
                                                            </div>
                                                            <div
                                                                                class="Clock__minutes"
                                                            >
                                                                                0 minute
                                                            </div>
                                                            <div
                                                                                class="Clock__seconds"
                                                            >
                                                                                0 second
                                                            </div>
                                        </section>
                                        <section
                                                            class="Add-Event"
                                        >
                                                            <form
                                                                                class="Add-Event__form"
                                                            >
                                                                                <input
                                                                                                    type="text"
                                                                                />
                                                                                <button>
                                                                                                    Send
                                                                                </button>
                                                            </form>
                                        </section>
                    </div>
</div>,
                  "context": Object {},
                  "current": [Circular],
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "treeBaseTime": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "expirationTime": 1,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
/>,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
/>,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "effectTag": 32,
              "expirationTime": 0,
              "firstEffect": FiberNode {
                "_debugID": 8,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 27,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 13,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                    "lineNumber": 29,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 14,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                      "lineNumber": 30,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "0 day",
                      "className": "Clock__days",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "0 day",
                      "className": "Clock__days",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 15,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                        "lineNumber": 31,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "0 hour",
                        "className": "Clock__hours",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "0 hour",
                        "className": "Clock__hours",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": FiberNode {
                        "_debugID": 16,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                          "lineNumber": 32,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 2,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "0 minute",
                          "className": "Clock__minutes",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "0 minute",
                          "className": "Clock__minutes",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": FiberNode {
                          "_debugID": 17,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                            "lineNumber": 33,
                          },
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 3,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "0 second",
                            "className": "Clock__seconds",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "0 second",
                            "className": "Clock__seconds",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": <div
                            class="Clock__seconds"
>
                            0 second
</div>,
                          "tag": 5,
                          "treeBaseTime": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "stateNode": <div
                          class="Clock__minutes"
>
                          0 minute
</div>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <div
                        class="Clock__hours"
>
                        0 hour
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <div
                      class="Clock__days"
>
                      0 day
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <div
                        className="Clock__days"
>
                        0 day
</div>,
                      <div
                        className="Clock__hours"
>
                        0 hour
</div>,
                      <div
                        className="Clock__minutes"
>
                        0 minute
</div>,
                      <div
                        className="Clock__seconds"
>
                        0 second
</div>,
                    ],
                    "className": "Clock",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <div
                        className="Clock__days"
>
                        0 day
</div>,
                      <div
                        className="Clock__hours"
>
                        0 hour
</div>,
                      <div
                        className="Clock__minutes"
>
                        0 minute
</div>,
                      <div
                        className="Clock__seconds"
>
                        0 second
</div>,
                    ],
                    "className": "Clock",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <section
                    class="Clock"
>
                    <div
                                        class="Clock__days"
                    >
                                        0 day
                    </div>
                    <div
                                        class="Clock__hours"
                    >
                                        0 hour
                    </div>
                    <div
                                        class="Clock__minutes"
                    >
                                        0 minute
                    </div>
                    <div
                                        class="Clock__seconds"
                    >
                                        0 second
                    </div>
</section>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "section",
                  "updateQueue": null,
                },
                "effectTag": 5,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "deadline": "February 25, 2018",
                },
                "memoizedState": Object {
                  "days": 0,
                  "deadline": "",
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 0,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "deadline": "February 25, 2018",
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 6,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 20,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 7,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 21,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 10,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 22,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Countdown for",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "Countdown for",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": FiberNode {
                        "_debugID": 11,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                          "lineNumber": 23,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 12,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                            "lineNumber": 24,
                          },
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "February 25, 2018",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "February 25, 2018",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": <p>
                            February 25, 2018
</p>,
                          "tag": 5,
                          "treeBaseTime": 0,
                          "type": "p",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <p>
                            February 25, 2018
</p>,
                          "className": "App__event",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <p>
                            February 25, 2018
</p>,
                          "className": "App__event",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="App__event"
>
                          <p>
                                                    February 25, 2018
                          </p>
</div>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <h1>
                        Countdown for
</h1>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "h1",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <h1>
                          Countdown for
</h1>,
                        <div
                          className="App__event"
>
                          <p>
                                                    February 25, 2018
                          </p>
</div>,
                      ],
                      "className": "App__header",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <h1>
                          Countdown for
</h1>,
                        <div
                          className="App__event"
>
                          <p>
                                                    February 25, 2018
                          </p>
</div>,
                      ],
                      "className": "App__header",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": [Circular],
                    "stateNode": <header
                      class="App__header"
>
                      <h1>
                                            Countdown for
                      </h1>
                      <div
                                            class="App__event"
                      >
                                            <p>
                                                                  February 25, 2018
                                            </p>
                      </div>
</header>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "header",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": Array [
                      <header
                        className="App__header"
>
                        <h1>
                                                Countdown for
                        </h1>
                        <div
                                                className="App__event"
                        >
                                                <p>
                                                                        February 25, 2018
                                                </p>
                        </div>
</header>,
                      <Clock
                        deadline="February 25, 2018"
/>,
                      <section
                        className="Add-Event"
>
                        <form
                                                className="Add-Event__form"
                        >
                                                <input
                                                                        onChange={[Function]}
                                                                        type="text"
                                                />
                                                <button
                                                                        onClick={[Function]}
                                                >
                                                                        Send
                                                </button>
                        </form>
</section>,
                    ],
                    "className": "App",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <header
                        className="App__header"
>
                        <h1>
                                                Countdown for
                        </h1>
                        <div
                                                className="App__event"
                        >
                                                <p>
                                                                        February 25, 2018
                                                </p>
                        </div>
</header>,
                      <Clock
                        deadline="February 25, 2018"
/>,
                      <section
                        className="Add-Event"
>
                        <form
                                                className="Add-Event__form"
                        >
                                                <input
                                                                        onChange={[Function]}
                                                                        type="text"
                                                />
                                                <button
                                                                        onClick={[Function]}
                                                >
                                                                        Send
                                                </button>
                        </form>
</section>,
                    ],
                    "className": "App",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="App"
>
                    <header
                                        class="App__header"
                    >
                                        <h1>
                                                            Countdown for
                                        </h1>
                                        <div
                                                            class="App__event"
                                        >
                                                            <p>
                                                                                February 25, 2018
                                                            </p>
                                        </div>
                    </header>
                    <section
                                        class="Clock"
                    >
                                        <div
                                                            class="Clock__days"
                                        >
                                                            0 day
                                        </div>
                                        <div
                                                            class="Clock__hours"
                                        >
                                                            0 hour
                                        </div>
                                        <div
                                                            class="Clock__minutes"
                                        >
                                                            0 minute
                                        </div>
                                        <div
                                                            class="Clock__seconds"
                                        >
                                                            0 second
                                        </div>
                    </section>
                    <section
                                        class="Add-Event"
                    >
                                        <form
                                                            class="Add-Event__form"
                                        >
                                                            <input
                                                                                type="text"
                                                            />
                                                            <button>
                                                                                Send
                                                            </button>
                                        </form>
                    </section>
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 28,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 18,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 29,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 19,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 30,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "onChange": [Function],
                        "type": "text",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "onChange": [Function],
                        "type": "text",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": FiberNode {
                        "_debugID": 20,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                          "lineNumber": 31,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Send",
                          "onClick": [Function],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "Send",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <button>
                          Send
</button>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "button",
                        "updateQueue": null,
                      },
                      "stateNode": <input
                        type="text"
/>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "input",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <input
                          onChange={[Function]}
                          type="text"
/>,
                        <button
                          onClick={[Function]}
>
                          Send
</button>,
                      ],
                      "className": "Add-Event__form",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <input
                          onChange={[Function]}
                          type="text"
/>,
                        <button
                          onClick={[Function]}
>
                          Send
</button>,
                      ],
                      "className": "Add-Event__form",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <form
                      class="Add-Event__form"
>
                      <input
                                            type="text"
                      />
                      <button>
                                            Send
                      </button>
</form>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "form",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 2,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <form
                      className="Add-Event__form"
>
                      <input
                                            onChange={[Function]}
                                            type="text"
                      />
                      <button
                                            onClick={[Function]}
                      >
                                            Send
                      </button>
</form>,
                    "className": "Add-Event",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <form
                      className="Add-Event__form"
>
                      <input
                                            onChange={[Function]}
                                            type="text"
                      />
                      <button
                                            onClick={[Function]}
                      >
                                            Send
                      </button>
</form>,
                    "className": "Add-Event",
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 6,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 20,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 7,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 21,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 10,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                          "lineNumber": 22,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Countdown for",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "Countdown for",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": FiberNode {
                          "_debugID": 11,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                            "lineNumber": 23,
                          },
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 12,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                              "lineNumber": 24,
                            },
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "February 25, 2018",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "February 25, 2018",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": <p>
                              February 25, 2018
</p>,
                            "tag": 5,
                            "treeBaseTime": 0,
                            "type": "p",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <p>
                              February 25, 2018
</p>,
                            "className": "App__event",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <p>
                              February 25, 2018
</p>,
                            "className": "App__event",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": <div
                            class="App__event"
>
                            <p>
                                                        February 25, 2018
                            </p>
</div>,
                          "tag": 5,
                          "treeBaseTime": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "stateNode": <h1>
                          Countdown for
</h1>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "h1",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <h1>
                            Countdown for
</h1>,
                          <div
                            className="App__event"
>
                            <p>
                                                        February 25, 2018
                            </p>
</div>,
                        ],
                        "className": "App__header",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <h1>
                            Countdown for
</h1>,
                          <div
                            className="App__event"
>
                            <p>
                                                        February 25, 2018
                            </p>
</div>,
                        ],
                        "className": "App__header",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": [Circular],
                      "stateNode": <header
                        class="App__header"
>
                        <h1>
                                                Countdown for
                        </h1>
                        <div
                                                class="App__event"
                        >
                                                <p>
                                                                        February 25, 2018
                                                </p>
                        </div>
</header>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "header",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": Array [
                        <header
                          className="App__header"
>
                          <h1>
                                                    Countdown for
                          </h1>
                          <div
                                                    className="App__event"
                          >
                                                    <p>
                                                                              February 25, 2018
                                                    </p>
                          </div>
</header>,
                        <Clock
                          deadline="February 25, 2018"
/>,
                        <section
                          className="Add-Event"
>
                          <form
                                                    className="Add-Event__form"
                          >
                                                    <input
                                                                              onChange={[Function]}
                                                                              type="text"
                                                    />
                                                    <button
                                                                              onClick={[Function]}
                                                    >
                                                                              Send
                                                    </button>
                          </form>
</section>,
                      ],
                      "className": "App",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <header
                          className="App__header"
>
                          <h1>
                                                    Countdown for
                          </h1>
                          <div
                                                    className="App__event"
                          >
                                                    <p>
                                                                              February 25, 2018
                                                    </p>
                          </div>
</header>,
                        <Clock
                          deadline="February 25, 2018"
/>,
                        <section
                          className="Add-Event"
>
                          <form
                                                    className="Add-Event__form"
                          >
                                                    <input
                                                                              onChange={[Function]}
                                                                              type="text"
                                                    />
                                                    <button
                                                                              onClick={[Function]}
                                                    >
                                                                              Send
                                                    </button>
                          </form>
</section>,
                      ],
                      "className": "App",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="App"
>
                      <header
                                            class="App__header"
                      >
                                            <h1>
                                                                  Countdown for
                                            </h1>
                                            <div
                                                                  class="App__event"
                                            >
                                                                  <p>
                                                                                        February 25, 2018
                                                                  </p>
                                            </div>
                      </header>
                      <section
                                            class="Clock"
                      >
                                            <div
                                                                  class="Clock__days"
                                            >
                                                                  0 day
                                            </div>
                                            <div
                                                                  class="Clock__hours"
                                            >
                                                                  0 hour
                                            </div>
                                            <div
                                                                  class="Clock__minutes"
                                            >
                                                                  0 minute
                                            </div>
                                            <div
                                                                  class="Clock__seconds"
                                            >
                                                                  0 second
                                            </div>
                      </section>
                      <section
                                            class="Add-Event"
                      >
                                            <form
                                                                  class="Add-Event__form"
                                            >
                                                                  <input
                                                                                        type="text"
                                                                  />
                                                                  <button>
                                                                                        Send
                                                                  </button>
                                            </form>
                      </section>
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <section
                    class="Add-Event"
>
                    <form
                                        class="Add-Event__form"
                    >
                                        <input
                                                            type="text"
                                        />
                                        <button>
                                                            Send
                                        </button>
                    </form>
</section>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "section",
                  "updateQueue": null,
                },
                "stateNode": Clock {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "intervalId": 2,
                  "props": Object {
                    "deadline": "February 25, 2018",
                  },
                  "refs": Object {},
                  "state": Object {
                    "days": 0,
                    "deadline": "",
                    "hours": 0,
                    "minutes": 0,
                    "seconds": 0,
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "treeBaseTime": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
/>,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                                    class="App"
                  >
                                    <header
                                                      class="App__header"
                                    >
                                                      <h1>
                                                                        Countdown for
                                                      </h1>
                                                      <div
                                                                        class="App__event"
                                                      >
                                                                        <p>
                                                                                          February 25, 2018
                                                                        </p>
                                                      </div>
                                    </header>
                                    <section
                                                      class="Clock"
                                    >
                                                      <div
                                                                        class="Clock__days"
                                                      >
                                                                        0 day
                                                      </div>
                                                      <div
                                                                        class="Clock__hours"
                                                      >
                                                                        0 hour
                                                      </div>
                                                      <div
                                                                        class="Clock__minutes"
                                                      >
                                                                        0 minute
                                                      </div>
                                                      <div
                                                                        class="Clock__seconds"
                                                      >
                                                                        0 second
                                                      </div>
                                    </section>
                                    <section
                                                      class="Add-Event"
                                    >
                                                      <form
                                                                        class="Add-Event__form"
                                                      >
                                                                        <input
                                                                                          type="text"
                                                                        />
                                                                        <button>
                                                                                          Send
                                                                        </button>
                                                      </form>
                                    </section>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={Object {}}
/>,
                },
                "expirationTime": 0,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {},
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {},
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseTime": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": 0,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
              "lineNumber": 20,
            },
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 7,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                "lineNumber": 21,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 10,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 22,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "Countdown for",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "Countdown for",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 11,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 23,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 12,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 24,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "February 25, 2018",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "February 25, 2018",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <p>
                      February 25, 2018
</p>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "p",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <p>
                      February 25, 2018
</p>,
                    "className": "App__event",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <p>
                      February 25, 2018
</p>,
                    "className": "App__event",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="App__event"
>
                    <p>
                                        February 25, 2018
                    </p>
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": <h1>
                  Countdown for
</h1>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "h1",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <h1>
                    Countdown for
</h1>,
                  <div
                    className="App__event"
>
                    <p>
                                        February 25, 2018
                    </p>
</div>,
                ],
                "className": "App__header",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <h1>
                    Countdown for
</h1>,
                  <div
                    className="App__event"
>
                    <p>
                                        February 25, 2018
                    </p>
</div>,
                ],
                "className": "App__header",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": FiberNode {
                "_debugID": 8,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 27,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 13,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                    "lineNumber": 29,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 14,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                      "lineNumber": 30,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "0 day",
                      "className": "Clock__days",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "0 day",
                      "className": "Clock__days",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 15,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                        "lineNumber": 31,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "0 hour",
                        "className": "Clock__hours",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "0 hour",
                        "className": "Clock__hours",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": FiberNode {
                        "_debugID": 16,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                          "lineNumber": 32,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 2,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "0 minute",
                          "className": "Clock__minutes",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "0 minute",
                          "className": "Clock__minutes",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": FiberNode {
                          "_debugID": 17,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                            "lineNumber": 33,
                          },
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 3,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "0 second",
                            "className": "Clock__seconds",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "0 second",
                            "className": "Clock__seconds",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": <div
                            class="Clock__seconds"
>
                            0 second
</div>,
                          "tag": 5,
                          "treeBaseTime": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "stateNode": <div
                          class="Clock__minutes"
>
                          0 minute
</div>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <div
                        class="Clock__hours"
>
                        0 hour
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <div
                      class="Clock__days"
>
                      0 day
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <div
                        className="Clock__days"
>
                        0 day
</div>,
                      <div
                        className="Clock__hours"
>
                        0 hour
</div>,
                      <div
                        className="Clock__minutes"
>
                        0 minute
</div>,
                      <div
                        className="Clock__seconds"
>
                        0 second
</div>,
                    ],
                    "className": "Clock",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <div
                        className="Clock__days"
>
                        0 day
</div>,
                      <div
                        className="Clock__hours"
>
                        0 hour
</div>,
                      <div
                        className="Clock__minutes"
>
                        0 minute
</div>,
                      <div
                        className="Clock__seconds"
>
                        0 second
</div>,
                    ],
                    "className": "Clock",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <section
                    class="Clock"
>
                    <div
                                        class="Clock__days"
                    >
                                        0 day
                    </div>
                    <div
                                        class="Clock__hours"
                    >
                                        0 hour
                    </div>
                    <div
                                        class="Clock__minutes"
                    >
                                        0 minute
                    </div>
                    <div
                                        class="Clock__seconds"
                    >
                                        0 second
                    </div>
</section>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "section",
                  "updateQueue": null,
                },
                "effectTag": 5,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "deadline": "February 25, 2018",
                },
                "memoizedState": Object {
                  "days": 0,
                  "deadline": "",
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 0,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "deadline": "February 25, 2018",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 28,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 18,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 29,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 19,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 30,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "onChange": [Function],
                        "type": "text",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "onChange": [Function],
                        "type": "text",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": FiberNode {
                        "_debugID": 20,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                          "lineNumber": 31,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Send",
                          "onClick": [Function],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "Send",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <button>
                          Send
</button>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "button",
                        "updateQueue": null,
                      },
                      "stateNode": <input
                        type="text"
/>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "input",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <input
                          onChange={[Function]}
                          type="text"
/>,
                        <button
                          onClick={[Function]}
>
                          Send
</button>,
                      ],
                      "className": "Add-Event__form",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <input
                          onChange={[Function]}
                          type="text"
/>,
                        <button
                          onClick={[Function]}
>
                          Send
</button>,
                      ],
                      "className": "Add-Event__form",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <form
                      class="Add-Event__form"
>
                      <input
                                            type="text"
                      />
                      <button>
                                            Send
                      </button>
</form>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "form",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 2,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <form
                      className="Add-Event__form"
>
                      <input
                                            onChange={[Function]}
                                            type="text"
                      />
                      <button
                                            onClick={[Function]}
                      >
                                            Send
                      </button>
</form>,
                    "className": "Add-Event",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <form
                      className="Add-Event__form"
>
                      <input
                                            onChange={[Function]}
                                            type="text"
                      />
                      <button
                                            onClick={[Function]}
                      >
                                            Send
                      </button>
</form>,
                    "className": "Add-Event",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <section
                    class="Add-Event"
>
                    <form
                                        class="Add-Event__form"
                    >
                                        <input
                                                            type="text"
                                        />
                                        <button>
                                                            Send
                                        </button>
                    </form>
</section>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "section",
                  "updateQueue": null,
                },
                "stateNode": Clock {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "intervalId": 2,
                  "props": Object {
                    "deadline": "February 25, 2018",
                  },
                  "refs": Object {},
                  "state": Object {
                    "days": 0,
                    "deadline": "",
                    "hours": 0,
                    "minutes": 0,
                    "seconds": 0,
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "treeBaseTime": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "stateNode": <header
                class="App__header"
>
                <h1>
                                Countdown for
                </h1>
                <div
                                class="App__event"
                >
                                <p>
                                                February 25, 2018
                                </p>
                </div>
</header>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "header",
              "updateQueue": null,
            },
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": FiberNode {
              "_debugID": 8,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                "lineNumber": 27,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 13,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                  "lineNumber": 29,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 14,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                    "lineNumber": 30,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "0 day",
                    "className": "Clock__days",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "0 day",
                    "className": "Clock__days",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 15,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                      "lineNumber": 31,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "0 hour",
                      "className": "Clock__hours",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "0 hour",
                      "className": "Clock__hours",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 16,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                        "lineNumber": 32,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 2,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "0 minute",
                        "className": "Clock__minutes",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "0 minute",
                        "className": "Clock__minutes",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": FiberNode {
                        "_debugID": 17,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                          "lineNumber": 33,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 3,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "0 second",
                          "className": "Clock__seconds",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "0 second",
                          "className": "Clock__seconds",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="Clock__seconds"
>
                          0 second
</div>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <div
                        class="Clock__minutes"
>
                        0 minute
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <div
                      class="Clock__hours"
>
                      0 hour
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <div
                    class="Clock__days"
>
                    0 day
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <div
                      className="Clock__days"
>
                      0 day
</div>,
                    <div
                      className="Clock__hours"
>
                      0 hour
</div>,
                    <div
                      className="Clock__minutes"
>
                      0 minute
</div>,
                    <div
                      className="Clock__seconds"
>
                      0 second
</div>,
                  ],
                  "className": "Clock",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <div
                      className="Clock__days"
>
                      0 day
</div>,
                    <div
                      className="Clock__hours"
>
                      0 hour
</div>,
                    <div
                      className="Clock__minutes"
>
                      0 minute
</div>,
                    <div
                      className="Clock__seconds"
>
                      0 second
</div>,
                  ],
                  "className": "Clock",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <section
                  class="Clock"
>
                  <div
                                    class="Clock__days"
                  >
                                    0 day
                  </div>
                  <div
                                    class="Clock__hours"
                  >
                                    0 hour
                  </div>
                  <div
                                    class="Clock__minutes"
                  >
                                    0 minute
                  </div>
                  <div
                                    class="Clock__seconds"
                  >
                                    0 second
                  </div>
</section>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "section",
                "updateQueue": null,
              },
              "effectTag": 5,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 1,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "deadline": "February 25, 2018",
              },
              "memoizedState": Object {
                "days": 0,
                "deadline": "",
                "hours": 0,
                "minutes": 0,
                "seconds": 0,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "deadline": "February 25, 2018",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": FiberNode {
                "_debugID": 9,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 28,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 18,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 29,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 19,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 30,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "onChange": [Function],
                      "type": "text",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "onChange": [Function],
                      "type": "text",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 20,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 31,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Send",
                        "onClick": [Function],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "Send",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <button>
                        Send
</button>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "button",
                      "updateQueue": null,
                    },
                    "stateNode": <input
                      type="text"
/>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <input
                        onChange={[Function]}
                        type="text"
/>,
                      <button
                        onClick={[Function]}
>
                        Send
</button>,
                    ],
                    "className": "Add-Event__form",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <input
                        onChange={[Function]}
                        type="text"
/>,
                      <button
                        onClick={[Function]}
>
                        Send
</button>,
                    ],
                    "className": "Add-Event__form",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <form
                    class="Add-Event__form"
>
                    <input
                                        type="text"
                    />
                    <button>
                                        Send
                    </button>
</form>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "form",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 2,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <form
                    className="Add-Event__form"
>
                    <input
                                        onChange={[Function]}
                                        type="text"
                    />
                    <button
                                        onClick={[Function]}
                    >
                                        Send
                    </button>
</form>,
                  "className": "Add-Event",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <form
                    className="Add-Event__form"
>
                    <input
                                        onChange={[Function]}
                                        type="text"
                    />
                    <button
                                        onClick={[Function]}
                    >
                                        Send
                    </button>
</form>,
                  "className": "Add-Event",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <section
                  class="Add-Event"
>
                  <form
                                    class="Add-Event__form"
                  >
                                    <input
                                                      type="text"
                                    />
                                    <button>
                                                      Send
                                    </button>
                  </form>
</section>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "section",
                "updateQueue": null,
              },
              "stateNode": Clock {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "intervalId": 2,
                "props": Object {
                  "deadline": "February 25, 2018",
                },
                "refs": Object {},
                "state": Object {
                  "days": 0,
                  "deadline": "",
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 0,
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseTime": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "index": 0,
            "key": null,
            "lastEffect": FiberNode {
              "_debugID": 8,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                "lineNumber": 27,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 13,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                  "lineNumber": 29,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 14,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                    "lineNumber": 30,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "0 day",
                    "className": "Clock__days",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "0 day",
                    "className": "Clock__days",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 15,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                      "lineNumber": 31,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "0 hour",
                      "className": "Clock__hours",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "0 hour",
                      "className": "Clock__hours",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 16,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                        "lineNumber": 32,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 2,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "0 minute",
                        "className": "Clock__minutes",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "0 minute",
                        "className": "Clock__minutes",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": FiberNode {
                        "_debugID": 17,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                          "lineNumber": 33,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 3,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "0 second",
                          "className": "Clock__seconds",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "0 second",
                          "className": "Clock__seconds",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="Clock__seconds"
>
                          0 second
</div>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <div
                        class="Clock__minutes"
>
                        0 minute
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <div
                      class="Clock__hours"
>
                      0 hour
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <div
                    class="Clock__days"
>
                    0 day
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <div
                      className="Clock__days"
>
                      0 day
</div>,
                    <div
                      className="Clock__hours"
>
                      0 hour
</div>,
                    <div
                      className="Clock__minutes"
>
                      0 minute
</div>,
                    <div
                      className="Clock__seconds"
>
                      0 second
</div>,
                  ],
                  "className": "Clock",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <div
                      className="Clock__days"
>
                      0 day
</div>,
                    <div
                      className="Clock__hours"
>
                      0 hour
</div>,
                    <div
                      className="Clock__minutes"
>
                      0 minute
</div>,
                    <div
                      className="Clock__seconds"
>
                      0 second
</div>,
                  ],
                  "className": "Clock",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <section
                  class="Clock"
>
                  <div
                                    class="Clock__days"
                  >
                                    0 day
                  </div>
                  <div
                                    class="Clock__hours"
                  >
                                    0 hour
                  </div>
                  <div
                                    class="Clock__minutes"
                  >
                                    0 minute
                  </div>
                  <div
                                    class="Clock__seconds"
                  >
                                    0 second
                  </div>
</section>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "section",
                "updateQueue": null,
              },
              "effectTag": 5,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 1,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "deadline": "February 25, 2018",
              },
              "memoizedState": Object {
                "days": 0,
                "deadline": "",
                "hours": 0,
                "minutes": 0,
                "seconds": 0,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "deadline": "February 25, 2018",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": FiberNode {
                "_debugID": 9,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 28,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 18,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 29,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 19,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 30,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "onChange": [Function],
                      "type": "text",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "onChange": [Function],
                      "type": "text",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 20,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 31,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Send",
                        "onClick": [Function],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "Send",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <button>
                        Send
</button>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "button",
                      "updateQueue": null,
                    },
                    "stateNode": <input
                      type="text"
/>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <input
                        onChange={[Function]}
                        type="text"
/>,
                      <button
                        onClick={[Function]}
>
                        Send
</button>,
                    ],
                    "className": "Add-Event__form",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <input
                        onChange={[Function]}
                        type="text"
/>,
                      <button
                        onClick={[Function]}
>
                        Send
</button>,
                    ],
                    "className": "Add-Event__form",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <form
                    class="Add-Event__form"
>
                    <input
                                        type="text"
                    />
                    <button>
                                        Send
                    </button>
</form>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "form",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 2,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <form
                    className="Add-Event__form"
>
                    <input
                                        onChange={[Function]}
                                        type="text"
                    />
                    <button
                                        onClick={[Function]}
                    >
                                        Send
                    </button>
</form>,
                  "className": "Add-Event",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <form
                    className="Add-Event__form"
>
                    <input
                                        onChange={[Function]}
                                        type="text"
                    />
                    <button
                                        onClick={[Function]}
                    >
                                        Send
                    </button>
</form>,
                  "className": "Add-Event",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <section
                  class="Add-Event"
>
                  <form
                                    class="Add-Event__form"
                  >
                                    <input
                                                      type="text"
                                    />
                                    <button>
                                                      Send
                                    </button>
                  </form>
</section>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "section",
                "updateQueue": null,
              },
              "stateNode": Clock {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "intervalId": 2,
                "props": Object {
                  "deadline": "February 25, 2018",
                },
                "refs": Object {},
                "state": Object {
                  "days": 0,
                  "deadline": "",
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 0,
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseTime": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "memoizedProps": Object {
              "children": Array [
                <header
                  className="App__header"
>
                  <h1>
                                    Countdown for
                  </h1>
                  <div
                                    className="App__event"
                  >
                                    <p>
                                                      February 25, 2018
                                    </p>
                  </div>
</header>,
                <Clock
                  deadline="February 25, 2018"
/>,
                <section
                  className="Add-Event"
>
                  <form
                                    className="Add-Event__form"
                  >
                                    <input
                                                      onChange={[Function]}
                                                      type="text"
                                    />
                                    <button
                                                      onClick={[Function]}
                                    >
                                                      Send
                                    </button>
                  </form>
</section>,
              ],
              "className": "App",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <header
                  className="App__header"
>
                  <h1>
                                    Countdown for
                  </h1>
                  <div
                                    className="App__event"
                  >
                                    <p>
                                                      February 25, 2018
                                    </p>
                  </div>
</header>,
                <Clock
                  deadline="February 25, 2018"
/>,
                <section
                  className="Add-Event"
>
                  <form
                                    className="Add-Event__form"
                  >
                                    <input
                                                      onChange={[Function]}
                                                      type="text"
                                    />
                                    <button
                                                      onClick={[Function]}
                                    >
                                                      Send
                                    </button>
                  </form>
</section>,
              ],
              "className": "App",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": <div
              class="App"
>
              <header
                            class="App__header"
              >
                            <h1>
                                          Countdown for
                            </h1>
                            <div
                                          class="App__event"
                            >
                                          <p>
                                                        February 25, 2018
                                          </p>
                            </div>
              </header>
              <section
                            class="Clock"
              >
                            <div
                                          class="Clock__days"
                            >
                                          0 day
                            </div>
                            <div
                                          class="Clock__hours"
                            >
                                          0 hour
                            </div>
                            <div
                                          class="Clock__minutes"
                            >
                                          0 minute
                            </div>
                            <div
                                          class="Clock__seconds"
                            >
                                          0 second
                            </div>
              </section>
              <section
                            class="Add-Event"
              >
                            <form
                                          class="Add-Event__form"
                            >
                                          <input
                                                        type="text"
                                          />
                                          <button>
                                                        Send
                                          </button>
                            </form>
              </section>
</div>,
            "tag": 5,
            "treeBaseTime": 0,
            "type": "div",
            "updateQueue": null,
          },
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": FiberNode {
            "_debugID": 8,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
              "lineNumber": 27,
            },
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 13,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                "lineNumber": 29,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 14,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                  "lineNumber": 30,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "0 day",
                  "className": "Clock__days",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "0 day",
                  "className": "Clock__days",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 15,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                    "lineNumber": 31,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "0 hour",
                    "className": "Clock__hours",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "0 hour",
                    "className": "Clock__hours",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 16,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                      "lineNumber": 32,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 2,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "0 minute",
                      "className": "Clock__minutes",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "0 minute",
                      "className": "Clock__minutes",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 17,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                        "lineNumber": 33,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 3,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "0 second",
                        "className": "Clock__seconds",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "0 second",
                        "className": "Clock__seconds",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="Clock__seconds"
>
                        0 second
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <div
                      class="Clock__minutes"
>
                      0 minute
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <div
                    class="Clock__hours"
>
                    0 hour
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": <div
                  class="Clock__days"
>
                  0 day
</div>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "div",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <div
                    className="Clock__days"
>
                    0 day
</div>,
                  <div
                    className="Clock__hours"
>
                    0 hour
</div>,
                  <div
                    className="Clock__minutes"
>
                    0 minute
</div>,
                  <div
                    className="Clock__seconds"
>
                    0 second
</div>,
                ],
                "className": "Clock",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <div
                    className="Clock__days"
>
                    0 day
</div>,
                  <div
                    className="Clock__hours"
>
                    0 hour
</div>,
                  <div
                    className="Clock__minutes"
>
                    0 minute
</div>,
                  <div
                    className="Clock__seconds"
>
                    0 second
</div>,
                ],
                "className": "Clock",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": <section
                class="Clock"
>
                <div
                                class="Clock__days"
                >
                                0 day
                </div>
                <div
                                class="Clock__hours"
                >
                                0 hour
                </div>
                <div
                                class="Clock__minutes"
                >
                                0 minute
                </div>
                <div
                                class="Clock__seconds"
                >
                                0 second
                </div>
</section>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "section",
              "updateQueue": null,
            },
            "effectTag": 5,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 1,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "deadline": "February 25, 2018",
            },
            "memoizedState": Object {
              "days": 0,
              "deadline": "",
              "hours": 0,
              "minutes": 0,
              "seconds": 0,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "deadline": "February 25, 2018",
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                "lineNumber": 20,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 7,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 21,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 10,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 22,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Countdown for",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Countdown for",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 11,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 23,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 12,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 24,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "February 25, 2018",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "February 25, 2018",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <p>
                        February 25, 2018
</p>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "p",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <p>
                        February 25, 2018
</p>,
                      "className": "App__event",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <p>
                        February 25, 2018
</p>,
                      "className": "App__event",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="App__event"
>
                      <p>
                                            February 25, 2018
                      </p>
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <h1>
                    Countdown for
</h1>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "h1",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <h1>
                      Countdown for
</h1>,
                    <div
                      className="App__event"
>
                      <p>
                                            February 25, 2018
                      </p>
</div>,
                  ],
                  "className": "App__header",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <h1>
                      Countdown for
</h1>,
                    <div
                      className="App__event"
>
                      <p>
                                            February 25, 2018
                      </p>
</div>,
                  ],
                  "className": "App__header",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": [Circular],
                "stateNode": <header
                  class="App__header"
>
                  <h1>
                                    Countdown for
                  </h1>
                  <div
                                    class="App__event"
                  >
                                    <p>
                                                      February 25, 2018
                                    </p>
                  </div>
</header>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "header",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": Array [
                  <header
                    className="App__header"
>
                    <h1>
                                        Countdown for
                    </h1>
                    <div
                                        className="App__event"
                    >
                                        <p>
                                                            February 25, 2018
                                        </p>
                    </div>
</header>,
                  <Clock
                    deadline="February 25, 2018"
/>,
                  <section
                    className="Add-Event"
>
                    <form
                                        className="Add-Event__form"
                    >
                                        <input
                                                            onChange={[Function]}
                                                            type="text"
                                        />
                                        <button
                                                            onClick={[Function]}
                                        >
                                                            Send
                                        </button>
                    </form>
</section>,
                ],
                "className": "App",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <header
                    className="App__header"
>
                    <h1>
                                        Countdown for
                    </h1>
                    <div
                                        className="App__event"
                    >
                                        <p>
                                                            February 25, 2018
                                        </p>
                    </div>
</header>,
                  <Clock
                    deadline="February 25, 2018"
/>,
                  <section
                    className="Add-Event"
>
                    <form
                                        className="Add-Event__form"
                    >
                                        <input
                                                            onChange={[Function]}
                                                            type="text"
                                        />
                                        <button
                                                            onClick={[Function]}
                                        >
                                                            Send
                                        </button>
                    </form>
</section>,
                ],
                "className": "App",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": <div
                class="App"
>
                <header
                                class="App__header"
                >
                                <h1>
                                                Countdown for
                                </h1>
                                <div
                                                class="App__event"
                                >
                                                <p>
                                                                February 25, 2018
                                                </p>
                                </div>
                </header>
                <section
                                class="Clock"
                >
                                <div
                                                class="Clock__days"
                                >
                                                0 day
                                </div>
                                <div
                                                class="Clock__hours"
                                >
                                                0 hour
                                </div>
                                <div
                                                class="Clock__minutes"
                                >
                                                0 minute
                                </div>
                                <div
                                                class="Clock__seconds"
                                >
                                                0 second
                                </div>
                </section>
                <section
                                class="Add-Event"
                >
                                <form
                                                class="Add-Event__form"
                                >
                                                <input
                                                                type="text"
                                                />
                                                <button>
                                                                Send
                                                </button>
                                </form>
                </section>
</div>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "div",
              "updateQueue": null,
            },
            "selfBaseTime": 0,
            "sibling": FiberNode {
              "_debugID": 9,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                "lineNumber": 28,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 18,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 29,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 19,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 30,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "onChange": [Function],
                    "type": "text",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "onChange": [Function],
                    "type": "text",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 20,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 31,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Send",
                      "onClick": [Function],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Send",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <button>
                      Send
</button>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "button",
                    "updateQueue": null,
                  },
                  "stateNode": <input
                    type="text"
/>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "input",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <input
                      onChange={[Function]}
                      type="text"
/>,
                    <button
                      onClick={[Function]}
>
                      Send
</button>,
                  ],
                  "className": "Add-Event__form",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <input
                      onChange={[Function]}
                      type="text"
/>,
                    <button
                      onClick={[Function]}
>
                      Send
</button>,
                  ],
                  "className": "Add-Event__form",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <form
                  class="Add-Event__form"
>
                  <input
                                    type="text"
                  />
                  <button>
                                    Send
                  </button>
</form>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "form",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 2,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <form
                  className="Add-Event__form"
>
                  <input
                                    onChange={[Function]}
                                    type="text"
                  />
                  <button
                                    onClick={[Function]}
                  >
                                    Send
                  </button>
</form>,
                "className": "Add-Event",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <form
                  className="Add-Event__form"
>
                  <input
                                    onChange={[Function]}
                                    type="text"
                  />
                  <button
                                    onClick={[Function]}
                  >
                                    Send
                  </button>
</form>,
                "className": "Add-Event",
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 6,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 20,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 21,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 22,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Countdown for",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Countdown for",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 11,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 23,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 12,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                          "lineNumber": 24,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "February 25, 2018",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "February 25, 2018",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <p>
                          February 25, 2018
</p>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "p",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <p>
                          February 25, 2018
</p>,
                        "className": "App__event",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <p>
                          February 25, 2018
</p>,
                        "className": "App__event",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="App__event"
>
                        <p>
                                                February 25, 2018
                        </p>
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <h1>
                      Countdown for
</h1>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "h1",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <h1>
                        Countdown for
</h1>,
                      <div
                        className="App__event"
>
                        <p>
                                                February 25, 2018
                        </p>
</div>,
                    ],
                    "className": "App__header",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <h1>
                        Countdown for
</h1>,
                      <div
                        className="App__event"
>
                        <p>
                                                February 25, 2018
                        </p>
</div>,
                    ],
                    "className": "App__header",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": [Circular],
                  "stateNode": <header
                    class="App__header"
>
                    <h1>
                                        Countdown for
                    </h1>
                    <div
                                        class="App__event"
                    >
                                        <p>
                                                            February 25, 2018
                                        </p>
                    </div>
</header>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "header",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": Array [
                    <header
                      className="App__header"
>
                      <h1>
                                            Countdown for
                      </h1>
                      <div
                                            className="App__event"
                      >
                                            <p>
                                                                  February 25, 2018
                                            </p>
                      </div>
</header>,
                    <Clock
                      deadline="February 25, 2018"
/>,
                    <section
                      className="Add-Event"
>
                      <form
                                            className="Add-Event__form"
                      >
                                            <input
                                                                  onChange={[Function]}
                                                                  type="text"
                                            />
                                            <button
                                                                  onClick={[Function]}
                                            >
                                                                  Send
                                            </button>
                      </form>
</section>,
                  ],
                  "className": "App",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <header
                      className="App__header"
>
                      <h1>
                                            Countdown for
                      </h1>
                      <div
                                            className="App__event"
                      >
                                            <p>
                                                                  February 25, 2018
                                            </p>
                      </div>
</header>,
                    <Clock
                      deadline="February 25, 2018"
/>,
                    <section
                      className="Add-Event"
>
                      <form
                                            className="Add-Event__form"
                      >
                                            <input
                                                                  onChange={[Function]}
                                                                  type="text"
                                            />
                                            <button
                                                                  onClick={[Function]}
                                            >
                                                                  Send
                                            </button>
                      </form>
</section>,
                  ],
                  "className": "App",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <div
                  class="App"
>
                  <header
                                    class="App__header"
                  >
                                    <h1>
                                                      Countdown for
                                    </h1>
                                    <div
                                                      class="App__event"
                                    >
                                                      <p>
                                                                        February 25, 2018
                                                      </p>
                                    </div>
                  </header>
                  <section
                                    class="Clock"
                  >
                                    <div
                                                      class="Clock__days"
                                    >
                                                      0 day
                                    </div>
                                    <div
                                                      class="Clock__hours"
                                    >
                                                      0 hour
                                    </div>
                                    <div
                                                      class="Clock__minutes"
                                    >
                                                      0 minute
                                    </div>
                                    <div
                                                      class="Clock__seconds"
                                    >
                                                      0 second
                                    </div>
                  </section>
                  <section
                                    class="Add-Event"
                  >
                                    <form
                                                      class="Add-Event__form"
                                    >
                                                      <input
                                                                        type="text"
                                                      />
                                                      <button>
                                                                        Send
                                                      </button>
                                    </form>
                  </section>
</div>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "div",
                "updateQueue": null,
              },
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": <section
                class="Add-Event"
>
                <form
                                class="Add-Event__form"
                >
                                <input
                                                type="text"
                                />
                                <button>
                                                Send
                                </button>
                </form>
</section>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "section",
              "updateQueue": null,
            },
            "stateNode": Clock {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "intervalId": 2,
              "props": Object {
                "deadline": "February 25, 2018",
              },
              "refs": Object {},
              "state": Object {
                "days": 0,
                "deadline": "",
                "hours": 0,
                "minutes": 0,
                "seconds": 0,
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseTime": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "index": 0,
          "key": null,
          "lastEffect": FiberNode {
            "_debugID": 8,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
              "lineNumber": 27,
            },
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 13,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                "lineNumber": 29,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 14,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                  "lineNumber": 30,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "0 day",
                  "className": "Clock__days",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "0 day",
                  "className": "Clock__days",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 15,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                    "lineNumber": 31,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "0 hour",
                    "className": "Clock__hours",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "0 hour",
                    "className": "Clock__hours",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 16,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                      "lineNumber": 32,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 2,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "0 minute",
                      "className": "Clock__minutes",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "0 minute",
                      "className": "Clock__minutes",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 17,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                        "lineNumber": 33,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 3,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "0 second",
                        "className": "Clock__seconds",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "0 second",
                        "className": "Clock__seconds",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="Clock__seconds"
>
                        0 second
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <div
                      class="Clock__minutes"
>
                      0 minute
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <div
                    class="Clock__hours"
>
                    0 hour
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": <div
                  class="Clock__days"
>
                  0 day
</div>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "div",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <div
                    className="Clock__days"
>
                    0 day
</div>,
                  <div
                    className="Clock__hours"
>
                    0 hour
</div>,
                  <div
                    className="Clock__minutes"
>
                    0 minute
</div>,
                  <div
                    className="Clock__seconds"
>
                    0 second
</div>,
                ],
                "className": "Clock",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <div
                    className="Clock__days"
>
                    0 day
</div>,
                  <div
                    className="Clock__hours"
>
                    0 hour
</div>,
                  <div
                    className="Clock__minutes"
>
                    0 minute
</div>,
                  <div
                    className="Clock__seconds"
>
                    0 second
</div>,
                ],
                "className": "Clock",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": <section
                class="Clock"
>
                <div
                                class="Clock__days"
                >
                                0 day
                </div>
                <div
                                class="Clock__hours"
                >
                                0 hour
                </div>
                <div
                                class="Clock__minutes"
                >
                                0 minute
                </div>
                <div
                                class="Clock__seconds"
                >
                                0 second
                </div>
</section>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "section",
              "updateQueue": null,
            },
            "effectTag": 5,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 1,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "deadline": "February 25, 2018",
            },
            "memoizedState": Object {
              "days": 0,
              "deadline": "",
              "hours": 0,
              "minutes": 0,
              "seconds": 0,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "deadline": "February 25, 2018",
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                "lineNumber": 20,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 7,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 21,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 10,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 22,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Countdown for",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Countdown for",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 11,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 23,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 12,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 24,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "February 25, 2018",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "February 25, 2018",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <p>
                        February 25, 2018
</p>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "p",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <p>
                        February 25, 2018
</p>,
                      "className": "App__event",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <p>
                        February 25, 2018
</p>,
                      "className": "App__event",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="App__event"
>
                      <p>
                                            February 25, 2018
                      </p>
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <h1>
                    Countdown for
</h1>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "h1",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <h1>
                      Countdown for
</h1>,
                    <div
                      className="App__event"
>
                      <p>
                                            February 25, 2018
                      </p>
</div>,
                  ],
                  "className": "App__header",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <h1>
                      Countdown for
</h1>,
                    <div
                      className="App__event"
>
                      <p>
                                            February 25, 2018
                      </p>
</div>,
                  ],
                  "className": "App__header",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": [Circular],
                "stateNode": <header
                  class="App__header"
>
                  <h1>
                                    Countdown for
                  </h1>
                  <div
                                    class="App__event"
                  >
                                    <p>
                                                      February 25, 2018
                                    </p>
                  </div>
</header>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "header",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": Array [
                  <header
                    className="App__header"
>
                    <h1>
                                        Countdown for
                    </h1>
                    <div
                                        className="App__event"
                    >
                                        <p>
                                                            February 25, 2018
                                        </p>
                    </div>
</header>,
                  <Clock
                    deadline="February 25, 2018"
/>,
                  <section
                    className="Add-Event"
>
                    <form
                                        className="Add-Event__form"
                    >
                                        <input
                                                            onChange={[Function]}
                                                            type="text"
                                        />
                                        <button
                                                            onClick={[Function]}
                                        >
                                                            Send
                                        </button>
                    </form>
</section>,
                ],
                "className": "App",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <header
                    className="App__header"
>
                    <h1>
                                        Countdown for
                    </h1>
                    <div
                                        className="App__event"
                    >
                                        <p>
                                                            February 25, 2018
                                        </p>
                    </div>
</header>,
                  <Clock
                    deadline="February 25, 2018"
/>,
                  <section
                    className="Add-Event"
>
                    <form
                                        className="Add-Event__form"
                    >
                                        <input
                                                            onChange={[Function]}
                                                            type="text"
                                        />
                                        <button
                                                            onClick={[Function]}
                                        >
                                                            Send
                                        </button>
                    </form>
</section>,
                ],
                "className": "App",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": <div
                class="App"
>
                <header
                                class="App__header"
                >
                                <h1>
                                                Countdown for
                                </h1>
                                <div
                                                class="App__event"
                                >
                                                <p>
                                                                February 25, 2018
                                                </p>
                                </div>
                </header>
                <section
                                class="Clock"
                >
                                <div
                                                class="Clock__days"
                                >
                                                0 day
                                </div>
                                <div
                                                class="Clock__hours"
                                >
                                                0 hour
                                </div>
                                <div
                                                class="Clock__minutes"
                                >
                                                0 minute
                                </div>
                                <div
                                                class="Clock__seconds"
                                >
                                                0 second
                                </div>
                </section>
                <section
                                class="Add-Event"
                >
                                <form
                                                class="Add-Event__form"
                                >
                                                <input
                                                                type="text"
                                                />
                                                <button>
                                                                Send
                                                </button>
                                </form>
                </section>
</div>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "div",
              "updateQueue": null,
            },
            "selfBaseTime": 0,
            "sibling": FiberNode {
              "_debugID": 9,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                "lineNumber": 28,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 18,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 29,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 19,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 30,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "onChange": [Function],
                    "type": "text",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "onChange": [Function],
                    "type": "text",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 20,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 31,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Send",
                      "onClick": [Function],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Send",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <button>
                      Send
</button>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "button",
                    "updateQueue": null,
                  },
                  "stateNode": <input
                    type="text"
/>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "input",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <input
                      onChange={[Function]}
                      type="text"
/>,
                    <button
                      onClick={[Function]}
>
                      Send
</button>,
                  ],
                  "className": "Add-Event__form",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <input
                      onChange={[Function]}
                      type="text"
/>,
                    <button
                      onClick={[Function]}
>
                      Send
</button>,
                  ],
                  "className": "Add-Event__form",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <form
                  class="Add-Event__form"
>
                  <input
                                    type="text"
                  />
                  <button>
                                    Send
                  </button>
</form>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "form",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 2,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <form
                  className="Add-Event__form"
>
                  <input
                                    onChange={[Function]}
                                    type="text"
                  />
                  <button
                                    onClick={[Function]}
                  >
                                    Send
                  </button>
</form>,
                "className": "Add-Event",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <form
                  className="Add-Event__form"
>
                  <input
                                    onChange={[Function]}
                                    type="text"
                  />
                  <button
                                    onClick={[Function]}
                  >
                                    Send
                  </button>
</form>,
                "className": "Add-Event",
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 6,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 20,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 21,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 22,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Countdown for",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Countdown for",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 11,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 23,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 12,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                          "lineNumber": 24,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "February 25, 2018",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "February 25, 2018",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <p>
                          February 25, 2018
</p>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "p",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <p>
                          February 25, 2018
</p>,
                        "className": "App__event",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <p>
                          February 25, 2018
</p>,
                        "className": "App__event",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="App__event"
>
                        <p>
                                                February 25, 2018
                        </p>
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <h1>
                      Countdown for
</h1>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "h1",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <h1>
                        Countdown for
</h1>,
                      <div
                        className="App__event"
>
                        <p>
                                                February 25, 2018
                        </p>
</div>,
                    ],
                    "className": "App__header",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <h1>
                        Countdown for
</h1>,
                      <div
                        className="App__event"
>
                        <p>
                                                February 25, 2018
                        </p>
</div>,
                    ],
                    "className": "App__header",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": [Circular],
                  "stateNode": <header
                    class="App__header"
>
                    <h1>
                                        Countdown for
                    </h1>
                    <div
                                        class="App__event"
                    >
                                        <p>
                                                            February 25, 2018
                                        </p>
                    </div>
</header>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "header",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": Array [
                    <header
                      className="App__header"
>
                      <h1>
                                            Countdown for
                      </h1>
                      <div
                                            className="App__event"
                      >
                                            <p>
                                                                  February 25, 2018
                                            </p>
                      </div>
</header>,
                    <Clock
                      deadline="February 25, 2018"
/>,
                    <section
                      className="Add-Event"
>
                      <form
                                            className="Add-Event__form"
                      >
                                            <input
                                                                  onChange={[Function]}
                                                                  type="text"
                                            />
                                            <button
                                                                  onClick={[Function]}
                                            >
                                                                  Send
                                            </button>
                      </form>
</section>,
                  ],
                  "className": "App",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <header
                      className="App__header"
>
                      <h1>
                                            Countdown for
                      </h1>
                      <div
                                            className="App__event"
                      >
                                            <p>
                                                                  February 25, 2018
                                            </p>
                      </div>
</header>,
                    <Clock
                      deadline="February 25, 2018"
/>,
                    <section
                      className="Add-Event"
>
                      <form
                                            className="Add-Event__form"
                      >
                                            <input
                                                                  onChange={[Function]}
                                                                  type="text"
                                            />
                                            <button
                                                                  onClick={[Function]}
                                            >
                                                                  Send
                                            </button>
                      </form>
</section>,
                  ],
                  "className": "App",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <div
                  class="App"
>
                  <header
                                    class="App__header"
                  >
                                    <h1>
                                                      Countdown for
                                    </h1>
                                    <div
                                                      class="App__event"
                                    >
                                                      <p>
                                                                        February 25, 2018
                                                      </p>
                                    </div>
                  </header>
                  <section
                                    class="Clock"
                  >
                                    <div
                                                      class="Clock__days"
                                    >
                                                      0 day
                                    </div>
                                    <div
                                                      class="Clock__hours"
                                    >
                                                      0 hour
                                    </div>
                                    <div
                                                      class="Clock__minutes"
                                    >
                                                      0 minute
                                    </div>
                                    <div
                                                      class="Clock__seconds"
                                    >
                                                      0 second
                                    </div>
                  </section>
                  <section
                                    class="Add-Event"
                  >
                                    <form
                                                      class="Add-Event__form"
                                    >
                                                      <input
                                                                        type="text"
                                                      />
                                                      <button>
                                                                        Send
                                                      </button>
                                    </form>
                  </section>
</div>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "div",
                "updateQueue": null,
              },
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": <section
                class="Add-Event"
>
                <form
                                class="Add-Event__form"
                >
                                <input
                                                type="text"
                                />
                                <button>
                                                Send
                                </button>
                </form>
</section>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "section",
              "updateQueue": null,
            },
            "stateNode": Clock {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "intervalId": 2,
              "props": Object {
                "deadline": "February 25, 2018",
              },
              "refs": Object {},
              "state": Object {
                "days": 0,
                "deadline": "",
                "hours": 0,
                "minutes": 0,
                "seconds": 0,
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseTime": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "memoizedProps": Object {},
          "memoizedState": Object {
            "deadline": "February 25, 2018",
            "newDeadline": "",
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {},
          "ref": null,
          "return": FiberNode {
            "_debugID": 4,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": FiberNode {
              "_debugID": 8,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                "lineNumber": 27,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 13,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                  "lineNumber": 29,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 14,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                    "lineNumber": 30,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "0 day",
                    "className": "Clock__days",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "0 day",
                    "className": "Clock__days",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 15,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                      "lineNumber": 31,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "0 hour",
                      "className": "Clock__hours",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "0 hour",
                      "className": "Clock__hours",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 16,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                        "lineNumber": 32,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 2,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "0 minute",
                        "className": "Clock__minutes",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "0 minute",
                        "className": "Clock__minutes",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": FiberNode {
                        "_debugID": 17,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                          "lineNumber": 33,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 3,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "0 second",
                          "className": "Clock__seconds",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "0 second",
                          "className": "Clock__seconds",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="Clock__seconds"
>
                          0 second
</div>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <div
                        class="Clock__minutes"
>
                        0 minute
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <div
                      class="Clock__hours"
>
                      0 hour
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <div
                    class="Clock__days"
>
                    0 day
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <div
                      className="Clock__days"
>
                      0 day
</div>,
                    <div
                      className="Clock__hours"
>
                      0 hour
</div>,
                    <div
                      className="Clock__minutes"
>
                      0 minute
</div>,
                    <div
                      className="Clock__seconds"
>
                      0 second
</div>,
                  ],
                  "className": "Clock",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <div
                      className="Clock__days"
>
                      0 day
</div>,
                    <div
                      className="Clock__hours"
>
                      0 hour
</div>,
                    <div
                      className="Clock__minutes"
>
                      0 minute
</div>,
                    <div
                      className="Clock__seconds"
>
                      0 second
</div>,
                  ],
                  "className": "Clock",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <section
                  class="Clock"
>
                  <div
                                    class="Clock__days"
                  >
                                    0 day
                  </div>
                  <div
                                    class="Clock__hours"
                  >
                                    0 hour
                  </div>
                  <div
                                    class="Clock__minutes"
                  >
                                    0 minute
                  </div>
                  <div
                                    class="Clock__seconds"
                  >
                                    0 second
                  </div>
</section>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "section",
                "updateQueue": null,
              },
              "effectTag": 5,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 1,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "deadline": "February 25, 2018",
              },
              "memoizedState": Object {
                "days": 0,
                "deadline": "",
                "hours": 0,
                "minutes": 0,
                "seconds": 0,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "deadline": "February 25, 2018",
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 6,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 20,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 21,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 22,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Countdown for",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Countdown for",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 11,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 23,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 12,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                          "lineNumber": 24,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "February 25, 2018",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "February 25, 2018",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <p>
                          February 25, 2018
</p>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "p",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <p>
                          February 25, 2018
</p>,
                        "className": "App__event",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <p>
                          February 25, 2018
</p>,
                        "className": "App__event",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="App__event"
>
                        <p>
                                                February 25, 2018
                        </p>
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <h1>
                      Countdown for
</h1>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "h1",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <h1>
                        Countdown for
</h1>,
                      <div
                        className="App__event"
>
                        <p>
                                                February 25, 2018
                        </p>
</div>,
                    ],
                    "className": "App__header",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <h1>
                        Countdown for
</h1>,
                      <div
                        className="App__event"
>
                        <p>
                                                February 25, 2018
                        </p>
</div>,
                    ],
                    "className": "App__header",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": [Circular],
                  "stateNode": <header
                    class="App__header"
>
                    <h1>
                                        Countdown for
                    </h1>
                    <div
                                        class="App__event"
                    >
                                        <p>
                                                            February 25, 2018
                                        </p>
                    </div>
</header>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "header",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": Array [
                    <header
                      className="App__header"
>
                      <h1>
                                            Countdown for
                      </h1>
                      <div
                                            className="App__event"
                      >
                                            <p>
                                                                  February 25, 2018
                                            </p>
                      </div>
</header>,
                    <Clock
                      deadline="February 25, 2018"
/>,
                    <section
                      className="Add-Event"
>
                      <form
                                            className="Add-Event__form"
                      >
                                            <input
                                                                  onChange={[Function]}
                                                                  type="text"
                                            />
                                            <button
                                                                  onClick={[Function]}
                                            >
                                                                  Send
                                            </button>
                      </form>
</section>,
                  ],
                  "className": "App",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <header
                      className="App__header"
>
                      <h1>
                                            Countdown for
                      </h1>
                      <div
                                            className="App__event"
                      >
                                            <p>
                                                                  February 25, 2018
                                            </p>
                      </div>
</header>,
                    <Clock
                      deadline="February 25, 2018"
/>,
                    <section
                      className="Add-Event"
>
                      <form
                                            className="Add-Event__form"
                      >
                                            <input
                                                                  onChange={[Function]}
                                                                  type="text"
                                            />
                                            <button
                                                                  onClick={[Function]}
                                            >
                                                                  Send
                                            </button>
                      </form>
</section>,
                  ],
                  "className": "App",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <div
                  class="App"
>
                  <header
                                    class="App__header"
                  >
                                    <h1>
                                                      Countdown for
                                    </h1>
                                    <div
                                                      class="App__event"
                                    >
                                                      <p>
                                                                        February 25, 2018
                                                      </p>
                                    </div>
                  </header>
                  <section
                                    class="Clock"
                  >
                                    <div
                                                      class="Clock__days"
                                    >
                                                      0 day
                                    </div>
                                    <div
                                                      class="Clock__hours"
                                    >
                                                      0 hour
                                    </div>
                                    <div
                                                      class="Clock__minutes"
                                    >
                                                      0 minute
                                    </div>
                                    <div
                                                      class="Clock__seconds"
                                    >
                                                      0 second
                                    </div>
                  </section>
                  <section
                                    class="Add-Event"
                  >
                                    <form
                                                      class="Add-Event__form"
                                    >
                                                      <input
                                                                        type="text"
                                                      />
                                                      <button>
                                                                        Send
                                                      </button>
                                    </form>
                  </section>
</div>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "div",
                "updateQueue": null,
              },
              "selfBaseTime": 0,
              "sibling": FiberNode {
                "_debugID": 9,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 28,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 18,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 29,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 19,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 30,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "onChange": [Function],
                      "type": "text",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "onChange": [Function],
                      "type": "text",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 20,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 31,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Send",
                        "onClick": [Function],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "Send",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <button>
                        Send
</button>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "button",
                      "updateQueue": null,
                    },
                    "stateNode": <input
                      type="text"
/>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <input
                        onChange={[Function]}
                        type="text"
/>,
                      <button
                        onClick={[Function]}
>
                        Send
</button>,
                    ],
                    "className": "Add-Event__form",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <input
                        onChange={[Function]}
                        type="text"
/>,
                      <button
                        onClick={[Function]}
>
                        Send
</button>,
                    ],
                    "className": "Add-Event__form",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <form
                    class="Add-Event__form"
>
                    <input
                                        type="text"
                    />
                    <button>
                                        Send
                    </button>
</form>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "form",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 2,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <form
                    className="Add-Event__form"
>
                    <input
                                        onChange={[Function]}
                                        type="text"
                    />
                    <button
                                        onClick={[Function]}
                    >
                                        Send
                    </button>
</form>,
                  "className": "Add-Event",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <form
                    className="Add-Event__form"
>
                    <input
                                        onChange={[Function]}
                                        type="text"
                    />
                    <button
                                        onClick={[Function]}
                    >
                                        Send
                    </button>
</form>,
                  "className": "Add-Event",
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 6,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 20,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 7,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 21,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 10,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 22,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Countdown for",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "Countdown for",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": FiberNode {
                        "_debugID": 11,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                          "lineNumber": 23,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 12,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                            "lineNumber": 24,
                          },
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "February 25, 2018",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "February 25, 2018",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": <p>
                            February 25, 2018
</p>,
                          "tag": 5,
                          "treeBaseTime": 0,
                          "type": "p",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <p>
                            February 25, 2018
</p>,
                          "className": "App__event",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <p>
                            February 25, 2018
</p>,
                          "className": "App__event",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="App__event"
>
                          <p>
                                                    February 25, 2018
                          </p>
</div>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <h1>
                        Countdown for
</h1>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "h1",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <h1>
                          Countdown for
</h1>,
                        <div
                          className="App__event"
>
                          <p>
                                                    February 25, 2018
                          </p>
</div>,
                      ],
                      "className": "App__header",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <h1>
                          Countdown for
</h1>,
                        <div
                          className="App__event"
>
                          <p>
                                                    February 25, 2018
                          </p>
</div>,
                      ],
                      "className": "App__header",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": [Circular],
                    "stateNode": <header
                      class="App__header"
>
                      <h1>
                                            Countdown for
                      </h1>
                      <div
                                            class="App__event"
                      >
                                            <p>
                                                                  February 25, 2018
                                            </p>
                      </div>
</header>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "header",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": Array [
                      <header
                        className="App__header"
>
                        <h1>
                                                Countdown for
                        </h1>
                        <div
                                                className="App__event"
                        >
                                                <p>
                                                                        February 25, 2018
                                                </p>
                        </div>
</header>,
                      <Clock
                        deadline="February 25, 2018"
/>,
                      <section
                        className="Add-Event"
>
                        <form
                                                className="Add-Event__form"
                        >
                                                <input
                                                                        onChange={[Function]}
                                                                        type="text"
                                                />
                                                <button
                                                                        onClick={[Function]}
                                                >
                                                                        Send
                                                </button>
                        </form>
</section>,
                    ],
                    "className": "App",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <header
                        className="App__header"
>
                        <h1>
                                                Countdown for
                        </h1>
                        <div
                                                className="App__event"
                        >
                                                <p>
                                                                        February 25, 2018
                                                </p>
                        </div>
</header>,
                      <Clock
                        deadline="February 25, 2018"
/>,
                      <section
                        className="Add-Event"
>
                        <form
                                                className="Add-Event__form"
                        >
                                                <input
                                                                        onChange={[Function]}
                                                                        type="text"
                                                />
                                                <button
                                                                        onClick={[Function]}
                                                >
                                                                        Send
                                                </button>
                        </form>
</section>,
                    ],
                    "className": "App",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="App"
>
                    <header
                                        class="App__header"
                    >
                                        <h1>
                                                            Countdown for
                                        </h1>
                                        <div
                                                            class="App__event"
                                        >
                                                            <p>
                                                                                February 25, 2018
                                                            </p>
                                        </div>
                    </header>
                    <section
                                        class="Clock"
                    >
                                        <div
                                                            class="Clock__days"
                                        >
                                                            0 day
                                        </div>
                                        <div
                                                            class="Clock__hours"
                                        >
                                                            0 hour
                                        </div>
                                        <div
                                                            class="Clock__minutes"
                                        >
                                                            0 minute
                                        </div>
                                        <div
                                                            class="Clock__seconds"
                                        >
                                                            0 second
                                        </div>
                    </section>
                    <section
                                        class="Add-Event"
                    >
                                        <form
                                                            class="Add-Event__form"
                                        >
                                                            <input
                                                                                type="text"
                                                            />
                                                            <button>
                                                                                Send
                                                            </button>
                                        </form>
                    </section>
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <section
                  class="Add-Event"
>
                  <form
                                    class="Add-Event__form"
                  >
                                    <input
                                                      type="text"
                                    />
                                    <button>
                                                      Send
                                    </button>
                  </form>
</section>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "section",
                "updateQueue": null,
              },
              "stateNode": Clock {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "intervalId": 2,
                "props": Object {
                  "deadline": "February 25, 2018",
                },
                "refs": Object {},
                "state": Object {
                  "days": 0,
                  "deadline": "",
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 0,
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseTime": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "index": 0,
            "key": null,
            "lastEffect": FiberNode {
              "_debugID": 8,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                "lineNumber": 27,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 13,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                  "lineNumber": 29,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 14,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                    "lineNumber": 30,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "0 day",
                    "className": "Clock__days",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "0 day",
                    "className": "Clock__days",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 15,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                      "lineNumber": 31,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "0 hour",
                      "className": "Clock__hours",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "0 hour",
                      "className": "Clock__hours",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 16,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                        "lineNumber": 32,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 2,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "0 minute",
                        "className": "Clock__minutes",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "0 minute",
                        "className": "Clock__minutes",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": FiberNode {
                        "_debugID": 17,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                          "lineNumber": 33,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 3,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "0 second",
                          "className": "Clock__seconds",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "0 second",
                          "className": "Clock__seconds",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="Clock__seconds"
>
                          0 second
</div>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <div
                        class="Clock__minutes"
>
                        0 minute
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <div
                      class="Clock__hours"
>
                      0 hour
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <div
                    class="Clock__days"
>
                    0 day
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <div
                      className="Clock__days"
>
                      0 day
</div>,
                    <div
                      className="Clock__hours"
>
                      0 hour
</div>,
                    <div
                      className="Clock__minutes"
>
                      0 minute
</div>,
                    <div
                      className="Clock__seconds"
>
                      0 second
</div>,
                  ],
                  "className": "Clock",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <div
                      className="Clock__days"
>
                      0 day
</div>,
                    <div
                      className="Clock__hours"
>
                      0 hour
</div>,
                    <div
                      className="Clock__minutes"
>
                      0 minute
</div>,
                    <div
                      className="Clock__seconds"
>
                      0 second
</div>,
                  ],
                  "className": "Clock",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <section
                  class="Clock"
>
                  <div
                                    class="Clock__days"
                  >
                                    0 day
                  </div>
                  <div
                                    class="Clock__hours"
                  >
                                    0 hour
                  </div>
                  <div
                                    class="Clock__minutes"
                  >
                                    0 minute
                  </div>
                  <div
                                    class="Clock__seconds"
                  >
                                    0 second
                  </div>
</section>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "section",
                "updateQueue": null,
              },
              "effectTag": 5,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 1,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "deadline": "February 25, 2018",
              },
              "memoizedState": Object {
                "days": 0,
                "deadline": "",
                "hours": 0,
                "minutes": 0,
                "seconds": 0,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "deadline": "February 25, 2018",
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 6,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 20,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 21,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 22,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Countdown for",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Countdown for",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 11,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 23,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 12,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                          "lineNumber": 24,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "February 25, 2018",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "February 25, 2018",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <p>
                          February 25, 2018
</p>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "p",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <p>
                          February 25, 2018
</p>,
                        "className": "App__event",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <p>
                          February 25, 2018
</p>,
                        "className": "App__event",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="App__event"
>
                        <p>
                                                February 25, 2018
                        </p>
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <h1>
                      Countdown for
</h1>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "h1",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <h1>
                        Countdown for
</h1>,
                      <div
                        className="App__event"
>
                        <p>
                                                February 25, 2018
                        </p>
</div>,
                    ],
                    "className": "App__header",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <h1>
                        Countdown for
</h1>,
                      <div
                        className="App__event"
>
                        <p>
                                                February 25, 2018
                        </p>
</div>,
                    ],
                    "className": "App__header",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": [Circular],
                  "stateNode": <header
                    class="App__header"
>
                    <h1>
                                        Countdown for
                    </h1>
                    <div
                                        class="App__event"
                    >
                                        <p>
                                                            February 25, 2018
                                        </p>
                    </div>
</header>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "header",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": Array [
                    <header
                      className="App__header"
>
                      <h1>
                                            Countdown for
                      </h1>
                      <div
                                            className="App__event"
                      >
                                            <p>
                                                                  February 25, 2018
                                            </p>
                      </div>
</header>,
                    <Clock
                      deadline="February 25, 2018"
/>,
                    <section
                      className="Add-Event"
>
                      <form
                                            className="Add-Event__form"
                      >
                                            <input
                                                                  onChange={[Function]}
                                                                  type="text"
                                            />
                                            <button
                                                                  onClick={[Function]}
                                            >
                                                                  Send
                                            </button>
                      </form>
</section>,
                  ],
                  "className": "App",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <header
                      className="App__header"
>
                      <h1>
                                            Countdown for
                      </h1>
                      <div
                                            className="App__event"
                      >
                                            <p>
                                                                  February 25, 2018
                                            </p>
                      </div>
</header>,
                    <Clock
                      deadline="February 25, 2018"
/>,
                    <section
                      className="Add-Event"
>
                      <form
                                            className="Add-Event__form"
                      >
                                            <input
                                                                  onChange={[Function]}
                                                                  type="text"
                                            />
                                            <button
                                                                  onClick={[Function]}
                                            >
                                                                  Send
                                            </button>
                      </form>
</section>,
                  ],
                  "className": "App",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <div
                  class="App"
>
                  <header
                                    class="App__header"
                  >
                                    <h1>
                                                      Countdown for
                                    </h1>
                                    <div
                                                      class="App__event"
                                    >
                                                      <p>
                                                                        February 25, 2018
                                                      </p>
                                    </div>
                  </header>
                  <section
                                    class="Clock"
                  >
                                    <div
                                                      class="Clock__days"
                                    >
                                                      0 day
                                    </div>
                                    <div
                                                      class="Clock__hours"
                                    >
                                                      0 hour
                                    </div>
                                    <div
                                                      class="Clock__minutes"
                                    >
                                                      0 minute
                                    </div>
                                    <div
                                                      class="Clock__seconds"
                                    >
                                                      0 second
                                    </div>
                  </section>
                  <section
                                    class="Add-Event"
                  >
                                    <form
                                                      class="Add-Event__form"
                                    >
                                                      <input
                                                                        type="text"
                                                      />
                                                      <button>
                                                                        Send
                                                      </button>
                                    </form>
                  </section>
</div>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "div",
                "updateQueue": null,
              },
              "selfBaseTime": 0,
              "sibling": FiberNode {
                "_debugID": 9,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 28,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 18,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 29,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 19,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 30,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "onChange": [Function],
                      "type": "text",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "onChange": [Function],
                      "type": "text",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 20,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 31,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Send",
                        "onClick": [Function],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "Send",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <button>
                        Send
</button>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "button",
                      "updateQueue": null,
                    },
                    "stateNode": <input
                      type="text"
/>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <input
                        onChange={[Function]}
                        type="text"
/>,
                      <button
                        onClick={[Function]}
>
                        Send
</button>,
                    ],
                    "className": "Add-Event__form",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <input
                        onChange={[Function]}
                        type="text"
/>,
                      <button
                        onClick={[Function]}
>
                        Send
</button>,
                    ],
                    "className": "Add-Event__form",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <form
                    class="Add-Event__form"
>
                    <input
                                        type="text"
                    />
                    <button>
                                        Send
                    </button>
</form>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "form",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 2,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <form
                    className="Add-Event__form"
>
                    <input
                                        onChange={[Function]}
                                        type="text"
                    />
                    <button
                                        onClick={[Function]}
                    >
                                        Send
                    </button>
</form>,
                  "className": "Add-Event",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <form
                    className="Add-Event__form"
>
                    <input
                                        onChange={[Function]}
                                        type="text"
                    />
                    <button
                                        onClick={[Function]}
                    >
                                        Send
                    </button>
</form>,
                  "className": "Add-Event",
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 6,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 20,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 7,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 21,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 10,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 22,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Countdown for",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "Countdown for",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": FiberNode {
                        "_debugID": 11,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                          "lineNumber": 23,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 12,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                            "lineNumber": 24,
                          },
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "February 25, 2018",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "February 25, 2018",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": <p>
                            February 25, 2018
</p>,
                          "tag": 5,
                          "treeBaseTime": 0,
                          "type": "p",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <p>
                            February 25, 2018
</p>,
                          "className": "App__event",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <p>
                            February 25, 2018
</p>,
                          "className": "App__event",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="App__event"
>
                          <p>
                                                    February 25, 2018
                          </p>
</div>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <h1>
                        Countdown for
</h1>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "h1",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <h1>
                          Countdown for
</h1>,
                        <div
                          className="App__event"
>
                          <p>
                                                    February 25, 2018
                          </p>
</div>,
                      ],
                      "className": "App__header",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <h1>
                          Countdown for
</h1>,
                        <div
                          className="App__event"
>
                          <p>
                                                    February 25, 2018
                          </p>
</div>,
                      ],
                      "className": "App__header",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": [Circular],
                    "stateNode": <header
                      class="App__header"
>
                      <h1>
                                            Countdown for
                      </h1>
                      <div
                                            class="App__event"
                      >
                                            <p>
                                                                  February 25, 2018
                                            </p>
                      </div>
</header>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "header",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": Array [
                      <header
                        className="App__header"
>
                        <h1>
                                                Countdown for
                        </h1>
                        <div
                                                className="App__event"
                        >
                                                <p>
                                                                        February 25, 2018
                                                </p>
                        </div>
</header>,
                      <Clock
                        deadline="February 25, 2018"
/>,
                      <section
                        className="Add-Event"
>
                        <form
                                                className="Add-Event__form"
                        >
                                                <input
                                                                        onChange={[Function]}
                                                                        type="text"
                                                />
                                                <button
                                                                        onClick={[Function]}
                                                >
                                                                        Send
                                                </button>
                        </form>
</section>,
                    ],
                    "className": "App",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <header
                        className="App__header"
>
                        <h1>
                                                Countdown for
                        </h1>
                        <div
                                                className="App__event"
                        >
                                                <p>
                                                                        February 25, 2018
                                                </p>
                        </div>
</header>,
                      <Clock
                        deadline="February 25, 2018"
/>,
                      <section
                        className="Add-Event"
>
                        <form
                                                className="Add-Event__form"
                        >
                                                <input
                                                                        onChange={[Function]}
                                                                        type="text"
                                                />
                                                <button
                                                                        onClick={[Function]}
                                                >
                                                                        Send
                                                </button>
                        </form>
</section>,
                    ],
                    "className": "App",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="App"
>
                    <header
                                        class="App__header"
                    >
                                        <h1>
                                                            Countdown for
                                        </h1>
                                        <div
                                                            class="App__event"
                                        >
                                                            <p>
                                                                                February 25, 2018
                                                            </p>
                                        </div>
                    </header>
                    <section
                                        class="Clock"
                    >
                                        <div
                                                            class="Clock__days"
                                        >
                                                            0 day
                                        </div>
                                        <div
                                                            class="Clock__hours"
                                        >
                                                            0 hour
                                        </div>
                                        <div
                                                            class="Clock__minutes"
                                        >
                                                            0 minute
                                        </div>
                                        <div
                                                            class="Clock__seconds"
                                        >
                                                            0 second
                                        </div>
                    </section>
                    <section
                                        class="Add-Event"
                    >
                                        <form
                                                            class="Add-Event__form"
                                        >
                                                            <input
                                                                                type="text"
                                                            />
                                                            <button>
                                                                                Send
                                                            </button>
                                        </form>
                    </section>
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <section
                  class="Add-Event"
>
                  <form
                                    class="Add-Event__form"
                  >
                                    <input
                                                      type="text"
                                    />
                                    <button>
                                                      Send
                                    </button>
                  </form>
</section>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "section",
                "updateQueue": null,
              },
              "stateNode": Clock {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "intervalId": 2,
                "props": Object {
                  "deadline": "February 25, 2018",
                },
                "refs": Object {},
                "state": Object {
                  "days": 0,
                  "deadline": "",
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 0,
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseTime": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {},
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": FiberNode {
                "_debugID": 1,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 1,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                                        class="App"
                    >
                                        <header
                                                            class="App__header"
                                        >
                                                            <h1>
                                                                                Countdown for
                                                            </h1>
                                                            <div
                                                                                class="App__event"
                                                            >
                                                                                <p>
                                                                                                    February 25, 2018
                                                                                </p>
                                                            </div>
                                        </header>
                                        <section
                                                            class="Clock"
                                        >
                                                            <div
                                                                                class="Clock__days"
                                                            >
                                                                                0 day
                                                            </div>
                                                            <div
                                                                                class="Clock__hours"
                                                            >
                                                                                0 hour
                                                            </div>
                                                            <div
                                                                                class="Clock__minutes"
                                                            >
                                                                                0 minute
                                                            </div>
                                                            <div
                                                                                class="Clock__seconds"
                                                            >
                                                                                0 second
                                                            </div>
                                        </section>
                                        <section
                                                            class="Add-Event"
                                        >
                                                            <form
                                                                                class="Add-Event__form"
                                                            >
                                                                                <input
                                                                                                    type="text"
                                                                                />
                                                                                <button>
                                                                                                    Send
                                                                                </button>
                                                            </form>
                                        </section>
                    </div>
</div>,
                  "context": Object {},
                  "current": [Circular],
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "treeBaseTime": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "expirationTime": 1,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
/>,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
/>,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "effectTag": 32,
              "expirationTime": 0,
              "firstEffect": FiberNode {
                "_debugID": 8,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 27,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 13,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                    "lineNumber": 29,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 14,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                      "lineNumber": 30,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "0 day",
                      "className": "Clock__days",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "0 day",
                      "className": "Clock__days",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 15,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                        "lineNumber": 31,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "0 hour",
                        "className": "Clock__hours",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "0 hour",
                        "className": "Clock__hours",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": FiberNode {
                        "_debugID": 16,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                          "lineNumber": 32,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 2,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "0 minute",
                          "className": "Clock__minutes",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "0 minute",
                          "className": "Clock__minutes",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": FiberNode {
                          "_debugID": 17,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                            "lineNumber": 33,
                          },
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 3,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "0 second",
                            "className": "Clock__seconds",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "0 second",
                            "className": "Clock__seconds",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": <div
                            class="Clock__seconds"
>
                            0 second
</div>,
                          "tag": 5,
                          "treeBaseTime": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "stateNode": <div
                          class="Clock__minutes"
>
                          0 minute
</div>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <div
                        class="Clock__hours"
>
                        0 hour
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <div
                      class="Clock__days"
>
                      0 day
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <div
                        className="Clock__days"
>
                        0 day
</div>,
                      <div
                        className="Clock__hours"
>
                        0 hour
</div>,
                      <div
                        className="Clock__minutes"
>
                        0 minute
</div>,
                      <div
                        className="Clock__seconds"
>
                        0 second
</div>,
                    ],
                    "className": "Clock",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <div
                        className="Clock__days"
>
                        0 day
</div>,
                      <div
                        className="Clock__hours"
>
                        0 hour
</div>,
                      <div
                        className="Clock__minutes"
>
                        0 minute
</div>,
                      <div
                        className="Clock__seconds"
>
                        0 second
</div>,
                    ],
                    "className": "Clock",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <section
                    class="Clock"
>
                    <div
                                        class="Clock__days"
                    >
                                        0 day
                    </div>
                    <div
                                        class="Clock__hours"
                    >
                                        0 hour
                    </div>
                    <div
                                        class="Clock__minutes"
                    >
                                        0 minute
                    </div>
                    <div
                                        class="Clock__seconds"
                    >
                                        0 second
                    </div>
</section>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "section",
                  "updateQueue": null,
                },
                "effectTag": 5,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "deadline": "February 25, 2018",
                },
                "memoizedState": Object {
                  "days": 0,
                  "deadline": "",
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 0,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "deadline": "February 25, 2018",
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 6,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 20,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 7,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 21,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 10,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 22,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Countdown for",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "Countdown for",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": FiberNode {
                        "_debugID": 11,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                          "lineNumber": 23,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 12,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                            "lineNumber": 24,
                          },
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "February 25, 2018",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "February 25, 2018",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": <p>
                            February 25, 2018
</p>,
                          "tag": 5,
                          "treeBaseTime": 0,
                          "type": "p",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <p>
                            February 25, 2018
</p>,
                          "className": "App__event",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <p>
                            February 25, 2018
</p>,
                          "className": "App__event",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="App__event"
>
                          <p>
                                                    February 25, 2018
                          </p>
</div>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <h1>
                        Countdown for
</h1>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "h1",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <h1>
                          Countdown for
</h1>,
                        <div
                          className="App__event"
>
                          <p>
                                                    February 25, 2018
                          </p>
</div>,
                      ],
                      "className": "App__header",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <h1>
                          Countdown for
</h1>,
                        <div
                          className="App__event"
>
                          <p>
                                                    February 25, 2018
                          </p>
</div>,
                      ],
                      "className": "App__header",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": [Circular],
                    "stateNode": <header
                      class="App__header"
>
                      <h1>
                                            Countdown for
                      </h1>
                      <div
                                            class="App__event"
                      >
                                            <p>
                                                                  February 25, 2018
                                            </p>
                      </div>
</header>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "header",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": Array [
                      <header
                        className="App__header"
>
                        <h1>
                                                Countdown for
                        </h1>
                        <div
                                                className="App__event"
                        >
                                                <p>
                                                                        February 25, 2018
                                                </p>
                        </div>
</header>,
                      <Clock
                        deadline="February 25, 2018"
/>,
                      <section
                        className="Add-Event"
>
                        <form
                                                className="Add-Event__form"
                        >
                                                <input
                                                                        onChange={[Function]}
                                                                        type="text"
                                                />
                                                <button
                                                                        onClick={[Function]}
                                                >
                                                                        Send
                                                </button>
                        </form>
</section>,
                    ],
                    "className": "App",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <header
                        className="App__header"
>
                        <h1>
                                                Countdown for
                        </h1>
                        <div
                                                className="App__event"
                        >
                                                <p>
                                                                        February 25, 2018
                                                </p>
                        </div>
</header>,
                      <Clock
                        deadline="February 25, 2018"
/>,
                      <section
                        className="Add-Event"
>
                        <form
                                                className="Add-Event__form"
                        >
                                                <input
                                                                        onChange={[Function]}
                                                                        type="text"
                                                />
                                                <button
                                                                        onClick={[Function]}
                                                >
                                                                        Send
                                                </button>
                        </form>
</section>,
                    ],
                    "className": "App",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="App"
>
                    <header
                                        class="App__header"
                    >
                                        <h1>
                                                            Countdown for
                                        </h1>
                                        <div
                                                            class="App__event"
                                        >
                                                            <p>
                                                                                February 25, 2018
                                                            </p>
                                        </div>
                    </header>
                    <section
                                        class="Clock"
                    >
                                        <div
                                                            class="Clock__days"
                                        >
                                                            0 day
                                        </div>
                                        <div
                                                            class="Clock__hours"
                                        >
                                                            0 hour
                                        </div>
                                        <div
                                                            class="Clock__minutes"
                                        >
                                                            0 minute
                                        </div>
                                        <div
                                                            class="Clock__seconds"
                                        >
                                                            0 second
                                        </div>
                    </section>
                    <section
                                        class="Add-Event"
                    >
                                        <form
                                                            class="Add-Event__form"
                                        >
                                                            <input
                                                                                type="text"
                                                            />
                                                            <button>
                                                                                Send
                                                            </button>
                                        </form>
                    </section>
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 28,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 18,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 29,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 19,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 30,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "onChange": [Function],
                        "type": "text",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "onChange": [Function],
                        "type": "text",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": FiberNode {
                        "_debugID": 20,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                          "lineNumber": 31,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Send",
                          "onClick": [Function],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "Send",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <button>
                          Send
</button>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "button",
                        "updateQueue": null,
                      },
                      "stateNode": <input
                        type="text"
/>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "input",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <input
                          onChange={[Function]}
                          type="text"
/>,
                        <button
                          onClick={[Function]}
>
                          Send
</button>,
                      ],
                      "className": "Add-Event__form",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <input
                          onChange={[Function]}
                          type="text"
/>,
                        <button
                          onClick={[Function]}
>
                          Send
</button>,
                      ],
                      "className": "Add-Event__form",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <form
                      class="Add-Event__form"
>
                      <input
                                            type="text"
                      />
                      <button>
                                            Send
                      </button>
</form>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "form",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 2,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <form
                      className="Add-Event__form"
>
                      <input
                                            onChange={[Function]}
                                            type="text"
                      />
                      <button
                                            onClick={[Function]}
                      >
                                            Send
                      </button>
</form>,
                    "className": "Add-Event",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <form
                      className="Add-Event__form"
>
                      <input
                                            onChange={[Function]}
                                            type="text"
                      />
                      <button
                                            onClick={[Function]}
                      >
                                            Send
                      </button>
</form>,
                    "className": "Add-Event",
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 6,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 20,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 7,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 21,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 10,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                          "lineNumber": 22,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Countdown for",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "Countdown for",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": FiberNode {
                          "_debugID": 11,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                            "lineNumber": 23,
                          },
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 12,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                              "lineNumber": 24,
                            },
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "February 25, 2018",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "February 25, 2018",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": <p>
                              February 25, 2018
</p>,
                            "tag": 5,
                            "treeBaseTime": 0,
                            "type": "p",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <p>
                              February 25, 2018
</p>,
                            "className": "App__event",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <p>
                              February 25, 2018
</p>,
                            "className": "App__event",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": <div
                            class="App__event"
>
                            <p>
                                                        February 25, 2018
                            </p>
</div>,
                          "tag": 5,
                          "treeBaseTime": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "stateNode": <h1>
                          Countdown for
</h1>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "h1",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <h1>
                            Countdown for
</h1>,
                          <div
                            className="App__event"
>
                            <p>
                                                        February 25, 2018
                            </p>
</div>,
                        ],
                        "className": "App__header",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <h1>
                            Countdown for
</h1>,
                          <div
                            className="App__event"
>
                            <p>
                                                        February 25, 2018
                            </p>
</div>,
                        ],
                        "className": "App__header",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": [Circular],
                      "stateNode": <header
                        class="App__header"
>
                        <h1>
                                                Countdown for
                        </h1>
                        <div
                                                class="App__event"
                        >
                                                <p>
                                                                        February 25, 2018
                                                </p>
                        </div>
</header>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "header",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": Array [
                        <header
                          className="App__header"
>
                          <h1>
                                                    Countdown for
                          </h1>
                          <div
                                                    className="App__event"
                          >
                                                    <p>
                                                                              February 25, 2018
                                                    </p>
                          </div>
</header>,
                        <Clock
                          deadline="February 25, 2018"
/>,
                        <section
                          className="Add-Event"
>
                          <form
                                                    className="Add-Event__form"
                          >
                                                    <input
                                                                              onChange={[Function]}
                                                                              type="text"
                                                    />
                                                    <button
                                                                              onClick={[Function]}
                                                    >
                                                                              Send
                                                    </button>
                          </form>
</section>,
                      ],
                      "className": "App",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <header
                          className="App__header"
>
                          <h1>
                                                    Countdown for
                          </h1>
                          <div
                                                    className="App__event"
                          >
                                                    <p>
                                                                              February 25, 2018
                                                    </p>
                          </div>
</header>,
                        <Clock
                          deadline="February 25, 2018"
/>,
                        <section
                          className="Add-Event"
>
                          <form
                                                    className="Add-Event__form"
                          >
                                                    <input
                                                                              onChange={[Function]}
                                                                              type="text"
                                                    />
                                                    <button
                                                                              onClick={[Function]}
                                                    >
                                                                              Send
                                                    </button>
                          </form>
</section>,
                      ],
                      "className": "App",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="App"
>
                      <header
                                            class="App__header"
                      >
                                            <h1>
                                                                  Countdown for
                                            </h1>
                                            <div
                                                                  class="App__event"
                                            >
                                                                  <p>
                                                                                        February 25, 2018
                                                                  </p>
                                            </div>
                      </header>
                      <section
                                            class="Clock"
                      >
                                            <div
                                                                  class="Clock__days"
                                            >
                                                                  0 day
                                            </div>
                                            <div
                                                                  class="Clock__hours"
                                            >
                                                                  0 hour
                                            </div>
                                            <div
                                                                  class="Clock__minutes"
                                            >
                                                                  0 minute
                                            </div>
                                            <div
                                                                  class="Clock__seconds"
                                            >
                                                                  0 second
                                            </div>
                      </section>
                      <section
                                            class="Add-Event"
                      >
                                            <form
                                                                  class="Add-Event__form"
                                            >
                                                                  <input
                                                                                        type="text"
                                                                  />
                                                                  <button>
                                                                                        Send
                                                                  </button>
                                            </form>
                      </section>
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <section
                    class="Add-Event"
>
                    <form
                                        class="Add-Event__form"
                    >
                                        <input
                                                            type="text"
                                        />
                                        <button>
                                                            Send
                                        </button>
                    </form>
</section>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "section",
                  "updateQueue": null,
                },
                "stateNode": Clock {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "intervalId": 2,
                  "props": Object {
                    "deadline": "February 25, 2018",
                  },
                  "refs": Object {},
                  "state": Object {
                    "days": 0,
                    "deadline": "",
                    "hours": 0,
                    "minutes": 0,
                    "seconds": 0,
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "treeBaseTime": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
/>,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                                    class="App"
                  >
                                    <header
                                                      class="App__header"
                                    >
                                                      <h1>
                                                                        Countdown for
                                                      </h1>
                                                      <div
                                                                        class="App__event"
                                                      >
                                                                        <p>
                                                                                          February 25, 2018
                                                                        </p>
                                                      </div>
                                    </header>
                                    <section
                                                      class="Clock"
                                    >
                                                      <div
                                                                        class="Clock__days"
                                                      >
                                                                        0 day
                                                      </div>
                                                      <div
                                                                        class="Clock__hours"
                                                      >
                                                                        0 hour
                                                      </div>
                                                      <div
                                                                        class="Clock__minutes"
                                                      >
                                                                        0 minute
                                                      </div>
                                                      <div
                                                                        class="Clock__seconds"
                                                      >
                                                                        0 second
                                                      </div>
                                    </section>
                                    <section
                                                      class="Add-Event"
                                    >
                                                      <form
                                                                        class="Add-Event__form"
                                                      >
                                                                        <input
                                                                                          type="text"
                                                                        />
                                                                        <button>
                                                                                          Send
                                                                        </button>
                                                      </form>
                                    </section>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={Object {}}
/>,
                },
                "expirationTime": 0,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {},
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {},
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseTime": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 2,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "_setNewDeadLine": [Function],
        "context": Object {},
        "props": Object {},
        "refs": Object {},
        "state": Object {
          "deadline": "February 25, 2018",
          "newDeadline": "",
        },
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {},
      "ref": null,
      "rendered": Object {
        "instance": <div
          class="App"
>
          <header
                    class="App__header"
          >
                    <h1>
                              Countdown for
                    </h1>
                    <div
                              class="App__event"
                    >
                              <p>
                                        February 25, 2018
                              </p>
                    </div>
          </header>
          <section
                    class="Clock"
          >
                    <div
                              class="Clock__days"
                    >
                              0 day
                    </div>
                    <div
                              class="Clock__hours"
                    >
                              0 hour
                    </div>
                    <div
                              class="Clock__minutes"
                    >
                              0 minute
                    </div>
                    <div
                              class="Clock__seconds"
                    >
                              0 second
                    </div>
          </section>
          <section
                    class="Add-Event"
          >
                    <form
                              class="Add-Event__form"
                    >
                              <input
                                        type="text"
                              />
                              <button>
                                        Send
                              </button>
                    </form>
          </section>
</div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <header
              className="App__header"
>
              <h1>
                            Countdown for
              </h1>
              <div
                            className="App__event"
              >
                            <p>
                                          February 25, 2018
                            </p>
              </div>
</header>,
            <Clock
              deadline="February 25, 2018"
/>,
            <section
              className="Add-Event"
>
              <form
                            className="Add-Event__form"
              >
                            <input
                                          onChange={[Function]}
                                          type="text"
                            />
                            <button
                                          onClick={[Function]}
                            >
                                          Send
                            </button>
              </form>
</section>,
          ],
          "className": "App",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <header
              class="App__header"
>
              <h1>
                            Countdown for
              </h1>
              <div
                            class="App__event"
              >
                            <p>
                                          February 25, 2018
                            </p>
              </div>
</header>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h1>
                  Countdown for
</h1>,
                <div
                  className="App__event"
>
                  <p>
                                    February 25, 2018
                  </p>
</div>,
              ],
              "className": "App__header",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <h1>
                  Countdown for
</h1>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Countdown for",
                },
                "ref": null,
                "rendered": Array [
                  "Countdown for",
                ],
                "type": "h1",
              },
              Object {
                "instance": <div
                  class="App__event"
>
                  <p>
                                    February 25, 2018
                  </p>
</div>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <p>
                    February 25, 2018
</p>,
                  "className": "App__event",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <p>
                      February 25, 2018
</p>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "February 25, 2018",
                    },
                    "ref": null,
                    "rendered": Array [
                      "February 25, 2018",
                    ],
                    "type": "p",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "header",
          },
          Object {
            "instance": Clock {
              "_reactInternalFiber": FiberNode {
                "_debugID": 8,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 5,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 4,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {},
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {},
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {},
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                                                        class="App"
                            >
                                                        <header
                                                                                    class="App__header"
                                                        >
                                                                                    <h1>
                                                                                                                Countdown for
                                                                                    </h1>
                                                                                    <div
                                                                                                                class="App__event"
                                                                                    >
                                                                                                                <p>
                                                                                                                                            February 25, 2018
                                                                                                                </p>
                                                                                    </div>
                                                        </header>
                                                        <section
                                                                                    class="Clock"
                                                        >
                                                                                    <div
                                                                                                                class="Clock__days"
                                                                                    >
                                                                                                                0 day
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__hours"
                                                                                    >
                                                                                                                0 hour
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__minutes"
                                                                                    >
                                                                                                                0 minute
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__seconds"
                                                                                    >
                                                                                                                0 second
                                                                                    </div>
                                                        </section>
                                                        <section
                                                                                    class="Add-Event"
                                                        >
                                                                                    <form
                                                                                                                class="Add-Event__form"
                                                                                    >
                                                                                                                <input
                                                                                                                                            type="text"
                                                                                                                />
                                                                                                                <button>
                                                                                                                                            Send
                                                                                                                </button>
                                                                                    </form>
                                                        </section>
                            </div>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "treeBaseTime": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "expirationTime": 1,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "tag": 0,
                          },
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "tag": 0,
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 32,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={Object {}}
/>,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                                                    class="App"
                          >
                                                    <header
                                                                              class="App__header"
                                                    >
                                                                              <h1>
                                                                                                        Countdown for
                                                                              </h1>
                                                                              <div
                                                                                                        class="App__event"
                                                                              >
                                                                                                        <p>
                                                                                                                                  February 25, 2018
                                                                                                        </p>
                                                                              </div>
                                                    </header>
                                                    <section
                                                                              class="Clock"
                                                    >
                                                                              <div
                                                                                                        class="Clock__days"
                                                                              >
                                                                                                        0 day
                                                                              </div>
                                                                              <div
                                                                                                        class="Clock__hours"
                                                                              >
                                                                                                        0 hour
                                                                              </div>
                                                                              <div
                                                                                                        class="Clock__minutes"
                                                                              >
                                                                                                        0 minute
                                                                              </div>
                                                                              <div
                                                                                                        class="Clock__seconds"
                                                                              >
                                                                                                        0 second
                                                                              </div>
                                                    </section>
                                                    <section
                                                                              class="Add-Event"
                                                    >
                                                                              <form
                                                                                                        class="Add-Event__form"
                                                                              >
                                                                                                        <input
                                                                                                                                  type="text"
                                                                                                        />
                                                                                                        <button>
                                                                                                                                  Send
                                                                                                        </button>
                                                                              </form>
                                                    </section>
                          </div>
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "treeBaseTime": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={Object {}}
/>,
                        },
                        "expirationTime": 0,
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseTime": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 6,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 20,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 7,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 21,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 10,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                          "lineNumber": 22,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Countdown for",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "Countdown for",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": FiberNode {
                          "_debugID": 11,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                            "lineNumber": 23,
                          },
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 12,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                              "lineNumber": 24,
                            },
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "February 25, 2018",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "February 25, 2018",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": <p>
                              February 25, 2018
</p>,
                            "tag": 5,
                            "treeBaseTime": 0,
                            "type": "p",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <p>
                              February 25, 2018
</p>,
                            "className": "App__event",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <p>
                              February 25, 2018
</p>,
                            "className": "App__event",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": <div
                            class="App__event"
>
                            <p>
                                                        February 25, 2018
                            </p>
</div>,
                          "tag": 5,
                          "treeBaseTime": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "stateNode": <h1>
                          Countdown for
</h1>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "h1",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <h1>
                            Countdown for
</h1>,
                          <div
                            className="App__event"
>
                            <p>
                                                        February 25, 2018
                            </p>
</div>,
                        ],
                        "className": "App__header",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <h1>
                            Countdown for
</h1>,
                          <div
                            className="App__event"
>
                            <p>
                                                        February 25, 2018
                            </p>
</div>,
                        ],
                        "className": "App__header",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": [Circular],
                      "stateNode": <header
                        class="App__header"
>
                        <h1>
                                                Countdown for
                        </h1>
                        <div
                                                class="App__event"
                        >
                                                <p>
                                                                        February 25, 2018
                                                </p>
                        </div>
</header>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "header",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": Array [
                        <header
                          className="App__header"
>
                          <h1>
                                                    Countdown for
                          </h1>
                          <div
                                                    className="App__event"
                          >
                                                    <p>
                                                                              February 25, 2018
                                                    </p>
                          </div>
</header>,
                        <Clock
                          deadline="February 25, 2018"
/>,
                        <section
                          className="Add-Event"
>
                          <form
                                                    className="Add-Event__form"
                          >
                                                    <input
                                                                              onChange={[Function]}
                                                                              type="text"
                                                    />
                                                    <button
                                                                              onClick={[Function]}
                                                    >
                                                                              Send
                                                    </button>
                          </form>
</section>,
                      ],
                      "className": "App",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <header
                          className="App__header"
>
                          <h1>
                                                    Countdown for
                          </h1>
                          <div
                                                    className="App__event"
                          >
                                                    <p>
                                                                              February 25, 2018
                                                    </p>
                          </div>
</header>,
                        <Clock
                          deadline="February 25, 2018"
/>,
                        <section
                          className="Add-Event"
>
                          <form
                                                    className="Add-Event__form"
                          >
                                                    <input
                                                                              onChange={[Function]}
                                                                              type="text"
                                                    />
                                                    <button
                                                                              onClick={[Function]}
                                                    >
                                                                              Send
                                                    </button>
                          </form>
</section>,
                      ],
                      "className": "App",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="App"
>
                      <header
                                            class="App__header"
                      >
                                            <h1>
                                                                  Countdown for
                                            </h1>
                                            <div
                                                                  class="App__event"
                                            >
                                                                  <p>
                                                                                        February 25, 2018
                                                                  </p>
                                            </div>
                      </header>
                      <section
                                            class="Clock"
                      >
                                            <div
                                                                  class="Clock__days"
                                            >
                                                                  0 day
                                            </div>
                                            <div
                                                                  class="Clock__hours"
                                            >
                                                                  0 hour
                                            </div>
                                            <div
                                                                  class="Clock__minutes"
                                            >
                                                                  0 minute
                                            </div>
                                            <div
                                                                  class="Clock__seconds"
                                            >
                                                                  0 second
                                            </div>
                      </section>
                      <section
                                            class="Add-Event"
                      >
                                            <form
                                                                  class="Add-Event__form"
                                            >
                                                                  <input
                                                                                        type="text"
                                                                  />
                                                                  <button>
                                                                                        Send
                                                                  </button>
                                            </form>
                      </section>
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {},
                  "memoizedState": Object {
                    "deadline": "February 25, 2018",
                    "newDeadline": "",
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {},
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 4,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {},
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {},
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {},
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                                                        class="App"
                            >
                                                        <header
                                                                                    class="App__header"
                                                        >
                                                                                    <h1>
                                                                                                                Countdown for
                                                                                    </h1>
                                                                                    <div
                                                                                                                class="App__event"
                                                                                    >
                                                                                                                <p>
                                                                                                                                            February 25, 2018
                                                                                                                </p>
                                                                                    </div>
                                                        </header>
                                                        <section
                                                                                    class="Clock"
                                                        >
                                                                                    <div
                                                                                                                class="Clock__days"
                                                                                    >
                                                                                                                0 day
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__hours"
                                                                                    >
                                                                                                                0 hour
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__minutes"
                                                                                    >
                                                                                                                0 minute
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__seconds"
                                                                                    >
                                                                                                                0 second
                                                                                    </div>
                                                        </section>
                                                        <section
                                                                                    class="Add-Event"
                                                        >
                                                                                    <form
                                                                                                                class="Add-Event__form"
                                                                                    >
                                                                                                                <input
                                                                                                                                            type="text"
                                                                                                                />
                                                                                                                <button>
                                                                                                                                            Send
                                                                                                                </button>
                                                                                    </form>
                                                        </section>
                            </div>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "treeBaseTime": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "expirationTime": 1,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "tag": 0,
                          },
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "tag": 0,
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 32,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={Object {}}
/>,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                                                    class="App"
                          >
                                                    <header
                                                                              class="App__header"
                                                    >
                                                                              <h1>
                                                                                                        Countdown for
                                                                              </h1>
                                                                              <div
                                                                                                        class="App__event"
                                                                              >
                                                                                                        <p>
                                                                                                                                  February 25, 2018
                                                                                                        </p>
                                                                              </div>
                                                    </header>
                                                    <section
                                                                              class="Clock"
                                                    >
                                                                              <div
                                                                                                        class="Clock__days"
                                                                              >
                                                                                                        0 day
                                                                              </div>
                                                                              <div
                                                                                                        class="Clock__hours"
                                                                              >
                                                                                                        0 hour
                                                                              </div>
                                                                              <div
                                                                                                        class="Clock__minutes"
                                                                              >
                                                                                                        0 minute
                                                                              </div>
                                                                              <div
                                                                                                        class="Clock__seconds"
                                                                              >
                                                                                                        0 second
                                                                              </div>
                                                    </section>
                                                    <section
                                                                              class="Add-Event"
                                                    >
                                                                              <form
                                                                                                        class="Add-Event__form"
                                                                              >
                                                                                                        <input
                                                                                                                                  type="text"
                                                                                                        />
                                                                                                        <button>
                                                                                                                                  Send
                                                                                                        </button>
                                                                              </form>
                                                    </section>
                          </div>
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "treeBaseTime": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={Object {}}
/>,
                        },
                        "expirationTime": 0,
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseTime": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": App {
                    "_handleOnChangeDeadline": [Function],
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "_setNewDeadLine": [Function],
                    "context": Object {},
                    "props": Object {},
                    "refs": Object {},
                    "state": Object {
                      "deadline": "February 25, 2018",
                      "newDeadline": "",
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "treeBaseTime": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": Object {
                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                  "lineNumber": 27,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 13,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                    "lineNumber": 29,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 14,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                      "lineNumber": 30,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "0 day",
                      "className": "Clock__days",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "0 day",
                      "className": "Clock__days",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 15,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                        "lineNumber": 31,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "0 hour",
                        "className": "Clock__hours",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "0 hour",
                        "className": "Clock__hours",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": FiberNode {
                        "_debugID": 16,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                          "lineNumber": 32,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 2,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "0 minute",
                          "className": "Clock__minutes",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "0 minute",
                          "className": "Clock__minutes",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": FiberNode {
                          "_debugID": 17,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/clock/Clock.jsx",
                            "lineNumber": 33,
                          },
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 3,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "0 second",
                            "className": "Clock__seconds",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "0 second",
                            "className": "Clock__seconds",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": <div
                            class="Clock__seconds"
>
                            0 second
</div>,
                          "tag": 5,
                          "treeBaseTime": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "stateNode": <div
                          class="Clock__minutes"
>
                          0 minute
</div>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <div
                        class="Clock__hours"
>
                        0 hour
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <div
                      class="Clock__days"
>
                      0 day
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <div
                        className="Clock__days"
>
                        0 day
</div>,
                      <div
                        className="Clock__hours"
>
                        0 hour
</div>,
                      <div
                        className="Clock__minutes"
>
                        0 minute
</div>,
                      <div
                        className="Clock__seconds"
>
                        0 second
</div>,
                    ],
                    "className": "Clock",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <div
                        className="Clock__days"
>
                        0 day
</div>,
                      <div
                        className="Clock__hours"
>
                        0 hour
</div>,
                      <div
                        className="Clock__minutes"
>
                        0 minute
</div>,
                      <div
                        className="Clock__seconds"
>
                        0 second
</div>,
                    ],
                    "className": "Clock",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <section
                    class="Clock"
>
                    <div
                                        class="Clock__days"
                    >
                                        0 day
                    </div>
                    <div
                                        class="Clock__hours"
                    >
                                        0 hour
                    </div>
                    <div
                                        class="Clock__minutes"
                    >
                                        0 minute
                    </div>
                    <div
                                        class="Clock__seconds"
                    >
                                        0 second
                    </div>
</section>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "section",
                  "updateQueue": null,
                },
                "effectTag": 5,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "deadline": "February 25, 2018",
                },
                "memoizedState": Object {
                  "days": 0,
                  "deadline": "",
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 0,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "deadline": "February 25, 2018",
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 6,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 5,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="App"
                              >
                                                            <header
                                                                                          class="App__header"
                                                            >
                                                                                          <h1>
                                                                                                                        Countdown for
                                                                                          </h1>
                                                                                          <div
                                                                                                                        class="App__event"
                                                                                          >
                                                                                                                        <p>
                                                                                                                                                      February 25, 2018
                                                                                                                        </p>
                                                                                          </div>
                                                            </header>
                                                            <section
                                                                                          class="Clock"
                                                            >
                                                                                          <div
                                                                                                                        class="Clock__days"
                                                                                          >
                                                                                                                        0 day
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__hours"
                                                                                          >
                                                                                                                        0 hour
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__minutes"
                                                                                          >
                                                                                                                        0 minute
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__seconds"
                                                                                          >
                                                                                                                        0 second
                                                                                          </div>
                                                            </section>
                                                            <section
                                                                                          class="Add-Event"
                                                            >
                                                                                          <form
                                                                                                                        class="Add-Event__form"
                                                                                          >
                                                                                                                        <input
                                                                                                                                                      type="text"
                                                                                                                        />
                                                                                                                        <button>
                                                                                                                                                      Send
                                                                                                                        </button>
                                                                                          </form>
                                                            </section>
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "treeBaseTime": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "expirationTime": 1,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "tag": 0,
                            },
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "tag": 0,
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={Object {}}
/>,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                                                        class="App"
                            >
                                                        <header
                                                                                    class="App__header"
                                                        >
                                                                                    <h1>
                                                                                                                Countdown for
                                                                                    </h1>
                                                                                    <div
                                                                                                                class="App__event"
                                                                                    >
                                                                                                                <p>
                                                                                                                                            February 25, 2018
                                                                                                                </p>
                                                                                    </div>
                                                        </header>
                                                        <section
                                                                                    class="Clock"
                                                        >
                                                                                    <div
                                                                                                                class="Clock__days"
                                                                                    >
                                                                                                                0 day
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__hours"
                                                                                    >
                                                                                                                0 hour
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__minutes"
                                                                                    >
                                                                                                                0 minute
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__seconds"
                                                                                    >
                                                                                                                0 second
                                                                                    </div>
                                                        </section>
                                                        <section
                                                                                    class="Add-Event"
                                                        >
                                                                                    <form
                                                                                                                class="Add-Event__form"
                                                                                    >
                                                                                                                <input
                                                                                                                                            type="text"
                                                                                                                />
                                                                                                                <button>
                                                                                                                                            Send
                                                                                                                </button>
                                                                                    </form>
                                                        </section>
                            </div>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "treeBaseTime": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
/>,
                          },
                          "expirationTime": 0,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": null,
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": null,
                        },
                      },
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseTime": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {},
                    "memoizedState": Object {
                      "deadline": "February 25, 2018",
                      "newDeadline": "",
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {},
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="App"
                              >
                                                            <header
                                                                                          class="App__header"
                                                            >
                                                                                          <h1>
                                                                                                                        Countdown for
                                                                                          </h1>
                                                                                          <div
                                                                                                                        class="App__event"
                                                                                          >
                                                                                                                        <p>
                                                                                                                                                      February 25, 2018
                                                                                                                        </p>
                                                                                          </div>
                                                            </header>
                                                            <section
                                                                                          class="Clock"
                                                            >
                                                                                          <div
                                                                                                                        class="Clock__days"
                                                                                          >
                                                                                                                        0 day
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__hours"
                                                                                          >
                                                                                                                        0 hour
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__minutes"
                                                                                          >
                                                                                                                        0 minute
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__seconds"
                                                                                          >
                                                                                                                        0 second
                                                                                          </div>
                                                            </section>
                                                            <section
                                                                                          class="Add-Event"
                                                            >
                                                                                          <form
                                                                                                                        class="Add-Event__form"
                                                                                          >
                                                                                                                        <input
                                                                                                                                                      type="text"
                                                                                                                        />
                                                                                                                        <button>
                                                                                                                                                      Send
                                                                                                                        </button>
                                                                                          </form>
                                                            </section>
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "treeBaseTime": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "expirationTime": 1,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "tag": 0,
                            },
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "tag": 0,
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={Object {}}
/>,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                                                        class="App"
                            >
                                                        <header
                                                                                    class="App__header"
                                                        >
                                                                                    <h1>
                                                                                                                Countdown for
                                                                                    </h1>
                                                                                    <div
                                                                                                                class="App__event"
                                                                                    >
                                                                                                                <p>
                                                                                                                                            February 25, 2018
                                                                                                                </p>
                                                                                    </div>
                                                        </header>
                                                        <section
                                                                                    class="Clock"
                                                        >
                                                                                    <div
                                                                                                                class="Clock__days"
                                                                                    >
                                                                                                                0 day
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__hours"
                                                                                    >
                                                                                                                0 hour
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__minutes"
                                                                                    >
                                                                                                                0 minute
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__seconds"
                                                                                    >
                                                                                                                0 second
                                                                                    </div>
                                                        </section>
                                                        <section
                                                                                    class="Add-Event"
                                                        >
                                                                                    <form
                                                                                                                class="Add-Event__form"
                                                                                    >
                                                                                                                <input
                                                                                                                                            type="text"
                                                                                                                />
                                                                                                                <button>
                                                                                                                                            Send
                                                                                                                </button>
                                                                                    </form>
                                                        </section>
                            </div>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "treeBaseTime": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
/>,
                          },
                          "expirationTime": 0,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": null,
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": null,
                        },
                      },
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseTime": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": App {
                      "_handleOnChangeDeadline": [Function],
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "_setNewDeadLine": [Function],
                      "context": Object {},
                      "props": Object {},
                      "refs": Object {},
                      "state": Object {
                        "deadline": "February 25, 2018",
                        "newDeadline": "",
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseTime": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 20,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 7,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 5,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="App"
                                >
                                                                <header
                                                                                                class="App__header"
                                                                >
                                                                                                <h1>
                                                                                                                                Countdown for
                                                                                                </h1>
                                                                                                <div
                                                                                                                                class="App__event"
                                                                                                >
                                                                                                                                <p>
                                                                                                                                                                February 25, 2018
                                                                                                                                </p>
                                                                                                </div>
                                                                </header>
                                                                <section
                                                                                                class="Clock"
                                                                >
                                                                                                <div
                                                                                                                                class="Clock__days"
                                                                                                >
                                                                                                                                0 day
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__hours"
                                                                                                >
                                                                                                                                0 hour
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__minutes"
                                                                                                >
                                                                                                                                0 minute
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__seconds"
                                                                                                >
                                                                                                                                0 second
                                                                                                </div>
                                                                </section>
                                                                <section
                                                                                                class="Add-Event"
                                                                >
                                                                                                <form
                                                                                                                                class="Add-Event__form"
                                                                                                >
                                                                                                                                <input
                                                                                                                                                                type="text"
                                                                                                                                />
                                                                                                                                <button>
                                                                                                                                                                Send
                                                                                                                                </button>
                                                                                                </form>
                                                                </section>
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "treeBaseTime": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "expirationTime": 1,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "tag": 0,
                              },
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "tag": 0,
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="App"
                              >
                                                            <header
                                                                                          class="App__header"
                                                            >
                                                                                          <h1>
                                                                                                                        Countdown for
                                                                                          </h1>
                                                                                          <div
                                                                                                                        class="App__event"
                                                                                          >
                                                                                                                        <p>
                                                                                                                                                      February 25, 2018
                                                                                                                        </p>
                                                                                          </div>
                                                            </header>
                                                            <section
                                                                                          class="Clock"
                                                            >
                                                                                          <div
                                                                                                                        class="Clock__days"
                                                                                          >
                                                                                                                        0 day
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__hours"
                                                                                          >
                                                                                                                        0 hour
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__minutes"
                                                                                          >
                                                                                                                        0 minute
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__seconds"
                                                                                          >
                                                                                                                        0 second
                                                                                          </div>
                                                            </section>
                                                            <section
                                                                                          class="Add-Event"
                                                            >
                                                                                          <form
                                                                                                                        class="Add-Event__form"
                                                                                          >
                                                                                                                        <input
                                                                                                                                                      type="text"
                                                                                                                        />
                                                                                                                        <button>
                                                                                                                                                      Send
                                                                                                                        </button>
                                                                                          </form>
                                                            </section>
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "treeBaseTime": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "expirationTime": 0,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": null,
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": null,
                          },
                        },
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {},
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseTime": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {},
                      "memoizedState": Object {
                        "deadline": "February 25, 2018",
                        "newDeadline": "",
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {},
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="App"
                                >
                                                                <header
                                                                                                class="App__header"
                                                                >
                                                                                                <h1>
                                                                                                                                Countdown for
                                                                                                </h1>
                                                                                                <div
                                                                                                                                class="App__event"
                                                                                                >
                                                                                                                                <p>
                                                                                                                                                                February 25, 2018
                                                                                                                                </p>
                                                                                                </div>
                                                                </header>
                                                                <section
                                                                                                class="Clock"
                                                                >
                                                                                                <div
                                                                                                                                class="Clock__days"
                                                                                                >
                                                                                                                                0 day
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__hours"
                                                                                                >
                                                                                                                                0 hour
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__minutes"
                                                                                                >
                                                                                                                                0 minute
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__seconds"
                                                                                                >
                                                                                                                                0 second
                                                                                                </div>
                                                                </section>
                                                                <section
                                                                                                class="Add-Event"
                                                                >
                                                                                                <form
                                                                                                                                class="Add-Event__form"
                                                                                                >
                                                                                                                                <input
                                                                                                                                                                type="text"
                                                                                                                                />
                                                                                                                                <button>
                                                                                                                                                                Send
                                                                                                                                </button>
                                                                                                </form>
                                                                </section>
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "treeBaseTime": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "expirationTime": 1,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "tag": 0,
                              },
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "tag": 0,
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="App"
                              >
                                                            <header
                                                                                          class="App__header"
                                                            >
                                                                                          <h1>
                                                                                                                        Countdown for
                                                                                          </h1>
                                                                                          <div
                                                                                                                        class="App__event"
                                                                                          >
                                                                                                                        <p>
                                                                                                                                                      February 25, 2018
                                                                                                                        </p>
                                                                                          </div>
                                                            </header>
                                                            <section
                                                                                          class="Clock"
                                                            >
                                                                                          <div
                                                                                                                        class="Clock__days"
                                                                                          >
                                                                                                                        0 day
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__hours"
                                                                                          >
                                                                                                                        0 hour
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__minutes"
                                                                                          >
                                                                                                                        0 minute
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__seconds"
                                                                                          >
                                                                                                                        0 second
                                                                                          </div>
                                                            </section>
                                                            <section
                                                                                          class="Add-Event"
                                                            >
                                                                                          <form
                                                                                                                        class="Add-Event__form"
                                                                                          >
                                                                                                                        <input
                                                                                                                                                      type="text"
                                                                                                                        />
                                                                                                                        <button>
                                                                                                                                                      Send
                                                                                                                        </button>
                                                                                          </form>
                                                            </section>
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "treeBaseTime": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "expirationTime": 0,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": null,
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": null,
                          },
                        },
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {},
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseTime": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": App {
                        "_handleOnChangeDeadline": [Function],
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "_setNewDeadLine": [Function],
                        "context": Object {},
                        "props": Object {},
                        "refs": Object {},
                        "state": Object {
                          "deadline": "February 25, 2018",
                          "newDeadline": "",
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseTime": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 21,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 10,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 5,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {},
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": 0,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                                                    class="App"
                                  >
                                                                    <header
                                                                                                      class="App__header"
                                                                    >
                                                                                                      <h1>
                                                                                                                                        Countdown for
                                                                                                      </h1>
                                                                                                      <div
                                                                                                                                        class="App__event"
                                                                                                      >
                                                                                                                                        <p>
                                                                                                                                                                          February 25, 2018
                                                                                                                                        </p>
                                                                                                      </div>
                                                                    </header>
                                                                    <section
                                                                                                      class="Clock"
                                                                    >
                                                                                                      <div
                                                                                                                                        class="Clock__days"
                                                                                                      >
                                                                                                                                        0 day
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__hours"
                                                                                                      >
                                                                                                                                        0 hour
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__minutes"
                                                                                                      >
                                                                                                                                        0 minute
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__seconds"
                                                                                                      >
                                                                                                                                        0 second
                                                                                                      </div>
                                                                    </section>
                                                                    <section
                                                                                                      class="Add-Event"
                                                                    >
                                                                                                      <form
                                                                                                                                        class="Add-Event__form"
                                                                                                      >
                                                                                                                                        <input
                                                                                                                                                                          type="text"
                                                                                                                                        />
                                                                                                                                        <button>
                                                                                                                                                                          Send
                                                                                                                                        </button>
                                                                                                      </form>
                                                                    </section>
                                  </div>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "treeBaseTime": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "expirationTime": 1,
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={Object {}}
/>,
                                  },
                                  "tag": 0,
                                },
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={Object {}}
/>,
                                  },
                                  "tag": 0,
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="App"
                                >
                                                                <header
                                                                                                class="App__header"
                                                                >
                                                                                                <h1>
                                                                                                                                Countdown for
                                                                                                </h1>
                                                                                                <div
                                                                                                                                class="App__event"
                                                                                                >
                                                                                                                                <p>
                                                                                                                                                                February 25, 2018
                                                                                                                                </p>
                                                                                                </div>
                                                                </header>
                                                                <section
                                                                                                class="Clock"
                                                                >
                                                                                                <div
                                                                                                                                class="Clock__days"
                                                                                                >
                                                                                                                                0 day
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__hours"
                                                                                                >
                                                                                                                                0 hour
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__minutes"
                                                                                                >
                                                                                                                                0 minute
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__seconds"
                                                                                                >
                                                                                                                                0 second
                                                                                                </div>
                                                                </section>
                                                                <section
                                                                                                class="Add-Event"
                                                                >
                                                                                                <form
                                                                                                                                class="Add-Event__form"
                                                                                                >
                                                                                                                                <input
                                                                                                                                                                type="text"
                                                                                                                                />
                                                                                                                                <button>
                                                                                                                                                                Send
                                                                                                                                </button>
                                                                                                </form>
                                                                </section>
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "treeBaseTime": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "expirationTime": 0,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": null,
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": null,
                            },
                          },
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {},
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {},
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseTime": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {},
                        "memoizedState": Object {
                          "deadline": "February 25, 2018",
                          "newDeadline": "",
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {},
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {},
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": 0,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                                                    class="App"
                                  >
                                                                    <header
                                                                                                      class="App__header"
                                                                    >
                                                                                                      <h1>
                                                                                                                                        Countdown for
                                                                                                      </h1>
                                                                                                      <div
                                                                                                                                        class="App__event"
                                                                                                      >
                                                                                                                                        <p>
                                                                                                                                                                          February 25, 2018
                                                                                                                                        </p>
                                                                                                      </div>
                                                                    </header>
                                                                    <section
                                                                                                      class="Clock"
                                                                    >
                                                                                                      <div
                                                                                                                                        class="Clock__days"
                                                                                                      >
                                                                                                                                        0 day
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__hours"
                                                                                                      >
                                                                                                                                        0 hour
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__minutes"
                                                                                                      >
                                                                                                                                        0 minute
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__seconds"
                                                                                                      >
                                                                                                                                        0 second
                                                                                                      </div>
                                                                    </section>
                                                                    <section
                                                                                                      class="Add-Event"
                                                                    >
                                                                                                      <form
                                                                                                                                        class="Add-Event__form"
                                                                                                      >
                                                                                                                                        <input
                                                                                                                                                                          type="text"
                                                                                                                                        />
                                                                                                                                        <button>
                                                                                                                                                                          Send
                                                                                                                                        </button>
                                                                                                      </form>
                                                                    </section>
                                  </div>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "treeBaseTime": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "expirationTime": 1,
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={Object {}}
/>,
                                  },
                                  "tag": 0,
                                },
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={Object {}}
/>,
                                  },
                                  "tag": 0,
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="App"
                                >
                                                                <header
                                                                                                class="App__header"
                                                                >
                                                                                                <h1>
                                                                                                                                Countdown for
                                                                                                </h1>
                                                                                                <div
                                                                                                                                class="App__event"
                                                                                                >
                                                                                                                                <p>
                                                                                                                                                                February 25, 2018
                                                                                                                                </p>
                                                                                                </div>
                                                                </header>
                                                                <section
                                                                                                class="Clock"
                                                                >
                                                                                                <div
                                                                                                                                class="Clock__days"
                                                                                                >
                                                                                                                                0 day
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__hours"
                                                                                                >
                                                                                                                                0 hour
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__minutes"
                                                                                                >
                                                                                                                                0 minute
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__seconds"
                                                                                                >
                                                                                                                                0 second
                                                                                                </div>
                                                                </section>
                                                                <section
                                                                                                class="Add-Event"
                                                                >
                                                                                                <form
                                                                                                                                class="Add-Event__form"
                                                                                                >
                                                                                                                                <input
                                                                                                                                                                type="text"
                                                                                                                                />
                                                                                                                                <button>
                                                                                                                                                                Send
                                                                                                                                </button>
                                                                                                </form>
                                                                </section>
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "treeBaseTime": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "expirationTime": 0,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": null,
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": null,
                            },
                          },
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {},
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {},
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseTime": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": App {
                          "_handleOnChangeDeadline": [Function],
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "_setNewDeadLine": [Function],
                          "context": Object {},
                          "props": Object {},
                          "refs": Object {},
                          "state": Object {
                            "deadline": "February 25, 2018",
                            "newDeadline": "",
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseTime": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 22,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Countdown for",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "Countdown for",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": FiberNode {
                        "_debugID": 11,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 5,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 4,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {},
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {},
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {},
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": 0,
                              "alternate": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": 0,
                                "alternate": [Circular],
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseTime": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                                                        class="App"
                                    >
                                                                        <header
                                                                                                            class="App__header"
                                                                        >
                                                                                                            <h1>
                                                                                                                                                Countdown for
                                                                                                            </h1>
                                                                                                            <div
                                                                                                                                                class="App__event"
                                                                                                            >
                                                                                                                                                <p>
                                                                                                                                                                                    February 25, 2018
                                                                                                                                                </p>
                                                                                                            </div>
                                                                        </header>
                                                                        <section
                                                                                                            class="Clock"
                                                                        >
                                                                                                            <div
                                                                                                                                                class="Clock__days"
                                                                                                            >
                                                                                                                                                0 day
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__hours"
                                                                                                            >
                                                                                                                                                0 hour
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__minutes"
                                                                                                            >
                                                                                                                                                0 minute
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__seconds"
                                                                                                            >
                                                                                                                                                0 second
                                                                                                            </div>
                                                                        </section>
                                                                        <section
                                                                                                            class="Add-Event"
                                                                        >
                                                                                                            <form
                                                                                                                                                class="Add-Event__form"
                                                                                                            >
                                                                                                                                                <input
                                                                                                                                                                                    type="text"
                                                                                                                                                />
                                                                                                                                                <button>
                                                                                                                                                                                    Send
                                                                                                                                                </button>
                                                                                                            </form>
                                                                        </section>
                                    </div>
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "treeBaseTime": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "expirationTime": 1,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={Object {}}
/>,
                                    },
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={Object {}}
/>,
                                    },
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                                                    class="App"
                                  >
                                                                    <header
                                                                                                      class="App__header"
                                                                    >
                                                                                                      <h1>
                                                                                                                                        Countdown for
                                                                                                      </h1>
                                                                                                      <div
                                                                                                                                        class="App__event"
                                                                                                      >
                                                                                                                                        <p>
                                                                                                                                                                          February 25, 2018
                                                                                                                                        </p>
                                                                                                      </div>
                                                                    </header>
                                                                    <section
                                                                                                      class="Clock"
                                                                    >
                                                                                                      <div
                                                                                                                                        class="Clock__days"
                                                                                                      >
                                                                                                                                        0 day
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__hours"
                                                                                                      >
                                                                                                                                        0 hour
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__minutes"
                                                                                                      >
                                                                                                                                        0 minute
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__seconds"
                                                                                                      >
                                                                                                                                        0 second
                                                                                                      </div>
                                                                    </section>
                                                                    <section
                                                                                                      class="Add-Event"
                                                                    >
                                                                                                      <form
                                                                                                                                        class="Add-Event__form"
                                                                                                      >
                                                                                                                                        <input
                                                                                                                                                                          type="text"
                                                                                                                                        />
                                                                                                                                        <button>
                                                                                                                                                                          Send
                                                                                                                                        </button>
                                                                                                      </form>
                                                                    </section>
                                  </div>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "treeBaseTime": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "expirationTime": 0,
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {},
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {},
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseTime": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {},
                          "memoizedState": Object {
                            "deadline": "February 25, 2018",
                            "newDeadline": "",
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {},
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 4,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {},
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {},
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {},
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": 0,
                              "alternate": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": 0,
                                "alternate": [Circular],
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseTime": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                                                        class="App"
                                    >
                                                                        <header
                                                                                                            class="App__header"
                                                                        >
                                                                                                            <h1>
                                                                                                                                                Countdown for
                                                                                                            </h1>
                                                                                                            <div
                                                                                                                                                class="App__event"
                                                                                                            >
                                                                                                                                                <p>
                                                                                                                                                                                    February 25, 2018
                                                                                                                                                </p>
                                                                                                            </div>
                                                                        </header>
                                                                        <section
                                                                                                            class="Clock"
                                                                        >
                                                                                                            <div
                                                                                                                                                class="Clock__days"
                                                                                                            >
                                                                                                                                                0 day
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__hours"
                                                                                                            >
                                                                                                                                                0 hour
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__minutes"
                                                                                                            >
                                                                                                                                                0 minute
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__seconds"
                                                                                                            >
                                                                                                                                                0 second
                                                                                                            </div>
                                                                        </section>
                                                                        <section
                                                                                                            class="Add-Event"
                                                                        >
                                                                                                            <form
                                                                                                                                                class="Add-Event__form"
                                                                                                            >
                                                                                                                                                <input
                                                                                                                                                                                    type="text"
                                                                                                                                                />
                                                                                                                                                <button>
                                                                                                                                                                                    Send
                                                                                                                                                </button>
                                                                                                            </form>
                                                                        </section>
                                    </div>
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "treeBaseTime": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "expirationTime": 1,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={Object {}}
/>,
                                    },
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={Object {}}
/>,
                                    },
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                                                    class="App"
                                  >
                                                                    <header
                                                                                                      class="App__header"
                                                                    >
                                                                                                      <h1>
                                                                                                                                        Countdown for
                                                                                                      </h1>
                                                                                                      <div
                                                                                                                                        class="App__event"
                                                                                                      >
                                                                                                                                        <p>
                                                                                                                                                                          February 25, 2018
                                                                                                                                        </p>
                                                                                                      </div>
                                                                    </header>
                                                                    <section
                                                                                                      class="Clock"
                                                                    >
                                                                                                      <div
                                                                                                                                        class="Clock__days"
                                                                                                      >
                                                                                                                                        0 day
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__hours"
                                                                                                      >
                                                                                                                                        0 hour
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__minutes"
                                                                                                      >
                                                                                                                                        0 minute
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__seconds"
                                                                                                      >
                                                                                                                                        0 second
                                                                                                      </div>
                                                                    </section>
                                                                    <section
                                                                                                      class="Add-Event"
                                                                    >
                                                                                                      <form
                                                                                                                                        class="Add-Event__form"
                                                                                                      >
                                                                                                                                        <input
                                                                                                                                                                          type="text"
                                                                                                                                        />
                                                                                                                                        <button>
                                                                                                                                                                          Send
                                                                                                                                        </button>
                                                                                                      </form>
                                                                    </section>
                                  </div>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "treeBaseTime": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "expirationTime": 0,
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {},
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {},
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseTime": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": App {
                            "_handleOnChangeDeadline": [Function],
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "_setNewDeadLine": [Function],
                            "context": Object {},
                            "props": Object {},
                            "refs": Object {},
                            "state": Object {
                              "deadline": "February 25, 2018",
                              "newDeadline": "",
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseTime": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                          "lineNumber": 23,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 12,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 5,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": FiberNode {
                              "_debugID": 4,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": 0,
                              "alternate": null,
                              "child": [Circular],
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {},
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {},
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {},
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": 0,
                                "alternate": FiberNode {
                                  "_debugID": 1,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": 0,
                                  "alternate": [Circular],
                                  "child": null,
                                  "effectTag": 0,
                                  "expirationTime": 1,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseTime": 0,
                                  "sibling": null,
                                  "stateNode": Object {
                                    "containerInfo": <div>
                                      <div
                                                                            class="App"
                                      >
                                                                            <header
                                                                                                                  class="App__header"
                                                                            >
                                                                                                                  <h1>
                                                                                                                                                        Countdown for
                                                                                                                  </h1>
                                                                                                                  <div
                                                                                                                                                        class="App__event"
                                                                                                                  >
                                                                                                                                                        <p>
                                                                                                                                                                                              February 25, 2018
                                                                                                                                                        </p>
                                                                                                                  </div>
                                                                            </header>
                                                                            <section
                                                                                                                  class="Clock"
                                                                            >
                                                                                                                  <div
                                                                                                                                                        class="Clock__days"
                                                                                                                  >
                                                                                                                                                        0 day
                                                                                                                  </div>
                                                                                                                  <div
                                                                                                                                                        class="Clock__hours"
                                                                                                                  >
                                                                                                                                                        0 hour
                                                                                                                  </div>
                                                                                                                  <div
                                                                                                                                                        class="Clock__minutes"
                                                                                                                  >
                                                                                                                                                        0 minute
                                                                                                                  </div>
                                                                                                                  <div
                                                                                                                                                        class="Clock__seconds"
                                                                                                                  >
                                                                                                                                                        0 second
                                                                                                                  </div>
                                                                            </section>
                                                                            <section
                                                                                                                  class="Add-Event"
                                                                            >
                                                                                                                  <form
                                                                                                                                                        class="Add-Event__form"
                                                                                                                  >
                                                                                                                                                        <input
                                                                                                                                                                                              type="text"
                                                                                                                                                        />
                                                                                                                                                        <button>
                                                                                                                                                                                              Send
                                                                                                                                                        </button>
                                                                                                                  </form>
                                                                            </section>
                                      </div>
</div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "earliestPendingTime": 0,
                                    "earliestSuspendedTime": 0,
                                    "finishedWork": null,
                                    "firstBatch": null,
                                    "hydrate": false,
                                    "latestPendingTime": 0,
                                    "latestPingedTime": 0,
                                    "latestSuspendedTime": 0,
                                    "nextScheduledRoot": null,
                                    "pendingChildren": null,
                                    "pendingCommitExpirationTime": 0,
                                    "pendingContext": null,
                                    "remainingExpirationTime": 0,
                                  },
                                  "tag": 3,
                                  "treeBaseTime": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "expirationTime": 1,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={Object {}}
/>,
                                      },
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={Object {}}
/>,
                                      },
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "effectTag": 32,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseTime": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                                                        class="App"
                                    >
                                                                        <header
                                                                                                            class="App__header"
                                                                        >
                                                                                                            <h1>
                                                                                                                                                Countdown for
                                                                                                            </h1>
                                                                                                            <div
                                                                                                                                                class="App__event"
                                                                                                            >
                                                                                                                                                <p>
                                                                                                                                                                                    February 25, 2018
                                                                                                                                                </p>
                                                                                                            </div>
                                                                        </header>
                                                                        <section
                                                                                                            class="Clock"
                                                                        >
                                                                                                            <div
                                                                                                                                                class="Clock__days"
                                                                                                            >
                                                                                                                                                0 day
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__hours"
                                                                                                            >
                                                                                                                                                0 hour
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__minutes"
                                                                                                            >
                                                                                                                                                0 minute
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__seconds"
                                                                                                            >
                                                                                                                                                0 second
                                                                                                            </div>
                                                                        </section>
                                                                        <section
                                                                                                            class="Add-Event"
                                                                        >
                                                                                                            <form
                                                                                                                                                class="Add-Event__form"
                                                                                                            >
                                                                                                                                                <input
                                                                                                                                                                                    type="text"
                                                                                                                                                />
                                                                                                                                                <button>
                                                                                                                                                                                    Send
                                                                                                                                                </button>
                                                                                                            </form>
                                                                        </section>
                                    </div>
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "treeBaseTime": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={Object {}}
/>,
                                  },
                                  "expirationTime": 0,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {},
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {},
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 2,
                              "treeBaseTime": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {},
                            "memoizedState": Object {
                              "deadline": "February 25, 2018",
                              "newDeadline": "",
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {},
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 4,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": 0,
                              "alternate": null,
                              "child": [Circular],
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {},
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {},
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {},
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": 0,
                                "alternate": FiberNode {
                                  "_debugID": 1,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": 0,
                                  "alternate": [Circular],
                                  "child": null,
                                  "effectTag": 0,
                                  "expirationTime": 1,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseTime": 0,
                                  "sibling": null,
                                  "stateNode": Object {
                                    "containerInfo": <div>
                                      <div
                                                                            class="App"
                                      >
                                                                            <header
                                                                                                                  class="App__header"
                                                                            >
                                                                                                                  <h1>
                                                                                                                                                        Countdown for
                                                                                                                  </h1>
                                                                                                                  <div
                                                                                                                                                        class="App__event"
                                                                                                                  >
                                                                                                                                                        <p>
                                                                                                                                                                                              February 25, 2018
                                                                                                                                                        </p>
                                                                                                                  </div>
                                                                            </header>
                                                                            <section
                                                                                                                  class="Clock"
                                                                            >
                                                                                                                  <div
                                                                                                                                                        class="Clock__days"
                                                                                                                  >
                                                                                                                                                        0 day
                                                                                                                  </div>
                                                                                                                  <div
                                                                                                                                                        class="Clock__hours"
                                                                                                                  >
                                                                                                                                                        0 hour
                                                                                                                  </div>
                                                                                                                  <div
                                                                                                                                                        class="Clock__minutes"
                                                                                                                  >
                                                                                                                                                        0 minute
                                                                                                                  </div>
                                                                                                                  <div
                                                                                                                                                        class="Clock__seconds"
                                                                                                                  >
                                                                                                                                                        0 second
                                                                                                                  </div>
                                                                            </section>
                                                                            <section
                                                                                                                  class="Add-Event"
                                                                            >
                                                                                                                  <form
                                                                                                                                                        class="Add-Event__form"
                                                                                                                  >
                                                                                                                                                        <input
                                                                                                                                                                                              type="text"
                                                                                                                                                        />
                                                                                                                                                        <button>
                                                                                                                                                                                              Send
                                                                                                                                                        </button>
                                                                                                                  </form>
                                                                            </section>
                                      </div>
</div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "earliestPendingTime": 0,
                                    "earliestSuspendedTime": 0,
                                    "finishedWork": null,
                                    "firstBatch": null,
                                    "hydrate": false,
                                    "latestPendingTime": 0,
                                    "latestPingedTime": 0,
                                    "latestSuspendedTime": 0,
                                    "nextScheduledRoot": null,
                                    "pendingChildren": null,
                                    "pendingCommitExpirationTime": 0,
                                    "pendingContext": null,
                                    "remainingExpirationTime": 0,
                                  },
                                  "tag": 3,
                                  "treeBaseTime": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "expirationTime": 1,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={Object {}}
/>,
                                      },
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={Object {}}
/>,
                                      },
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "effectTag": 32,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseTime": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                                                        class="App"
                                    >
                                                                        <header
                                                                                                            class="App__header"
                                                                        >
                                                                                                            <h1>
                                                                                                                                                Countdown for
                                                                                                            </h1>
                                                                                                            <div
                                                                                                                                                class="App__event"
                                                                                                            >
                                                                                                                                                <p>
                                                                                                                                                                                    February 25, 2018
                                                                                                                                                </p>
                                                                                                            </div>
                                                                        </header>
                                                                        <section
                                                                                                            class="Clock"
                                                                        >
                                                                                                            <div
                                                                                                                                                class="Clock__days"
                                                                                                            >
                                                                                                                                                0 day
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__hours"
                                                                                                            >
                                                                                                                                                0 hour
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__minutes"
                                                                                                            >
                                                                                                                                                0 minute
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__seconds"
                                                                                                            >
                                                                                                                                                0 second
                                                                                                            </div>
                                                                        </section>
                                                                        <section
                                                                                                            class="Add-Event"
                                                                        >
                                                                                                            <form
                                                                                                                                                class="Add-Event__form"
                                                                                                            >
                                                                                                                                                <input
                                                                                                                                                                                    type="text"
                                                                                                                                                />
                                                                                                                                                <button>
                                                                                                                                                                                    Send
                                                                                                                                                </button>
                                                                                                            </form>
                                                                        </section>
                                    </div>
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "treeBaseTime": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={Object {}}
/>,
                                  },
                                  "expirationTime": 0,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {},
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {},
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 2,
                              "treeBaseTime": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": App {
                              "_handleOnChangeDeadline": [Function],
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "_setNewDeadLine": [Function],
                              "context": Object {},
                              "props": Object {},
                              "refs": Object {},
                              "state": Object {
                                "deadline": "February 25, 2018",
                                "newDeadline": "",
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseTime": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": Object {
                            "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                            "lineNumber": 24,
                          },
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "February 25, 2018",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "February 25, 2018",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": <p>
                            February 25, 2018
</p>,
                          "tag": 5,
                          "treeBaseTime": 0,
                          "type": "p",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <p>
                            February 25, 2018
</p>,
                          "className": "App__event",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <p>
                            February 25, 2018
</p>,
                          "className": "App__event",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="App__event"
>
                          <p>
                                                    February 25, 2018
                          </p>
</div>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <h1>
                        Countdown for
</h1>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "h1",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <h1>
                          Countdown for
</h1>,
                        <div
                          className="App__event"
>
                          <p>
                                                    February 25, 2018
                          </p>
</div>,
                      ],
                      "className": "App__header",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <h1>
                          Countdown for
</h1>,
                        <div
                          className="App__event"
>
                          <p>
                                                    February 25, 2018
                          </p>
</div>,
                      ],
                      "className": "App__header",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": [Circular],
                    "stateNode": <header
                      class="App__header"
>
                      <h1>
                                            Countdown for
                      </h1>
                      <div
                                            class="App__event"
                      >
                                            <p>
                                                                  February 25, 2018
                                            </p>
                      </div>
</header>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "header",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": Array [
                      <header
                        className="App__header"
>
                        <h1>
                                                Countdown for
                        </h1>
                        <div
                                                className="App__event"
                        >
                                                <p>
                                                                        February 25, 2018
                                                </p>
                        </div>
</header>,
                      <Clock
                        deadline="February 25, 2018"
/>,
                      <section
                        className="Add-Event"
>
                        <form
                                                className="Add-Event__form"
                        >
                                                <input
                                                                        onChange={[Function]}
                                                                        type="text"
                                                />
                                                <button
                                                                        onClick={[Function]}
                                                >
                                                                        Send
                                                </button>
                        </form>
</section>,
                    ],
                    "className": "App",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <header
                        className="App__header"
>
                        <h1>
                                                Countdown for
                        </h1>
                        <div
                                                className="App__event"
                        >
                                                <p>
                                                                        February 25, 2018
                                                </p>
                        </div>
</header>,
                      <Clock
                        deadline="February 25, 2018"
/>,
                      <section
                        className="Add-Event"
>
                        <form
                                                className="Add-Event__form"
                        >
                                                <input
                                                                        onChange={[Function]}
                                                                        type="text"
                                                />
                                                <button
                                                                        onClick={[Function]}
                                                >
                                                                        Send
                                                </button>
                        </form>
</section>,
                    ],
                    "className": "App",
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 5,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="App"
                              >
                                                            <header
                                                                                          class="App__header"
                                                            >
                                                                                          <h1>
                                                                                                                        Countdown for
                                                                                          </h1>
                                                                                          <div
                                                                                                                        class="App__event"
                                                                                          >
                                                                                                                        <p>
                                                                                                                                                      February 25, 2018
                                                                                                                        </p>
                                                                                          </div>
                                                            </header>
                                                            <section
                                                                                          class="Clock"
                                                            >
                                                                                          <div
                                                                                                                        class="Clock__days"
                                                                                          >
                                                                                                                        0 day
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__hours"
                                                                                          >
                                                                                                                        0 hour
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__minutes"
                                                                                          >
                                                                                                                        0 minute
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__seconds"
                                                                                          >
                                                                                                                        0 second
                                                                                          </div>
                                                            </section>
                                                            <section
                                                                                          class="Add-Event"
                                                            >
                                                                                          <form
                                                                                                                        class="Add-Event__form"
                                                                                          >
                                                                                                                        <input
                                                                                                                                                      type="text"
                                                                                                                        />
                                                                                                                        <button>
                                                                                                                                                      Send
                                                                                                                        </button>
                                                                                          </form>
                                                            </section>
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "treeBaseTime": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "expirationTime": 1,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "tag": 0,
                            },
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "tag": 0,
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={Object {}}
/>,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                                                        class="App"
                            >
                                                        <header
                                                                                    class="App__header"
                                                        >
                                                                                    <h1>
                                                                                                                Countdown for
                                                                                    </h1>
                                                                                    <div
                                                                                                                class="App__event"
                                                                                    >
                                                                                                                <p>
                                                                                                                                            February 25, 2018
                                                                                                                </p>
                                                                                    </div>
                                                        </header>
                                                        <section
                                                                                    class="Clock"
                                                        >
                                                                                    <div
                                                                                                                class="Clock__days"
                                                                                    >
                                                                                                                0 day
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__hours"
                                                                                    >
                                                                                                                0 hour
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__minutes"
                                                                                    >
                                                                                                                0 minute
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__seconds"
                                                                                    >
                                                                                                                0 second
                                                                                    </div>
                                                        </section>
                                                        <section
                                                                                    class="Add-Event"
                                                        >
                                                                                    <form
                                                                                                                class="Add-Event__form"
                                                                                    >
                                                                                                                <input
                                                                                                                                            type="text"
                                                                                                                />
                                                                                                                <button>
                                                                                                                                            Send
                                                                                                                </button>
                                                                                    </form>
                                                        </section>
                            </div>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "treeBaseTime": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
/>,
                          },
                          "expirationTime": 0,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": null,
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": null,
                        },
                      },
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseTime": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {},
                    "memoizedState": Object {
                      "deadline": "February 25, 2018",
                      "newDeadline": "",
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {},
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="App"
                              >
                                                            <header
                                                                                          class="App__header"
                                                            >
                                                                                          <h1>
                                                                                                                        Countdown for
                                                                                          </h1>
                                                                                          <div
                                                                                                                        class="App__event"
                                                                                          >
                                                                                                                        <p>
                                                                                                                                                      February 25, 2018
                                                                                                                        </p>
                                                                                          </div>
                                                            </header>
                                                            <section
                                                                                          class="Clock"
                                                            >
                                                                                          <div
                                                                                                                        class="Clock__days"
                                                                                          >
                                                                                                                        0 day
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__hours"
                                                                                          >
                                                                                                                        0 hour
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__minutes"
                                                                                          >
                                                                                                                        0 minute
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__seconds"
                                                                                          >
                                                                                                                        0 second
                                                                                          </div>
                                                            </section>
                                                            <section
                                                                                          class="Add-Event"
                                                            >
                                                                                          <form
                                                                                                                        class="Add-Event__form"
                                                                                          >
                                                                                                                        <input
                                                                                                                                                      type="text"
                                                                                                                        />
                                                                                                                        <button>
                                                                                                                                                      Send
                                                                                                                        </button>
                                                                                          </form>
                                                            </section>
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "treeBaseTime": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "expirationTime": 1,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "tag": 0,
                            },
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "tag": 0,
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={Object {}}
/>,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                                                        class="App"
                            >
                                                        <header
                                                                                    class="App__header"
                                                        >
                                                                                    <h1>
                                                                                                                Countdown for
                                                                                    </h1>
                                                                                    <div
                                                                                                                class="App__event"
                                                                                    >
                                                                                                                <p>
                                                                                                                                            February 25, 2018
                                                                                                                </p>
                                                                                    </div>
                                                        </header>
                                                        <section
                                                                                    class="Clock"
                                                        >
                                                                                    <div
                                                                                                                class="Clock__days"
                                                                                    >
                                                                                                                0 day
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__hours"
                                                                                    >
                                                                                                                0 hour
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__minutes"
                                                                                    >
                                                                                                                0 minute
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__seconds"
                                                                                    >
                                                                                                                0 second
                                                                                    </div>
                                                        </section>
                                                        <section
                                                                                    class="Add-Event"
                                                        >
                                                                                    <form
                                                                                                                class="Add-Event__form"
                                                                                    >
                                                                                                                <input
                                                                                                                                            type="text"
                                                                                                                />
                                                                                                                <button>
                                                                                                                                            Send
                                                                                                                </button>
                                                                                    </form>
                                                        </section>
                            </div>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "treeBaseTime": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
/>,
                          },
                          "expirationTime": 0,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": null,
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": null,
                        },
                      },
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseTime": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": App {
                      "_handleOnChangeDeadline": [Function],
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "_setNewDeadLine": [Function],
                      "context": Object {},
                      "props": Object {},
                      "refs": Object {},
                      "state": Object {
                        "deadline": "February 25, 2018",
                        "newDeadline": "",
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseTime": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="App"
>
                    <header
                                        class="App__header"
                    >
                                        <h1>
                                                            Countdown for
                                        </h1>
                                        <div
                                                            class="App__event"
                                        >
                                                            <p>
                                                                                February 25, 2018
                                                            </p>
                                        </div>
                    </header>
                    <section
                                        class="Clock"
                    >
                                        <div
                                                            class="Clock__days"
                                        >
                                                            0 day
                                        </div>
                                        <div
                                                            class="Clock__hours"
                                        >
                                                            0 hour
                                        </div>
                                        <div
                                                            class="Clock__minutes"
                                        >
                                                            0 minute
                                        </div>
                                        <div
                                                            class="Clock__seconds"
                                        >
                                                            0 second
                                        </div>
                    </section>
                    <section
                                        class="Add-Event"
                    >
                                        <form
                                                            class="Add-Event__form"
                                        >
                                                            <input
                                                                                type="text"
                                                            />
                                                            <button>
                                                                                Send
                                                            </button>
                                        </form>
                    </section>
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 5,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="App"
                              >
                                                            <header
                                                                                          class="App__header"
                                                            >
                                                                                          <h1>
                                                                                                                        Countdown for
                                                                                          </h1>
                                                                                          <div
                                                                                                                        class="App__event"
                                                                                          >
                                                                                                                        <p>
                                                                                                                                                      February 25, 2018
                                                                                                                        </p>
                                                                                          </div>
                                                            </header>
                                                            <section
                                                                                          class="Clock"
                                                            >
                                                                                          <div
                                                                                                                        class="Clock__days"
                                                                                          >
                                                                                                                        0 day
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__hours"
                                                                                          >
                                                                                                                        0 hour
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__minutes"
                                                                                          >
                                                                                                                        0 minute
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__seconds"
                                                                                          >
                                                                                                                        0 second
                                                                                          </div>
                                                            </section>
                                                            <section
                                                                                          class="Add-Event"
                                                            >
                                                                                          <form
                                                                                                                        class="Add-Event__form"
                                                                                          >
                                                                                                                        <input
                                                                                                                                                      type="text"
                                                                                                                        />
                                                                                                                        <button>
                                                                                                                                                      Send
                                                                                                                        </button>
                                                                                          </form>
                                                            </section>
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "treeBaseTime": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "expirationTime": 1,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "tag": 0,
                            },
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "tag": 0,
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={Object {}}
/>,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                                                        class="App"
                            >
                                                        <header
                                                                                    class="App__header"
                                                        >
                                                                                    <h1>
                                                                                                                Countdown for
                                                                                    </h1>
                                                                                    <div
                                                                                                                class="App__event"
                                                                                    >
                                                                                                                <p>
                                                                                                                                            February 25, 2018
                                                                                                                </p>
                                                                                    </div>
                                                        </header>
                                                        <section
                                                                                    class="Clock"
                                                        >
                                                                                    <div
                                                                                                                class="Clock__days"
                                                                                    >
                                                                                                                0 day
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__hours"
                                                                                    >
                                                                                                                0 hour
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__minutes"
                                                                                    >
                                                                                                                0 minute
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__seconds"
                                                                                    >
                                                                                                                0 second
                                                                                    </div>
                                                        </section>
                                                        <section
                                                                                    class="Add-Event"
                                                        >
                                                                                    <form
                                                                                                                class="Add-Event__form"
                                                                                    >
                                                                                                                <input
                                                                                                                                            type="text"
                                                                                                                />
                                                                                                                <button>
                                                                                                                                            Send
                                                                                                                </button>
                                                                                    </form>
                                                        </section>
                            </div>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "treeBaseTime": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
/>,
                          },
                          "expirationTime": 0,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": null,
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": null,
                        },
                      },
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseTime": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 6,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 20,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 7,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                          "lineNumber": 21,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 10,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                            "lineNumber": 22,
                          },
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Countdown for",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "Countdown for",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseTime": 0,
                          "sibling": FiberNode {
                            "_debugID": 11,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                              "lineNumber": 23,
                            },
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 12,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                                "lineNumber": 24,
                              },
                              "actualDuration": 0,
                              "actualStartTime": 0,
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "February 25, 2018",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "February 25, 2018",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": <p>
                                February 25, 2018
</p>,
                              "tag": 5,
                              "treeBaseTime": 0,
                              "type": "p",
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": <p>
                                February 25, 2018
</p>,
                              "className": "App__event",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <p>
                                February 25, 2018
</p>,
                              "className": "App__event",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": <div
                              class="App__event"
>
                              <p>
                                                            February 25, 2018
                              </p>
</div>,
                            "tag": 5,
                            "treeBaseTime": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "stateNode": <h1>
                            Countdown for
</h1>,
                          "tag": 5,
                          "treeBaseTime": 0,
                          "type": "h1",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <h1>
                              Countdown for
</h1>,
                            <div
                              className="App__event"
>
                              <p>
                                                            February 25, 2018
                              </p>
</div>,
                          ],
                          "className": "App__header",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <h1>
                              Countdown for
</h1>,
                            <div
                              className="App__event"
>
                              <p>
                                                            February 25, 2018
                              </p>
</div>,
                          ],
                          "className": "App__header",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": [Circular],
                        "stateNode": <header
                          class="App__header"
>
                          <h1>
                                                    Countdown for
                          </h1>
                          <div
                                                    class="App__event"
                          >
                                                    <p>
                                                                              February 25, 2018
                                                    </p>
                          </div>
</header>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "header",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": Array [
                          <header
                            className="App__header"
>
                            <h1>
                                                        Countdown for
                            </h1>
                            <div
                                                        className="App__event"
                            >
                                                        <p>
                                                                                    February 25, 2018
                                                        </p>
                            </div>
</header>,
                          <Clock
                            deadline="February 25, 2018"
/>,
                          <section
                            className="Add-Event"
>
                            <form
                                                        className="Add-Event__form"
                            >
                                                        <input
                                                                                    onChange={[Function]}
                                                                                    type="text"
                                                        />
                                                        <button
                                                                                    onClick={[Function]}
                                                        >
                                                                                    Send
                                                        </button>
                            </form>
</section>,
                        ],
                        "className": "App",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <header
                            className="App__header"
>
                            <h1>
                                                        Countdown for
                            </h1>
                            <div
                                                        className="App__event"
                            >
                                                        <p>
                                                                                    February 25, 2018
                                                        </p>
                            </div>
</header>,
                          <Clock
                            deadline="February 25, 2018"
/>,
                          <section
                            className="Add-Event"
>
                            <form
                                                        className="Add-Event__form"
                            >
                                                        <input
                                                                                    onChange={[Function]}
                                                                                    type="text"
                                                        />
                                                        <button
                                                                                    onClick={[Function]}
                                                        >
                                                                                    Send
                                                        </button>
                            </form>
</section>,
                        ],
                        "className": "App",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="App"
>
                        <header
                                                class="App__header"
                        >
                                                <h1>
                                                                        Countdown for
                                                </h1>
                                                <div
                                                                        class="App__event"
                                                >
                                                                        <p>
                                                                                                February 25, 2018
                                                                        </p>
                                                </div>
                        </header>
                        <section
                                                class="Clock"
                        >
                                                <div
                                                                        class="Clock__days"
                                                >
                                                                        0 day
                                                </div>
                                                <div
                                                                        class="Clock__hours"
                                                >
                                                                        0 hour
                                                </div>
                                                <div
                                                                        class="Clock__minutes"
                                                >
                                                                        0 minute
                                                </div>
                                                <div
                                                                        class="Clock__seconds"
                                                >
                                                                        0 second
                                                </div>
                        </section>
                        <section
                                                class="Add-Event"
                        >
                                                <form
                                                                        class="Add-Event__form"
                                                >
                                                                        <input
                                                                                                type="text"
                                                                        />
                                                                        <button>
                                                                                                Send
                                                                        </button>
                                                </form>
                        </section>
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {},
                    "memoizedState": Object {
                      "deadline": "February 25, 2018",
                      "newDeadline": "",
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {},
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="App"
                              >
                                                            <header
                                                                                          class="App__header"
                                                            >
                                                                                          <h1>
                                                                                                                        Countdown for
                                                                                          </h1>
                                                                                          <div
                                                                                                                        class="App__event"
                                                                                          >
                                                                                                                        <p>
                                                                                                                                                      February 25, 2018
                                                                                                                        </p>
                                                                                          </div>
                                                            </header>
                                                            <section
                                                                                          class="Clock"
                                                            >
                                                                                          <div
                                                                                                                        class="Clock__days"
                                                                                          >
                                                                                                                        0 day
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__hours"
                                                                                          >
                                                                                                                        0 hour
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__minutes"
                                                                                          >
                                                                                                                        0 minute
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__seconds"
                                                                                          >
                                                                                                                        0 second
                                                                                          </div>
                                                            </section>
                                                            <section
                                                                                          class="Add-Event"
                                                            >
                                                                                          <form
                                                                                                                        class="Add-Event__form"
                                                                                          >
                                                                                                                        <input
                                                                                                                                                      type="text"
                                                                                                                        />
                                                                                                                        <button>
                                                                                                                                                      Send
                                                                                                                        </button>
                                                                                          </form>
                                                            </section>
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "treeBaseTime": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "expirationTime": 1,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "tag": 0,
                            },
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "tag": 0,
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={Object {}}
/>,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                                                        class="App"
                            >
                                                        <header
                                                                                    class="App__header"
                                                        >
                                                                                    <h1>
                                                                                                                Countdown for
                                                                                    </h1>
                                                                                    <div
                                                                                                                class="App__event"
                                                                                    >
                                                                                                                <p>
                                                                                                                                            February 25, 2018
                                                                                                                </p>
                                                                                    </div>
                                                        </header>
                                                        <section
                                                                                    class="Clock"
                                                        >
                                                                                    <div
                                                                                                                class="Clock__days"
                                                                                    >
                                                                                                                0 day
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__hours"
                                                                                    >
                                                                                                                0 hour
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__minutes"
                                                                                    >
                                                                                                                0 minute
                                                                                    </div>
                                                                                    <div
                                                                                                                class="Clock__seconds"
                                                                                    >
                                                                                                                0 second
                                                                                    </div>
                                                        </section>
                                                        <section
                                                                                    class="Add-Event"
                                                        >
                                                                                    <form
                                                                                                                class="Add-Event__form"
                                                                                    >
                                                                                                                <input
                                                                                                                                            type="text"
                                                                                                                />
                                                                                                                <button>
                                                                                                                                            Send
                                                                                                                </button>
                                                                                    </form>
                                                        </section>
                            </div>
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "treeBaseTime": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
/>,
                          },
                          "expirationTime": 0,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": null,
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": null,
                        },
                      },
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseTime": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": App {
                      "_handleOnChangeDeadline": [Function],
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "_setNewDeadLine": [Function],
                      "context": Object {},
                      "props": Object {},
                      "refs": Object {},
                      "state": Object {
                        "deadline": "February 25, 2018",
                        "newDeadline": "",
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseTime": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": Object {
                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                    "lineNumber": 28,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 18,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 5,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="App"
                                >
                                                                <header
                                                                                                class="App__header"
                                                                >
                                                                                                <h1>
                                                                                                                                Countdown for
                                                                                                </h1>
                                                                                                <div
                                                                                                                                class="App__event"
                                                                                                >
                                                                                                                                <p>
                                                                                                                                                                February 25, 2018
                                                                                                                                </p>
                                                                                                </div>
                                                                </header>
                                                                <section
                                                                                                class="Clock"
                                                                >
                                                                                                <div
                                                                                                                                class="Clock__days"
                                                                                                >
                                                                                                                                0 day
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__hours"
                                                                                                >
                                                                                                                                0 hour
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__minutes"
                                                                                                >
                                                                                                                                0 minute
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__seconds"
                                                                                                >
                                                                                                                                0 second
                                                                                                </div>
                                                                </section>
                                                                <section
                                                                                                class="Add-Event"
                                                                >
                                                                                                <form
                                                                                                                                class="Add-Event__form"
                                                                                                >
                                                                                                                                <input
                                                                                                                                                                type="text"
                                                                                                                                />
                                                                                                                                <button>
                                                                                                                                                                Send
                                                                                                                                </button>
                                                                                                </form>
                                                                </section>
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "treeBaseTime": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "expirationTime": 1,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "tag": 0,
                              },
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "tag": 0,
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="App"
                              >
                                                            <header
                                                                                          class="App__header"
                                                            >
                                                                                          <h1>
                                                                                                                        Countdown for
                                                                                          </h1>
                                                                                          <div
                                                                                                                        class="App__event"
                                                                                          >
                                                                                                                        <p>
                                                                                                                                                      February 25, 2018
                                                                                                                        </p>
                                                                                          </div>
                                                            </header>
                                                            <section
                                                                                          class="Clock"
                                                            >
                                                                                          <div
                                                                                                                        class="Clock__days"
                                                                                          >
                                                                                                                        0 day
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__hours"
                                                                                          >
                                                                                                                        0 hour
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__minutes"
                                                                                          >
                                                                                                                        0 minute
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__seconds"
                                                                                          >
                                                                                                                        0 second
                                                                                          </div>
                                                            </section>
                                                            <section
                                                                                          class="Add-Event"
                                                            >
                                                                                          <form
                                                                                                                        class="Add-Event__form"
                                                                                          >
                                                                                                                        <input
                                                                                                                                                      type="text"
                                                                                                                        />
                                                                                                                        <button>
                                                                                                                                                      Send
                                                                                                                        </button>
                                                                                          </form>
                                                            </section>
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "treeBaseTime": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "expirationTime": 0,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": null,
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": null,
                          },
                        },
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {},
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseTime": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 6,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                          "lineNumber": 20,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 7,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                            "lineNumber": 21,
                          },
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 10,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                              "lineNumber": 22,
                            },
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Countdown for",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "Countdown for",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseTime": 0,
                            "sibling": FiberNode {
                              "_debugID": 11,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                                "lineNumber": 23,
                              },
                              "actualDuration": 0,
                              "actualStartTime": 0,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 12,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                                  "lineNumber": 24,
                                },
                                "actualDuration": 0,
                                "actualStartTime": 0,
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "February 25, 2018",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": "February 25, 2018",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseTime": 0,
                                "sibling": null,
                                "stateNode": <p>
                                  February 25, 2018
</p>,
                                "tag": 5,
                                "treeBaseTime": 0,
                                "type": "p",
                                "updateQueue": null,
                              },
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 1,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": <p>
                                  February 25, 2018
</p>,
                                "className": "App__event",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": <p>
                                  February 25, 2018
</p>,
                                "className": "App__event",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": <div
                                class="App__event"
>
                                <p>
                                                                February 25, 2018
                                </p>
</div>,
                              "tag": 5,
                              "treeBaseTime": 0,
                              "type": "div",
                              "updateQueue": null,
                            },
                            "stateNode": <h1>
                              Countdown for
</h1>,
                            "tag": 5,
                            "treeBaseTime": 0,
                            "type": "h1",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <h1>
                                Countdown for
</h1>,
                              <div
                                className="App__event"
>
                                <p>
                                                                February 25, 2018
                                </p>
</div>,
                            ],
                            "className": "App__header",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <h1>
                                Countdown for
</h1>,
                              <div
                                className="App__event"
>
                                <p>
                                                                February 25, 2018
                                </p>
</div>,
                            ],
                            "className": "App__header",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseTime": 0,
                          "sibling": [Circular],
                          "stateNode": <header
                            class="App__header"
>
                            <h1>
                                                        Countdown for
                            </h1>
                            <div
                                                        class="App__event"
                            >
                                                        <p>
                                                                                    February 25, 2018
                                                        </p>
                            </div>
</header>,
                          "tag": 5,
                          "treeBaseTime": 0,
                          "type": "header",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": Array [
                            <header
                              className="App__header"
>
                              <h1>
                                                            Countdown for
                              </h1>
                              <div
                                                            className="App__event"
                              >
                                                            <p>
                                                                                          February 25, 2018
                                                            </p>
                              </div>
</header>,
                            <Clock
                              deadline="February 25, 2018"
/>,
                            <section
                              className="Add-Event"
>
                              <form
                                                            className="Add-Event__form"
                              >
                                                            <input
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                            />
                                                            <button
                                                                                          onClick={[Function]}
                                                            >
                                                                                          Send
                                                            </button>
                              </form>
</section>,
                          ],
                          "className": "App",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <header
                              className="App__header"
>
                              <h1>
                                                            Countdown for
                              </h1>
                              <div
                                                            className="App__event"
                              >
                                                            <p>
                                                                                          February 25, 2018
                                                            </p>
                              </div>
</header>,
                            <Clock
                              deadline="February 25, 2018"
/>,
                            <section
                              className="Add-Event"
>
                              <form
                                                            className="Add-Event__form"
                              >
                                                            <input
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                            />
                                                            <button
                                                                                          onClick={[Function]}
                                                            >
                                                                                          Send
                                                            </button>
                              </form>
</section>,
                          ],
                          "className": "App",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="App"
>
                          <header
                                                    class="App__header"
                          >
                                                    <h1>
                                                                              Countdown for
                                                    </h1>
                                                    <div
                                                                              class="App__event"
                                                    >
                                                                              <p>
                                                                                                        February 25, 2018
                                                                              </p>
                                                    </div>
                          </header>
                          <section
                                                    class="Clock"
                          >
                                                    <div
                                                                              class="Clock__days"
                                                    >
                                                                              0 day
                                                    </div>
                                                    <div
                                                                              class="Clock__hours"
                                                    >
                                                                              0 hour
                                                    </div>
                                                    <div
                                                                              class="Clock__minutes"
                                                    >
                                                                              0 minute
                                                    </div>
                                                    <div
                                                                              class="Clock__seconds"
                                                    >
                                                                              0 second
                                                    </div>
                          </section>
                          <section
                                                    class="Add-Event"
                          >
                                                    <form
                                                                              class="Add-Event__form"
                                                    >
                                                                              <input
                                                                                                        type="text"
                                                                              />
                                                                              <button>
                                                                                                        Send
                                                                              </button>
                                                    </form>
                          </section>
</div>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {},
                      "memoizedState": Object {
                        "deadline": "February 25, 2018",
                        "newDeadline": "",
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {},
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="App"
                                >
                                                                <header
                                                                                                class="App__header"
                                                                >
                                                                                                <h1>
                                                                                                                                Countdown for
                                                                                                </h1>
                                                                                                <div
                                                                                                                                class="App__event"
                                                                                                >
                                                                                                                                <p>
                                                                                                                                                                February 25, 2018
                                                                                                                                </p>
                                                                                                </div>
                                                                </header>
                                                                <section
                                                                                                class="Clock"
                                                                >
                                                                                                <div
                                                                                                                                class="Clock__days"
                                                                                                >
                                                                                                                                0 day
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__hours"
                                                                                                >
                                                                                                                                0 hour
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__minutes"
                                                                                                >
                                                                                                                                0 minute
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__seconds"
                                                                                                >
                                                                                                                                0 second
                                                                                                </div>
                                                                </section>
                                                                <section
                                                                                                class="Add-Event"
                                                                >
                                                                                                <form
                                                                                                                                class="Add-Event__form"
                                                                                                >
                                                                                                                                <input
                                                                                                                                                                type="text"
                                                                                                                                />
                                                                                                                                <button>
                                                                                                                                                                Send
                                                                                                                                </button>
                                                                                                </form>
                                                                </section>
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "treeBaseTime": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "expirationTime": 1,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "tag": 0,
                              },
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "tag": 0,
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="App"
                              >
                                                            <header
                                                                                          class="App__header"
                                                            >
                                                                                          <h1>
                                                                                                                        Countdown for
                                                                                          </h1>
                                                                                          <div
                                                                                                                        class="App__event"
                                                                                          >
                                                                                                                        <p>
                                                                                                                                                      February 25, 2018
                                                                                                                        </p>
                                                                                          </div>
                                                            </header>
                                                            <section
                                                                                          class="Clock"
                                                            >
                                                                                          <div
                                                                                                                        class="Clock__days"
                                                                                          >
                                                                                                                        0 day
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__hours"
                                                                                          >
                                                                                                                        0 hour
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__minutes"
                                                                                          >
                                                                                                                        0 minute
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__seconds"
                                                                                          >
                                                                                                                        0 second
                                                                                          </div>
                                                            </section>
                                                            <section
                                                                                          class="Add-Event"
                                                            >
                                                                                          <form
                                                                                                                        class="Add-Event__form"
                                                                                          >
                                                                                                                        <input
                                                                                                                                                      type="text"
                                                                                                                        />
                                                                                                                        <button>
                                                                                                                                                      Send
                                                                                                                        </button>
                                                                                          </form>
                                                            </section>
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "treeBaseTime": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "expirationTime": 0,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": null,
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": null,
                          },
                        },
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {},
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseTime": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": App {
                        "_handleOnChangeDeadline": [Function],
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "_setNewDeadLine": [Function],
                        "context": Object {},
                        "props": Object {},
                        "refs": Object {},
                        "state": Object {
                          "deadline": "February 25, 2018",
                          "newDeadline": "",
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseTime": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 29,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 19,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 5,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {},
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": 0,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                                                    class="App"
                                  >
                                                                    <header
                                                                                                      class="App__header"
                                                                    >
                                                                                                      <h1>
                                                                                                                                        Countdown for
                                                                                                      </h1>
                                                                                                      <div
                                                                                                                                        class="App__event"
                                                                                                      >
                                                                                                                                        <p>
                                                                                                                                                                          February 25, 2018
                                                                                                                                        </p>
                                                                                                      </div>
                                                                    </header>
                                                                    <section
                                                                                                      class="Clock"
                                                                    >
                                                                                                      <div
                                                                                                                                        class="Clock__days"
                                                                                                      >
                                                                                                                                        0 day
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__hours"
                                                                                                      >
                                                                                                                                        0 hour
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__minutes"
                                                                                                      >
                                                                                                                                        0 minute
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__seconds"
                                                                                                      >
                                                                                                                                        0 second
                                                                                                      </div>
                                                                    </section>
                                                                    <section
                                                                                                      class="Add-Event"
                                                                    >
                                                                                                      <form
                                                                                                                                        class="Add-Event__form"
                                                                                                      >
                                                                                                                                        <input
                                                                                                                                                                          type="text"
                                                                                                                                        />
                                                                                                                                        <button>
                                                                                                                                                                          Send
                                                                                                                                        </button>
                                                                                                      </form>
                                                                    </section>
                                  </div>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "treeBaseTime": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "expirationTime": 1,
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={Object {}}
/>,
                                  },
                                  "tag": 0,
                                },
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={Object {}}
/>,
                                  },
                                  "tag": 0,
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="App"
                                >
                                                                <header
                                                                                                class="App__header"
                                                                >
                                                                                                <h1>
                                                                                                                                Countdown for
                                                                                                </h1>
                                                                                                <div
                                                                                                                                class="App__event"
                                                                                                >
                                                                                                                                <p>
                                                                                                                                                                February 25, 2018
                                                                                                                                </p>
                                                                                                </div>
                                                                </header>
                                                                <section
                                                                                                class="Clock"
                                                                >
                                                                                                <div
                                                                                                                                class="Clock__days"
                                                                                                >
                                                                                                                                0 day
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__hours"
                                                                                                >
                                                                                                                                0 hour
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__minutes"
                                                                                                >
                                                                                                                                0 minute
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__seconds"
                                                                                                >
                                                                                                                                0 second
                                                                                                </div>
                                                                </section>
                                                                <section
                                                                                                class="Add-Event"
                                                                >
                                                                                                <form
                                                                                                                                class="Add-Event__form"
                                                                                                >
                                                                                                                                <input
                                                                                                                                                                type="text"
                                                                                                                                />
                                                                                                                                <button>
                                                                                                                                                                Send
                                                                                                                                </button>
                                                                                                </form>
                                                                </section>
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "treeBaseTime": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "expirationTime": 0,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": null,
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": null,
                            },
                          },
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {},
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {},
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseTime": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 6,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                            "lineNumber": 20,
                          },
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 7,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                              "lineNumber": 21,
                            },
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 10,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                                "lineNumber": 22,
                              },
                              "actualDuration": 0,
                              "actualStartTime": 0,
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Countdown for",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "Countdown for",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseTime": 0,
                              "sibling": FiberNode {
                                "_debugID": 11,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                                  "lineNumber": 23,
                                },
                                "actualDuration": 0,
                                "actualStartTime": 0,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugID": 12,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                                    "lineNumber": 24,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": 0,
                                  "alternate": null,
                                  "child": null,
                                  "effectTag": 0,
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": "February 25, 2018",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": "February 25, 2018",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseTime": 0,
                                  "sibling": null,
                                  "stateNode": <p>
                                    February 25, 2018
</p>,
                                  "tag": 5,
                                  "treeBaseTime": 0,
                                  "type": "p",
                                  "updateQueue": null,
                                },
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 1,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": <p>
                                    February 25, 2018
</p>,
                                  "className": "App__event",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": <p>
                                    February 25, 2018
</p>,
                                  "className": "App__event",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseTime": 0,
                                "sibling": null,
                                "stateNode": <div
                                  class="App__event"
>
                                  <p>
                                                                    February 25, 2018
                                  </p>
</div>,
                                "tag": 5,
                                "treeBaseTime": 0,
                                "type": "div",
                                "updateQueue": null,
                              },
                              "stateNode": <h1>
                                Countdown for
</h1>,
                              "tag": 5,
                              "treeBaseTime": 0,
                              "type": "h1",
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <h1>
                                  Countdown for
</h1>,
                                <div
                                  className="App__event"
>
                                  <p>
                                                                    February 25, 2018
                                  </p>
</div>,
                              ],
                              "className": "App__header",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <h1>
                                  Countdown for
</h1>,
                                <div
                                  className="App__event"
>
                                  <p>
                                                                    February 25, 2018
                                  </p>
</div>,
                              ],
                              "className": "App__header",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseTime": 0,
                            "sibling": [Circular],
                            "stateNode": <header
                              class="App__header"
>
                              <h1>
                                                            Countdown for
                              </h1>
                              <div
                                                            class="App__event"
                              >
                                                            <p>
                                                                                          February 25, 2018
                                                            </p>
                              </div>
</header>,
                            "tag": 5,
                            "treeBaseTime": 0,
                            "type": "header",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": Array [
                              <header
                                className="App__header"
>
                                <h1>
                                                                Countdown for
                                </h1>
                                <div
                                                                className="App__event"
                                >
                                                                <p>
                                                                                                February 25, 2018
                                                                </p>
                                </div>
</header>,
                              <Clock
                                deadline="February 25, 2018"
/>,
                              <section
                                className="Add-Event"
>
                                <form
                                                                className="Add-Event__form"
                                >
                                                                <input
                                                                                                onChange={[Function]}
                                                                                                type="text"
                                                                />
                                                                <button
                                                                                                onClick={[Function]}
                                                                >
                                                                                                Send
                                                                </button>
                                </form>
</section>,
                            ],
                            "className": "App",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <header
                                className="App__header"
>
                                <h1>
                                                                Countdown for
                                </h1>
                                <div
                                                                className="App__event"
                                >
                                                                <p>
                                                                                                February 25, 2018
                                                                </p>
                                </div>
</header>,
                              <Clock
                                deadline="February 25, 2018"
/>,
                              <section
                                className="Add-Event"
>
                                <form
                                                                className="Add-Event__form"
                                >
                                                                <input
                                                                                                onChange={[Function]}
                                                                                                type="text"
                                                                />
                                                                <button
                                                                                                onClick={[Function]}
                                                                >
                                                                                                Send
                                                                </button>
                                </form>
</section>,
                            ],
                            "className": "App",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": <div
                            class="App"
>
                            <header
                                                        class="App__header"
                            >
                                                        <h1>
                                                                                    Countdown for
                                                        </h1>
                                                        <div
                                                                                    class="App__event"
                                                        >
                                                                                    <p>
                                                                                                                February 25, 2018
                                                                                    </p>
                                                        </div>
                            </header>
                            <section
                                                        class="Clock"
                            >
                                                        <div
                                                                                    class="Clock__days"
                                                        >
                                                                                    0 day
                                                        </div>
                                                        <div
                                                                                    class="Clock__hours"
                                                        >
                                                                                    0 hour
                                                        </div>
                                                        <div
                                                                                    class="Clock__minutes"
                                                        >
                                                                                    0 minute
                                                        </div>
                                                        <div
                                                                                    class="Clock__seconds"
                                                        >
                                                                                    0 second
                                                        </div>
                            </section>
                            <section
                                                        class="Add-Event"
                            >
                                                        <form
                                                                                    class="Add-Event__form"
                                                        >
                                                                                    <input
                                                                                                                type="text"
                                                                                    />
                                                                                    <button>
                                                                                                                Send
                                                                                    </button>
                                                        </form>
                            </section>
</div>,
                          "tag": 5,
                          "treeBaseTime": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {},
                        "memoizedState": Object {
                          "deadline": "February 25, 2018",
                          "newDeadline": "",
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {},
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {},
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": 0,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                                                    class="App"
                                  >
                                                                    <header
                                                                                                      class="App__header"
                                                                    >
                                                                                                      <h1>
                                                                                                                                        Countdown for
                                                                                                      </h1>
                                                                                                      <div
                                                                                                                                        class="App__event"
                                                                                                      >
                                                                                                                                        <p>
                                                                                                                                                                          February 25, 2018
                                                                                                                                        </p>
                                                                                                      </div>
                                                                    </header>
                                                                    <section
                                                                                                      class="Clock"
                                                                    >
                                                                                                      <div
                                                                                                                                        class="Clock__days"
                                                                                                      >
                                                                                                                                        0 day
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__hours"
                                                                                                      >
                                                                                                                                        0 hour
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__minutes"
                                                                                                      >
                                                                                                                                        0 minute
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__seconds"
                                                                                                      >
                                                                                                                                        0 second
                                                                                                      </div>
                                                                    </section>
                                                                    <section
                                                                                                      class="Add-Event"
                                                                    >
                                                                                                      <form
                                                                                                                                        class="Add-Event__form"
                                                                                                      >
                                                                                                                                        <input
                                                                                                                                                                          type="text"
                                                                                                                                        />
                                                                                                                                        <button>
                                                                                                                                                                          Send
                                                                                                                                        </button>
                                                                                                      </form>
                                                                    </section>
                                  </div>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "treeBaseTime": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "expirationTime": 1,
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={Object {}}
/>,
                                  },
                                  "tag": 0,
                                },
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={Object {}}
/>,
                                  },
                                  "tag": 0,
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="App"
                                >
                                                                <header
                                                                                                class="App__header"
                                                                >
                                                                                                <h1>
                                                                                                                                Countdown for
                                                                                                </h1>
                                                                                                <div
                                                                                                                                class="App__event"
                                                                                                >
                                                                                                                                <p>
                                                                                                                                                                February 25, 2018
                                                                                                                                </p>
                                                                                                </div>
                                                                </header>
                                                                <section
                                                                                                class="Clock"
                                                                >
                                                                                                <div
                                                                                                                                class="Clock__days"
                                                                                                >
                                                                                                                                0 day
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__hours"
                                                                                                >
                                                                                                                                0 hour
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__minutes"
                                                                                                >
                                                                                                                                0 minute
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__seconds"
                                                                                                >
                                                                                                                                0 second
                                                                                                </div>
                                                                </section>
                                                                <section
                                                                                                class="Add-Event"
                                                                >
                                                                                                <form
                                                                                                                                class="Add-Event__form"
                                                                                                >
                                                                                                                                <input
                                                                                                                                                                type="text"
                                                                                                                                />
                                                                                                                                <button>
                                                                                                                                                                Send
                                                                                                                                </button>
                                                                                                </form>
                                                                </section>
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "treeBaseTime": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "expirationTime": 0,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": null,
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": null,
                            },
                          },
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {},
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {},
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseTime": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": App {
                          "_handleOnChangeDeadline": [Function],
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "_setNewDeadLine": [Function],
                          "context": Object {},
                          "props": Object {},
                          "refs": Object {},
                          "state": Object {
                            "deadline": "February 25, 2018",
                            "newDeadline": "",
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseTime": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 30,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "onChange": [Function],
                        "type": "text",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "onChange": [Function],
                        "type": "text",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": FiberNode {
                        "_debugID": 20,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 5,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 4,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {},
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {},
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {},
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": 0,
                              "alternate": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": 0,
                                "alternate": [Circular],
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseTime": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                                                        class="App"
                                    >
                                                                        <header
                                                                                                            class="App__header"
                                                                        >
                                                                                                            <h1>
                                                                                                                                                Countdown for
                                                                                                            </h1>
                                                                                                            <div
                                                                                                                                                class="App__event"
                                                                                                            >
                                                                                                                                                <p>
                                                                                                                                                                                    February 25, 2018
                                                                                                                                                </p>
                                                                                                            </div>
                                                                        </header>
                                                                        <section
                                                                                                            class="Clock"
                                                                        >
                                                                                                            <div
                                                                                                                                                class="Clock__days"
                                                                                                            >
                                                                                                                                                0 day
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__hours"
                                                                                                            >
                                                                                                                                                0 hour
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__minutes"
                                                                                                            >
                                                                                                                                                0 minute
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__seconds"
                                                                                                            >
                                                                                                                                                0 second
                                                                                                            </div>
                                                                        </section>
                                                                        <section
                                                                                                            class="Add-Event"
                                                                        >
                                                                                                            <form
                                                                                                                                                class="Add-Event__form"
                                                                                                            >
                                                                                                                                                <input
                                                                                                                                                                                    type="text"
                                                                                                                                                />
                                                                                                                                                <button>
                                                                                                                                                                                    Send
                                                                                                                                                </button>
                                                                                                            </form>
                                                                        </section>
                                    </div>
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "treeBaseTime": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "expirationTime": 1,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={Object {}}
/>,
                                    },
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={Object {}}
/>,
                                    },
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                                                    class="App"
                                  >
                                                                    <header
                                                                                                      class="App__header"
                                                                    >
                                                                                                      <h1>
                                                                                                                                        Countdown for
                                                                                                      </h1>
                                                                                                      <div
                                                                                                                                        class="App__event"
                                                                                                      >
                                                                                                                                        <p>
                                                                                                                                                                          February 25, 2018
                                                                                                                                        </p>
                                                                                                      </div>
                                                                    </header>
                                                                    <section
                                                                                                      class="Clock"
                                                                    >
                                                                                                      <div
                                                                                                                                        class="Clock__days"
                                                                                                      >
                                                                                                                                        0 day
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__hours"
                                                                                                      >
                                                                                                                                        0 hour
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__minutes"
                                                                                                      >
                                                                                                                                        0 minute
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__seconds"
                                                                                                      >
                                                                                                                                        0 second
                                                                                                      </div>
                                                                    </section>
                                                                    <section
                                                                                                      class="Add-Event"
                                                                    >
                                                                                                      <form
                                                                                                                                        class="Add-Event__form"
                                                                                                      >
                                                                                                                                        <input
                                                                                                                                                                          type="text"
                                                                                                                                        />
                                                                                                                                        <button>
                                                                                                                                                                          Send
                                                                                                                                        </button>
                                                                                                      </form>
                                                                    </section>
                                  </div>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "treeBaseTime": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "expirationTime": 0,
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {},
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {},
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseTime": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 6,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                              "lineNumber": 20,
                            },
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 7,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                                "lineNumber": 21,
                              },
                              "actualDuration": 0,
                              "actualStartTime": 0,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 10,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                                  "lineNumber": 22,
                                },
                                "actualDuration": 0,
                                "actualStartTime": 0,
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "Countdown for",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": "Countdown for",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseTime": 0,
                                "sibling": FiberNode {
                                  "_debugID": 11,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                                    "lineNumber": 23,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": 0,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugID": 12,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                                      "lineNumber": 24,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": 0,
                                    "alternate": null,
                                    "child": null,
                                    "effectTag": 0,
                                    "expirationTime": 0,
                                    "firstEffect": null,
                                    "index": 0,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": "February 25, 2018",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": "February 25, 2018",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseTime": 0,
                                    "sibling": null,
                                    "stateNode": <p>
                                      February 25, 2018
</p>,
                                    "tag": 5,
                                    "treeBaseTime": 0,
                                    "type": "p",
                                    "updateQueue": null,
                                  },
                                  "effectTag": 0,
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 1,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": <p>
                                      February 25, 2018
</p>,
                                    "className": "App__event",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": <p>
                                      February 25, 2018
</p>,
                                    "className": "App__event",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseTime": 0,
                                  "sibling": null,
                                  "stateNode": <div
                                    class="App__event"
>
                                    <p>
                                                                        February 25, 2018
                                    </p>
</div>,
                                  "tag": 5,
                                  "treeBaseTime": 0,
                                  "type": "div",
                                  "updateQueue": null,
                                },
                                "stateNode": <h1>
                                  Countdown for
</h1>,
                                "tag": 5,
                                "treeBaseTime": 0,
                                "type": "h1",
                                "updateQueue": null,
                              },
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  <h1>
                                    Countdown for
</h1>,
                                  <div
                                    className="App__event"
>
                                    <p>
                                                                        February 25, 2018
                                    </p>
</div>,
                                ],
                                "className": "App__header",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": Array [
                                  <h1>
                                    Countdown for
</h1>,
                                  <div
                                    className="App__event"
>
                                    <p>
                                                                        February 25, 2018
                                    </p>
</div>,
                                ],
                                "className": "App__header",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseTime": 0,
                              "sibling": [Circular],
                              "stateNode": <header
                                class="App__header"
>
                                <h1>
                                                                Countdown for
                                </h1>
                                <div
                                                                class="App__event"
                                >
                                                                <p>
                                                                                                February 25, 2018
                                                                </p>
                                </div>
</header>,
                              "tag": 5,
                              "treeBaseTime": 0,
                              "type": "header",
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "children": Array [
                                <header
                                  className="App__header"
>
                                  <h1>
                                                                    Countdown for
                                  </h1>
                                  <div
                                                                    className="App__event"
                                  >
                                                                    <p>
                                                                                                      February 25, 2018
                                                                    </p>
                                  </div>
</header>,
                                <Clock
                                  deadline="February 25, 2018"
/>,
                                <section
                                  className="Add-Event"
>
                                  <form
                                                                    className="Add-Event__form"
                                  >
                                                                    <input
                                                                                                      onChange={[Function]}
                                                                                                      type="text"
                                                                    />
                                                                    <button
                                                                                                      onClick={[Function]}
                                                                    >
                                                                                                      Send
                                                                    </button>
                                  </form>
</section>,
                              ],
                              "className": "App",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <header
                                  className="App__header"
>
                                  <h1>
                                                                    Countdown for
                                  </h1>
                                  <div
                                                                    className="App__event"
                                  >
                                                                    <p>
                                                                                                      February 25, 2018
                                                                    </p>
                                  </div>
</header>,
                                <Clock
                                  deadline="February 25, 2018"
/>,
                                <section
                                  className="Add-Event"
>
                                  <form
                                                                    className="Add-Event__form"
                                  >
                                                                    <input
                                                                                                      onChange={[Function]}
                                                                                                      type="text"
                                                                    />
                                                                    <button
                                                                                                      onClick={[Function]}
                                                                    >
                                                                                                      Send
                                                                    </button>
                                  </form>
</section>,
                              ],
                              "className": "App",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": <div
                              class="App"
>
                              <header
                                                            class="App__header"
                              >
                                                            <h1>
                                                                                          Countdown for
                                                            </h1>
                                                            <div
                                                                                          class="App__event"
                                                            >
                                                                                          <p>
                                                                                                                        February 25, 2018
                                                                                          </p>
                                                            </div>
                              </header>
                              <section
                                                            class="Clock"
                              >
                                                            <div
                                                                                          class="Clock__days"
                                                            >
                                                                                          0 day
                                                            </div>
                                                            <div
                                                                                          class="Clock__hours"
                                                            >
                                                                                          0 hour
                                                            </div>
                                                            <div
                                                                                          class="Clock__minutes"
                                                            >
                                                                                          0 minute
                                                            </div>
                                                            <div
                                                                                          class="Clock__seconds"
                                                            >
                                                                                          0 second
                                                            </div>
                              </section>
                              <section
                                                            class="Add-Event"
                              >
                                                            <form
                                                                                          class="Add-Event__form"
                                                            >
                                                                                          <input
                                                                                                                        type="text"
                                                                                          />
                                                                                          <button>
                                                                                                                        Send
                                                                                          </button>
                                                            </form>
                              </section>
</div>,
                            "tag": 5,
                            "treeBaseTime": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {},
                          "memoizedState": Object {
                            "deadline": "February 25, 2018",
                            "newDeadline": "",
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {},
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 4,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {},
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {},
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {},
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": 0,
                              "alternate": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": 0,
                                "alternate": [Circular],
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseTime": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                                                        class="App"
                                    >
                                                                        <header
                                                                                                            class="App__header"
                                                                        >
                                                                                                            <h1>
                                                                                                                                                Countdown for
                                                                                                            </h1>
                                                                                                            <div
                                                                                                                                                class="App__event"
                                                                                                            >
                                                                                                                                                <p>
                                                                                                                                                                                    February 25, 2018
                                                                                                                                                </p>
                                                                                                            </div>
                                                                        </header>
                                                                        <section
                                                                                                            class="Clock"
                                                                        >
                                                                                                            <div
                                                                                                                                                class="Clock__days"
                                                                                                            >
                                                                                                                                                0 day
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__hours"
                                                                                                            >
                                                                                                                                                0 hour
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__minutes"
                                                                                                            >
                                                                                                                                                0 minute
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__seconds"
                                                                                                            >
                                                                                                                                                0 second
                                                                                                            </div>
                                                                        </section>
                                                                        <section
                                                                                                            class="Add-Event"
                                                                        >
                                                                                                            <form
                                                                                                                                                class="Add-Event__form"
                                                                                                            >
                                                                                                                                                <input
                                                                                                                                                                                    type="text"
                                                                                                                                                />
                                                                                                                                                <button>
                                                                                                                                                                                    Send
                                                                                                                                                </button>
                                                                                                            </form>
                                                                        </section>
                                    </div>
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "treeBaseTime": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "expirationTime": 1,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={Object {}}
/>,
                                    },
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={Object {}}
/>,
                                    },
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                                                    class="App"
                                  >
                                                                    <header
                                                                                                      class="App__header"
                                                                    >
                                                                                                      <h1>
                                                                                                                                        Countdown for
                                                                                                      </h1>
                                                                                                      <div
                                                                                                                                        class="App__event"
                                                                                                      >
                                                                                                                                        <p>
                                                                                                                                                                          February 25, 2018
                                                                                                                                        </p>
                                                                                                      </div>
                                                                    </header>
                                                                    <section
                                                                                                      class="Clock"
                                                                    >
                                                                                                      <div
                                                                                                                                        class="Clock__days"
                                                                                                      >
                                                                                                                                        0 day
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__hours"
                                                                                                      >
                                                                                                                                        0 hour
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__minutes"
                                                                                                      >
                                                                                                                                        0 minute
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__seconds"
                                                                                                      >
                                                                                                                                        0 second
                                                                                                      </div>
                                                                    </section>
                                                                    <section
                                                                                                      class="Add-Event"
                                                                    >
                                                                                                      <form
                                                                                                                                        class="Add-Event__form"
                                                                                                      >
                                                                                                                                        <input
                                                                                                                                                                          type="text"
                                                                                                                                        />
                                                                                                                                        <button>
                                                                                                                                                                          Send
                                                                                                                                        </button>
                                                                                                      </form>
                                                                    </section>
                                  </div>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "treeBaseTime": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "expirationTime": 0,
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {},
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {},
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseTime": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": App {
                            "_handleOnChangeDeadline": [Function],
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "_setNewDeadLine": [Function],
                            "context": Object {},
                            "props": Object {},
                            "refs": Object {},
                            "state": Object {
                              "deadline": "February 25, 2018",
                              "newDeadline": "",
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseTime": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                          "lineNumber": 31,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Send",
                          "onClick": [Function],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "Send",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <button>
                          Send
</button>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "button",
                        "updateQueue": null,
                      },
                      "stateNode": <input
                        type="text"
/>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "input",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <input
                          onChange={[Function]}
                          type="text"
/>,
                        <button
                          onClick={[Function]}
>
                          Send
</button>,
                      ],
                      "className": "Add-Event__form",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <input
                          onChange={[Function]}
                          type="text"
/>,
                        <button
                          onClick={[Function]}
>
                          Send
</button>,
                      ],
                      "className": "Add-Event__form",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <form
                      class="Add-Event__form"
>
                      <input
                                            type="text"
                      />
                      <button>
                                            Send
                      </button>
</form>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "form",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 2,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <form
                      className="Add-Event__form"
>
                      <input
                                            onChange={[Function]}
                                            type="text"
                      />
                      <button
                                            onClick={[Function]}
                      >
                                            Send
                      </button>
</form>,
                    "className": "Add-Event",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <form
                      className="Add-Event__form"
>
                      <input
                                            onChange={[Function]}
                                            type="text"
                      />
                      <button
                                            onClick={[Function]}
                      >
                                            Send
                      </button>
</form>,
                    "className": "Add-Event",
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 6,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 5,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="App"
                                >
                                                                <header
                                                                                                class="App__header"
                                                                >
                                                                                                <h1>
                                                                                                                                Countdown for
                                                                                                </h1>
                                                                                                <div
                                                                                                                                class="App__event"
                                                                                                >
                                                                                                                                <p>
                                                                                                                                                                February 25, 2018
                                                                                                                                </p>
                                                                                                </div>
                                                                </header>
                                                                <section
                                                                                                class="Clock"
                                                                >
                                                                                                <div
                                                                                                                                class="Clock__days"
                                                                                                >
                                                                                                                                0 day
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__hours"
                                                                                                >
                                                                                                                                0 hour
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__minutes"
                                                                                                >
                                                                                                                                0 minute
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__seconds"
                                                                                                >
                                                                                                                                0 second
                                                                                                </div>
                                                                </section>
                                                                <section
                                                                                                class="Add-Event"
                                                                >
                                                                                                <form
                                                                                                                                class="Add-Event__form"
                                                                                                >
                                                                                                                                <input
                                                                                                                                                                type="text"
                                                                                                                                />
                                                                                                                                <button>
                                                                                                                                                                Send
                                                                                                                                </button>
                                                                                                </form>
                                                                </section>
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "treeBaseTime": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "expirationTime": 1,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "tag": 0,
                              },
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "tag": 0,
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="App"
                              >
                                                            <header
                                                                                          class="App__header"
                                                            >
                                                                                          <h1>
                                                                                                                        Countdown for
                                                                                          </h1>
                                                                                          <div
                                                                                                                        class="App__event"
                                                                                          >
                                                                                                                        <p>
                                                                                                                                                      February 25, 2018
                                                                                                                        </p>
                                                                                          </div>
                                                            </header>
                                                            <section
                                                                                          class="Clock"
                                                            >
                                                                                          <div
                                                                                                                        class="Clock__days"
                                                                                          >
                                                                                                                        0 day
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__hours"
                                                                                          >
                                                                                                                        0 hour
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__minutes"
                                                                                          >
                                                                                                                        0 minute
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__seconds"
                                                                                          >
                                                                                                                        0 second
                                                                                          </div>
                                                            </section>
                                                            <section
                                                                                          class="Add-Event"
                                                            >
                                                                                          <form
                                                                                                                        class="Add-Event__form"
                                                                                          >
                                                                                                                        <input
                                                                                                                                                      type="text"
                                                                                                                        />
                                                                                                                        <button>
                                                                                                                                                      Send
                                                                                                                        </button>
                                                                                          </form>
                                                            </section>
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "treeBaseTime": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "expirationTime": 0,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": null,
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": null,
                          },
                        },
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {},
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseTime": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {},
                      "memoizedState": Object {
                        "deadline": "February 25, 2018",
                        "newDeadline": "",
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {},
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="App"
                                >
                                                                <header
                                                                                                class="App__header"
                                                                >
                                                                                                <h1>
                                                                                                                                Countdown for
                                                                                                </h1>
                                                                                                <div
                                                                                                                                class="App__event"
                                                                                                >
                                                                                                                                <p>
                                                                                                                                                                February 25, 2018
                                                                                                                                </p>
                                                                                                </div>
                                                                </header>
                                                                <section
                                                                                                class="Clock"
                                                                >
                                                                                                <div
                                                                                                                                class="Clock__days"
                                                                                                >
                                                                                                                                0 day
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__hours"
                                                                                                >
                                                                                                                                0 hour
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__minutes"
                                                                                                >
                                                                                                                                0 minute
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__seconds"
                                                                                                >
                                                                                                                                0 second
                                                                                                </div>
                                                                </section>
                                                                <section
                                                                                                class="Add-Event"
                                                                >
                                                                                                <form
                                                                                                                                class="Add-Event__form"
                                                                                                >
                                                                                                                                <input
                                                                                                                                                                type="text"
                                                                                                                                />
                                                                                                                                <button>
                                                                                                                                                                Send
                                                                                                                                </button>
                                                                                                </form>
                                                                </section>
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "treeBaseTime": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "expirationTime": 1,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "tag": 0,
                              },
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "tag": 0,
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="App"
                              >
                                                            <header
                                                                                          class="App__header"
                                                            >
                                                                                          <h1>
                                                                                                                        Countdown for
                                                                                          </h1>
                                                                                          <div
                                                                                                                        class="App__event"
                                                                                          >
                                                                                                                        <p>
                                                                                                                                                      February 25, 2018
                                                                                                                        </p>
                                                                                          </div>
                                                            </header>
                                                            <section
                                                                                          class="Clock"
                                                            >
                                                                                          <div
                                                                                                                        class="Clock__days"
                                                                                          >
                                                                                                                        0 day
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__hours"
                                                                                          >
                                                                                                                        0 hour
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__minutes"
                                                                                          >
                                                                                                                        0 minute
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__seconds"
                                                                                          >
                                                                                                                        0 second
                                                                                          </div>
                                                            </section>
                                                            <section
                                                                                          class="Add-Event"
                                                            >
                                                                                          <form
                                                                                                                        class="Add-Event__form"
                                                                                          >
                                                                                                                        <input
                                                                                                                                                      type="text"
                                                                                                                        />
                                                                                                                        <button>
                                                                                                                                                      Send
                                                                                                                        </button>
                                                                                          </form>
                                                            </section>
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "treeBaseTime": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "expirationTime": 0,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": null,
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": null,
                          },
                        },
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {},
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseTime": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": App {
                        "_handleOnChangeDeadline": [Function],
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "_setNewDeadLine": [Function],
                        "context": Object {},
                        "props": Object {},
                        "refs": Object {},
                        "state": Object {
                          "deadline": "February 25, 2018",
                          "newDeadline": "",
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseTime": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": Object {
                      "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                      "lineNumber": 20,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 7,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 5,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {},
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": 0,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                                                    class="App"
                                  >
                                                                    <header
                                                                                                      class="App__header"
                                                                    >
                                                                                                      <h1>
                                                                                                                                        Countdown for
                                                                                                      </h1>
                                                                                                      <div
                                                                                                                                        class="App__event"
                                                                                                      >
                                                                                                                                        <p>
                                                                                                                                                                          February 25, 2018
                                                                                                                                        </p>
                                                                                                      </div>
                                                                    </header>
                                                                    <section
                                                                                                      class="Clock"
                                                                    >
                                                                                                      <div
                                                                                                                                        class="Clock__days"
                                                                                                      >
                                                                                                                                        0 day
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__hours"
                                                                                                      >
                                                                                                                                        0 hour
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__minutes"
                                                                                                      >
                                                                                                                                        0 minute
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__seconds"
                                                                                                      >
                                                                                                                                        0 second
                                                                                                      </div>
                                                                    </section>
                                                                    <section
                                                                                                      class="Add-Event"
                                                                    >
                                                                                                      <form
                                                                                                                                        class="Add-Event__form"
                                                                                                      >
                                                                                                                                        <input
                                                                                                                                                                          type="text"
                                                                                                                                        />
                                                                                                                                        <button>
                                                                                                                                                                          Send
                                                                                                                                        </button>
                                                                                                      </form>
                                                                    </section>
                                  </div>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "treeBaseTime": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "expirationTime": 1,
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={Object {}}
/>,
                                  },
                                  "tag": 0,
                                },
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={Object {}}
/>,
                                  },
                                  "tag": 0,
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="App"
                                >
                                                                <header
                                                                                                class="App__header"
                                                                >
                                                                                                <h1>
                                                                                                                                Countdown for
                                                                                                </h1>
                                                                                                <div
                                                                                                                                class="App__event"
                                                                                                >
                                                                                                                                <p>
                                                                                                                                                                February 25, 2018
                                                                                                                                </p>
                                                                                                </div>
                                                                </header>
                                                                <section
                                                                                                class="Clock"
                                                                >
                                                                                                <div
                                                                                                                                class="Clock__days"
                                                                                                >
                                                                                                                                0 day
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__hours"
                                                                                                >
                                                                                                                                0 hour
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__minutes"
                                                                                                >
                                                                                                                                0 minute
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__seconds"
                                                                                                >
                                                                                                                                0 second
                                                                                                </div>
                                                                </section>
                                                                <section
                                                                                                class="Add-Event"
                                                                >
                                                                                                <form
                                                                                                                                class="Add-Event__form"
                                                                                                >
                                                                                                                                <input
                                                                                                                                                                type="text"
                                                                                                                                />
                                                                                                                                <button>
                                                                                                                                                                Send
                                                                                                                                </button>
                                                                                                </form>
                                                                </section>
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "treeBaseTime": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "expirationTime": 0,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": null,
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": null,
                            },
                          },
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {},
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {},
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseTime": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {},
                        "memoizedState": Object {
                          "deadline": "February 25, 2018",
                          "newDeadline": "",
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {},
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {},
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": 0,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                                                    class="App"
                                  >
                                                                    <header
                                                                                                      class="App__header"
                                                                    >
                                                                                                      <h1>
                                                                                                                                        Countdown for
                                                                                                      </h1>
                                                                                                      <div
                                                                                                                                        class="App__event"
                                                                                                      >
                                                                                                                                        <p>
                                                                                                                                                                          February 25, 2018
                                                                                                                                        </p>
                                                                                                      </div>
                                                                    </header>
                                                                    <section
                                                                                                      class="Clock"
                                                                    >
                                                                                                      <div
                                                                                                                                        class="Clock__days"
                                                                                                      >
                                                                                                                                        0 day
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__hours"
                                                                                                      >
                                                                                                                                        0 hour
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__minutes"
                                                                                                      >
                                                                                                                                        0 minute
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__seconds"
                                                                                                      >
                                                                                                                                        0 second
                                                                                                      </div>
                                                                    </section>
                                                                    <section
                                                                                                      class="Add-Event"
                                                                    >
                                                                                                      <form
                                                                                                                                        class="Add-Event__form"
                                                                                                      >
                                                                                                                                        <input
                                                                                                                                                                          type="text"
                                                                                                                                        />
                                                                                                                                        <button>
                                                                                                                                                                          Send
                                                                                                                                        </button>
                                                                                                      </form>
                                                                    </section>
                                  </div>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "treeBaseTime": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "expirationTime": 1,
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={Object {}}
/>,
                                  },
                                  "tag": 0,
                                },
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={Object {}}
/>,
                                  },
                                  "tag": 0,
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="App"
                                >
                                                                <header
                                                                                                class="App__header"
                                                                >
                                                                                                <h1>
                                                                                                                                Countdown for
                                                                                                </h1>
                                                                                                <div
                                                                                                                                class="App__event"
                                                                                                >
                                                                                                                                <p>
                                                                                                                                                                February 25, 2018
                                                                                                                                </p>
                                                                                                </div>
                                                                </header>
                                                                <section
                                                                                                class="Clock"
                                                                >
                                                                                                <div
                                                                                                                                class="Clock__days"
                                                                                                >
                                                                                                                                0 day
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__hours"
                                                                                                >
                                                                                                                                0 hour
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__minutes"
                                                                                                >
                                                                                                                                0 minute
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__seconds"
                                                                                                >
                                                                                                                                0 second
                                                                                                </div>
                                                                </section>
                                                                <section
                                                                                                class="Add-Event"
                                                                >
                                                                                                <form
                                                                                                                                class="Add-Event__form"
                                                                                                >
                                                                                                                                <input
                                                                                                                                                                type="text"
                                                                                                                                />
                                                                                                                                <button>
                                                                                                                                                                Send
                                                                                                                                </button>
                                                                                                </form>
                                                                </section>
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "treeBaseTime": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "expirationTime": 0,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": null,
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": null,
                            },
                          },
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {},
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {},
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseTime": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": App {
                          "_handleOnChangeDeadline": [Function],
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "_setNewDeadLine": [Function],
                          "context": Object {},
                          "props": Object {},
                          "refs": Object {},
                          "state": Object {
                            "deadline": "February 25, 2018",
                            "newDeadline": "",
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseTime": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": Object {
                        "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                        "lineNumber": 21,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 10,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 5,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 4,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {},
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {},
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {},
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": 0,
                              "alternate": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": 0,
                                "alternate": [Circular],
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseTime": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                                                        class="App"
                                    >
                                                                        <header
                                                                                                            class="App__header"
                                                                        >
                                                                                                            <h1>
                                                                                                                                                Countdown for
                                                                                                            </h1>
                                                                                                            <div
                                                                                                                                                class="App__event"
                                                                                                            >
                                                                                                                                                <p>
                                                                                                                                                                                    February 25, 2018
                                                                                                                                                </p>
                                                                                                            </div>
                                                                        </header>
                                                                        <section
                                                                                                            class="Clock"
                                                                        >
                                                                                                            <div
                                                                                                                                                class="Clock__days"
                                                                                                            >
                                                                                                                                                0 day
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__hours"
                                                                                                            >
                                                                                                                                                0 hour
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__minutes"
                                                                                                            >
                                                                                                                                                0 minute
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__seconds"
                                                                                                            >
                                                                                                                                                0 second
                                                                                                            </div>
                                                                        </section>
                                                                        <section
                                                                                                            class="Add-Event"
                                                                        >
                                                                                                            <form
                                                                                                                                                class="Add-Event__form"
                                                                                                            >
                                                                                                                                                <input
                                                                                                                                                                                    type="text"
                                                                                                                                                />
                                                                                                                                                <button>
                                                                                                                                                                                    Send
                                                                                                                                                </button>
                                                                                                            </form>
                                                                        </section>
                                    </div>
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "treeBaseTime": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "expirationTime": 1,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={Object {}}
/>,
                                    },
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={Object {}}
/>,
                                    },
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                                                    class="App"
                                  >
                                                                    <header
                                                                                                      class="App__header"
                                                                    >
                                                                                                      <h1>
                                                                                                                                        Countdown for
                                                                                                      </h1>
                                                                                                      <div
                                                                                                                                        class="App__event"
                                                                                                      >
                                                                                                                                        <p>
                                                                                                                                                                          February 25, 2018
                                                                                                                                        </p>
                                                                                                      </div>
                                                                    </header>
                                                                    <section
                                                                                                      class="Clock"
                                                                    >
                                                                                                      <div
                                                                                                                                        class="Clock__days"
                                                                                                      >
                                                                                                                                        0 day
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__hours"
                                                                                                      >
                                                                                                                                        0 hour
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__minutes"
                                                                                                      >
                                                                                                                                        0 minute
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__seconds"
                                                                                                      >
                                                                                                                                        0 second
                                                                                                      </div>
                                                                    </section>
                                                                    <section
                                                                                                      class="Add-Event"
                                                                    >
                                                                                                      <form
                                                                                                                                        class="Add-Event__form"
                                                                                                      >
                                                                                                                                        <input
                                                                                                                                                                          type="text"
                                                                                                                                        />
                                                                                                                                        <button>
                                                                                                                                                                          Send
                                                                                                                                        </button>
                                                                                                      </form>
                                                                    </section>
                                  </div>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "treeBaseTime": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "expirationTime": 0,
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {},
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {},
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseTime": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {},
                          "memoizedState": Object {
                            "deadline": "February 25, 2018",
                            "newDeadline": "",
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {},
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 4,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {},
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {},
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {},
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": 0,
                              "alternate": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": 0,
                                "alternate": [Circular],
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseTime": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                                                        class="App"
                                    >
                                                                        <header
                                                                                                            class="App__header"
                                                                        >
                                                                                                            <h1>
                                                                                                                                                Countdown for
                                                                                                            </h1>
                                                                                                            <div
                                                                                                                                                class="App__event"
                                                                                                            >
                                                                                                                                                <p>
                                                                                                                                                                                    February 25, 2018
                                                                                                                                                </p>
                                                                                                            </div>
                                                                        </header>
                                                                        <section
                                                                                                            class="Clock"
                                                                        >
                                                                                                            <div
                                                                                                                                                class="Clock__days"
                                                                                                            >
                                                                                                                                                0 day
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__hours"
                                                                                                            >
                                                                                                                                                0 hour
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__minutes"
                                                                                                            >
                                                                                                                                                0 minute
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__seconds"
                                                                                                            >
                                                                                                                                                0 second
                                                                                                            </div>
                                                                        </section>
                                                                        <section
                                                                                                            class="Add-Event"
                                                                        >
                                                                                                            <form
                                                                                                                                                class="Add-Event__form"
                                                                                                            >
                                                                                                                                                <input
                                                                                                                                                                                    type="text"
                                                                                                                                                />
                                                                                                                                                <button>
                                                                                                                                                                                    Send
                                                                                                                                                </button>
                                                                                                            </form>
                                                                        </section>
                                    </div>
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "treeBaseTime": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "expirationTime": 1,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={Object {}}
/>,
                                    },
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={Object {}}
/>,
                                    },
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
/>,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                                                    class="App"
                                  >
                                                                    <header
                                                                                                      class="App__header"
                                                                    >
                                                                                                      <h1>
                                                                                                                                        Countdown for
                                                                                                      </h1>
                                                                                                      <div
                                                                                                                                        class="App__event"
                                                                                                      >
                                                                                                                                        <p>
                                                                                                                                                                          February 25, 2018
                                                                                                                                        </p>
                                                                                                      </div>
                                                                    </header>
                                                                    <section
                                                                                                      class="Clock"
                                                                    >
                                                                                                      <div
                                                                                                                                        class="Clock__days"
                                                                                                      >
                                                                                                                                        0 day
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__hours"
                                                                                                      >
                                                                                                                                        0 hour
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__minutes"
                                                                                                      >
                                                                                                                                        0 minute
                                                                                                      </div>
                                                                                                      <div
                                                                                                                                        class="Clock__seconds"
                                                                                                      >
                                                                                                                                        0 second
                                                                                                      </div>
                                                                    </section>
                                                                    <section
                                                                                                      class="Add-Event"
                                                                    >
                                                                                                      <form
                                                                                                                                        class="Add-Event__form"
                                                                                                      >
                                                                                                                                        <input
                                                                                                                                                                          type="text"
                                                                                                                                        />
                                                                                                                                        <button>
                                                                                                                                                                          Send
                                                                                                                                        </button>
                                                                                                      </form>
                                                                    </section>
                                  </div>
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "treeBaseTime": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "expirationTime": 0,
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {},
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {},
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseTime": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": App {
                            "_handleOnChangeDeadline": [Function],
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "_setNewDeadLine": [Function],
                            "context": Object {},
                            "props": Object {},
                            "refs": Object {},
                            "state": Object {
                              "deadline": "February 25, 2018",
                              "newDeadline": "",
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseTime": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": Object {
                          "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                          "lineNumber": 22,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Countdown for",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "Countdown for",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": FiberNode {
                          "_debugID": 11,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 5,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": FiberNode {
                              "_debugID": 4,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": 0,
                              "alternate": null,
                              "child": [Circular],
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {},
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {},
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {},
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": 0,
                                "alternate": FiberNode {
                                  "_debugID": 1,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": 0,
                                  "alternate": [Circular],
                                  "child": null,
                                  "effectTag": 0,
                                  "expirationTime": 1,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseTime": 0,
                                  "sibling": null,
                                  "stateNode": Object {
                                    "containerInfo": <div>
                                      <div
                                                                            class="App"
                                      >
                                                                            <header
                                                                                                                  class="App__header"
                                                                            >
                                                                                                                  <h1>
                                                                                                                                                        Countdown for
                                                                                                                  </h1>
                                                                                                                  <div
                                                                                                                                                        class="App__event"
                                                                                                                  >
                                                                                                                                                        <p>
                                                                                                                                                                                              February 25, 2018
                                                                                                                                                        </p>
                                                                                                                  </div>
                                                                            </header>
                                                                            <section
                                                                                                                  class="Clock"
                                                                            >
                                                                                                                  <div
                                                                                                                                                        class="Clock__days"
                                                                                                                  >
                                                                                                                                                        0 day
                                                                                                                  </div>
                                                                                                                  <div
                                                                                                                                                        class="Clock__hours"
                                                                                                                  >
                                                                                                                                                        0 hour
                                                                                                                  </div>
                                                                                                                  <div
                                                                                                                                                        class="Clock__minutes"
                                                                                                                  >
                                                                                                                                                        0 minute
                                                                                                                  </div>
                                                                                                                  <div
                                                                                                                                                        class="Clock__seconds"
                                                                                                                  >
                                                                                                                                                        0 second
                                                                                                                  </div>
                                                                            </section>
                                                                            <section
                                                                                                                  class="Add-Event"
                                                                            >
                                                                                                                  <form
                                                                                                                                                        class="Add-Event__form"
                                                                                                                  >
                                                                                                                                                        <input
                                                                                                                                                                                              type="text"
                                                                                                                                                        />
                                                                                                                                                        <button>
                                                                                                                                                                                              Send
                                                                                                                                                        </button>
                                                                                                                  </form>
                                                                            </section>
                                      </div>
</div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "earliestPendingTime": 0,
                                    "earliestSuspendedTime": 0,
                                    "finishedWork": null,
                                    "firstBatch": null,
                                    "hydrate": false,
                                    "latestPendingTime": 0,
                                    "latestPingedTime": 0,
                                    "latestSuspendedTime": 0,
                                    "nextScheduledRoot": null,
                                    "pendingChildren": null,
                                    "pendingCommitExpirationTime": 0,
                                    "pendingContext": null,
                                    "remainingExpirationTime": 0,
                                  },
                                  "tag": 3,
                                  "treeBaseTime": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "expirationTime": 1,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={Object {}}
/>,
                                      },
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={Object {}}
/>,
                                      },
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "effectTag": 32,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseTime": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                                                        class="App"
                                    >
                                                                        <header
                                                                                                            class="App__header"
                                                                        >
                                                                                                            <h1>
                                                                                                                                                Countdown for
                                                                                                            </h1>
                                                                                                            <div
                                                                                                                                                class="App__event"
                                                                                                            >
                                                                                                                                                <p>
                                                                                                                                                                                    February 25, 2018
                                                                                                                                                </p>
                                                                                                            </div>
                                                                        </header>
                                                                        <section
                                                                                                            class="Clock"
                                                                        >
                                                                                                            <div
                                                                                                                                                class="Clock__days"
                                                                                                            >
                                                                                                                                                0 day
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__hours"
                                                                                                            >
                                                                                                                                                0 hour
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__minutes"
                                                                                                            >
                                                                                                                                                0 minute
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__seconds"
                                                                                                            >
                                                                                                                                                0 second
                                                                                                            </div>
                                                                        </section>
                                                                        <section
                                                                                                            class="Add-Event"
                                                                        >
                                                                                                            <form
                                                                                                                                                class="Add-Event__form"
                                                                                                            >
                                                                                                                                                <input
                                                                                                                                                                                    type="text"
                                                                                                                                                />
                                                                                                                                                <button>
                                                                                                                                                                                    Send
                                                                                                                                                </button>
                                                                                                            </form>
                                                                        </section>
                                    </div>
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "treeBaseTime": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={Object {}}
/>,
                                  },
                                  "expirationTime": 0,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {},
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {},
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 2,
                              "treeBaseTime": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {},
                            "memoizedState": Object {
                              "deadline": "February 25, 2018",
                              "newDeadline": "",
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {},
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 4,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": 0,
                              "alternate": null,
                              "child": [Circular],
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {},
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {},
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {},
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": 0,
                                "alternate": FiberNode {
                                  "_debugID": 1,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": 0,
                                  "alternate": [Circular],
                                  "child": null,
                                  "effectTag": 0,
                                  "expirationTime": 1,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseTime": 0,
                                  "sibling": null,
                                  "stateNode": Object {
                                    "containerInfo": <div>
                                      <div
                                                                            class="App"
                                      >
                                                                            <header
                                                                                                                  class="App__header"
                                                                            >
                                                                                                                  <h1>
                                                                                                                                                        Countdown for
                                                                                                                  </h1>
                                                                                                                  <div
                                                                                                                                                        class="App__event"
                                                                                                                  >
                                                                                                                                                        <p>
                                                                                                                                                                                              February 25, 2018
                                                                                                                                                        </p>
                                                                                                                  </div>
                                                                            </header>
                                                                            <section
                                                                                                                  class="Clock"
                                                                            >
                                                                                                                  <div
                                                                                                                                                        class="Clock__days"
                                                                                                                  >
                                                                                                                                                        0 day
                                                                                                                  </div>
                                                                                                                  <div
                                                                                                                                                        class="Clock__hours"
                                                                                                                  >
                                                                                                                                                        0 hour
                                                                                                                  </div>
                                                                                                                  <div
                                                                                                                                                        class="Clock__minutes"
                                                                                                                  >
                                                                                                                                                        0 minute
                                                                                                                  </div>
                                                                                                                  <div
                                                                                                                                                        class="Clock__seconds"
                                                                                                                  >
                                                                                                                                                        0 second
                                                                                                                  </div>
                                                                            </section>
                                                                            <section
                                                                                                                  class="Add-Event"
                                                                            >
                                                                                                                  <form
                                                                                                                                                        class="Add-Event__form"
                                                                                                                  >
                                                                                                                                                        <input
                                                                                                                                                                                              type="text"
                                                                                                                                                        />
                                                                                                                                                        <button>
                                                                                                                                                                                              Send
                                                                                                                                                        </button>
                                                                                                                  </form>
                                                                            </section>
                                      </div>
</div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "earliestPendingTime": 0,
                                    "earliestSuspendedTime": 0,
                                    "finishedWork": null,
                                    "firstBatch": null,
                                    "hydrate": false,
                                    "latestPendingTime": 0,
                                    "latestPingedTime": 0,
                                    "latestSuspendedTime": 0,
                                    "nextScheduledRoot": null,
                                    "pendingChildren": null,
                                    "pendingCommitExpirationTime": 0,
                                    "pendingContext": null,
                                    "remainingExpirationTime": 0,
                                  },
                                  "tag": 3,
                                  "treeBaseTime": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "expirationTime": 1,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={Object {}}
/>,
                                      },
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={Object {}}
/>,
                                      },
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "effectTag": 32,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseTime": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                                                        class="App"
                                    >
                                                                        <header
                                                                                                            class="App__header"
                                                                        >
                                                                                                            <h1>
                                                                                                                                                Countdown for
                                                                                                            </h1>
                                                                                                            <div
                                                                                                                                                class="App__event"
                                                                                                            >
                                                                                                                                                <p>
                                                                                                                                                                                    February 25, 2018
                                                                                                                                                </p>
                                                                                                            </div>
                                                                        </header>
                                                                        <section
                                                                                                            class="Clock"
                                                                        >
                                                                                                            <div
                                                                                                                                                class="Clock__days"
                                                                                                            >
                                                                                                                                                0 day
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__hours"
                                                                                                            >
                                                                                                                                                0 hour
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__minutes"
                                                                                                            >
                                                                                                                                                0 minute
                                                                                                            </div>
                                                                                                            <div
                                                                                                                                                class="Clock__seconds"
                                                                                                            >
                                                                                                                                                0 second
                                                                                                            </div>
                                                                        </section>
                                                                        <section
                                                                                                            class="Add-Event"
                                                                        >
                                                                                                            <form
                                                                                                                                                class="Add-Event__form"
                                                                                                            >
                                                                                                                                                <input
                                                                                                                                                                                    type="text"
                                                                                                                                                />
                                                                                                                                                <button>
                                                                                                                                                                                    Send
                                                                                                                                                </button>
                                                                                                            </form>
                                                                        </section>
                                    </div>
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "treeBaseTime": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={Object {}}
/>,
                                  },
                                  "expirationTime": 0,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {},
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {},
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 2,
                              "treeBaseTime": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": App {
                              "_handleOnChangeDeadline": [Function],
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "_setNewDeadLine": [Function],
                              "context": Object {},
                              "props": Object {},
                              "refs": Object {},
                              "state": Object {
                                "deadline": "February 25, 2018",
                                "newDeadline": "",
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseTime": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": Object {
                            "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                            "lineNumber": 23,
                          },
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 12,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": FiberNode {
                              "_debugID": 5,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": FiberNode {
                                "_debugID": 4,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": 0,
                                "alternate": null,
                                "child": [Circular],
                                "effectTag": 1,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {},
                                },
                                "memoizedState": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {},
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {},
                                },
                                "ref": null,
                                "return": FiberNode {
                                  "_debugID": 1,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": 0,
                                  "alternate": FiberNode {
                                    "_debugID": 1,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": 0,
                                    "alternate": [Circular],
                                    "child": null,
                                    "effectTag": 0,
                                    "expirationTime": 1,
                                    "firstEffect": null,
                                    "index": 0,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": null,
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": null,
                                    "ref": null,
                                    "return": null,
                                    "selfBaseTime": 0,
                                    "sibling": null,
                                    "stateNode": Object {
                                      "containerInfo": <div>
                                        <div
                                                                                class="App"
                                        >
                                                                                <header
                                                                                                                        class="App__header"
                                                                                >
                                                                                                                        <h1>
                                                                                                                                                                Countdown for
                                                                                                                        </h1>
                                                                                                                        <div
                                                                                                                                                                class="App__event"
                                                                                                                        >
                                                                                                                                                                <p>
                                                                                                                                                                                                        February 25, 2018
                                                                                                                                                                </p>
                                                                                                                        </div>
                                                                                </header>
                                                                                <section
                                                                                                                        class="Clock"
                                                                                >
                                                                                                                        <div
                                                                                                                                                                class="Clock__days"
                                                                                                                        >
                                                                                                                                                                0 day
                                                                                                                        </div>
                                                                                                                        <div
                                                                                                                                                                class="Clock__hours"
                                                                                                                        >
                                                                                                                                                                0 hour
                                                                                                                        </div>
                                                                                                                        <div
                                                                                                                                                                class="Clock__minutes"
                                                                                                                        >
                                                                                                                                                                0 minute
                                                                                                                        </div>
                                                                                                                        <div
                                                                                                                                                                class="Clock__seconds"
                                                                                                                        >
                                                                                                                                                                0 second
                                                                                                                        </div>
                                                                                </section>
                                                                                <section
                                                                                                                        class="Add-Event"
                                                                                >
                                                                                                                        <form
                                                                                                                                                                class="Add-Event__form"
                                                                                                                        >
                                                                                                                                                                <input
                                                                                                                                                                                                        type="text"
                                                                                                                                                                />
                                                                                                                                                                <button>
                                                                                                                                                                                                        Send
                                                                                                                                                                </button>
                                                                                                                        </form>
                                                                                </section>
                                        </div>
</div>,
                                      "context": Object {},
                                      "current": [Circular],
                                      "earliestPendingTime": 0,
                                      "earliestSuspendedTime": 0,
                                      "finishedWork": null,
                                      "firstBatch": null,
                                      "hydrate": false,
                                      "latestPendingTime": 0,
                                      "latestPingedTime": 0,
                                      "latestSuspendedTime": 0,
                                      "nextScheduledRoot": null,
                                      "pendingChildren": null,
                                      "pendingCommitExpirationTime": 0,
                                      "pendingContext": null,
                                      "remainingExpirationTime": 0,
                                    },
                                    "tag": 3,
                                    "treeBaseTime": 0,
                                    "type": null,
                                    "updateQueue": Object {
                                      "baseState": null,
                                      "expirationTime": 1,
                                      "firstCapturedEffect": null,
                                      "firstCapturedUpdate": null,
                                      "firstEffect": null,
                                      "firstUpdate": Object {
                                        "callback": null,
                                        "expirationTime": 1,
                                        "next": null,
                                        "nextEffect": null,
                                        "payload": Object {
                                          "element": <WrapperComponent
                                            Component={[Function]}
                                            context={null}
                                            props={Object {}}
/>,
                                        },
                                        "tag": 0,
                                      },
                                      "lastCapturedEffect": null,
                                      "lastCapturedUpdate": null,
                                      "lastEffect": null,
                                      "lastUpdate": Object {
                                        "callback": null,
                                        "expirationTime": 1,
                                        "next": null,
                                        "nextEffect": null,
                                        "payload": Object {
                                          "element": <WrapperComponent
                                            Component={[Function]}
                                            context={null}
                                            props={Object {}}
/>,
                                        },
                                        "tag": 0,
                                      },
                                    },
                                  },
                                  "child": [Circular],
                                  "effectTag": 32,
                                  "expirationTime": 0,
                                  "firstEffect": [Circular],
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": [Circular],
                                  "memoizedProps": null,
                                  "memoizedState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={Object {}}
/>,
                                  },
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseTime": 0,
                                  "sibling": null,
                                  "stateNode": Object {
                                    "containerInfo": <div>
                                      <div
                                                                            class="App"
                                      >
                                                                            <header
                                                                                                                  class="App__header"
                                                                            >
                                                                                                                  <h1>
                                                                                                                                                        Countdown for
                                                                                                                  </h1>
                                                                                                                  <div
                                                                                                                                                        class="App__event"
                                                                                                                  >
                                                                                                                                                        <p>
                                                                                                                                                                                              February 25, 2018
                                                                                                                                                        </p>
                                                                                                                  </div>
                                                                            </header>
                                                                            <section
                                                                                                                  class="Clock"
                                                                            >
                                                                                                                  <div
                                                                                                                                                        class="Clock__days"
                                                                                                                  >
                                                                                                                                                        0 day
                                                                                                                  </div>
                                                                                                                  <div
                                                                                                                                                        class="Clock__hours"
                                                                                                                  >
                                                                                                                                                        0 hour
                                                                                                                  </div>
                                                                                                                  <div
                                                                                                                                                        class="Clock__minutes"
                                                                                                                  >
                                                                                                                                                        0 minute
                                                                                                                  </div>
                                                                                                                  <div
                                                                                                                                                        class="Clock__seconds"
                                                                                                                  >
                                                                                                                                                        0 second
                                                                                                                  </div>
                                                                            </section>
                                                                            <section
                                                                                                                  class="Add-Event"
                                                                            >
                                                                                                                  <form
                                                                                                                                                        class="Add-Event__form"
                                                                                                                  >
                                                                                                                                                        <input
                                                                                                                                                                                              type="text"
                                                                                                                                                        />
                                                                                                                                                        <button>
                                                                                                                                                                                              Send
                                                                                                                                                        </button>
                                                                                                                  </form>
                                                                            </section>
                                      </div>
</div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "earliestPendingTime": 0,
                                    "earliestSuspendedTime": 0,
                                    "finishedWork": null,
                                    "firstBatch": null,
                                    "hydrate": false,
                                    "latestPendingTime": 0,
                                    "latestPingedTime": 0,
                                    "latestSuspendedTime": 0,
                                    "nextScheduledRoot": null,
                                    "pendingChildren": null,
                                    "pendingCommitExpirationTime": 0,
                                    "pendingContext": null,
                                    "remainingExpirationTime": 0,
                                  },
                                  "tag": 3,
                                  "treeBaseTime": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={Object {}}
/>,
                                    },
                                    "expirationTime": 0,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": null,
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": null,
                                  },
                                },
                                "selfBaseTime": 0,
                                "sibling": null,
                                "stateNode": WrapperComponent {
                                  "_reactInternalFiber": [Circular],
                                  "_reactInternalInstance": Object {},
                                  "context": Object {},
                                  "props": Object {
                                    "Component": [Function],
                                    "context": null,
                                    "props": Object {},
                                  },
                                  "refs": Object {},
                                  "state": Object {
                                    "context": null,
                                    "mount": true,
                                    "props": Object {},
                                  },
                                  "updater": Object {
                                    "enqueueForceUpdate": [Function],
                                    "enqueueReplaceState": [Function],
                                    "enqueueSetState": [Function],
                                    "isMounted": [Function],
                                  },
                                },
                                "tag": 2,
                                "treeBaseTime": 0,
                                "type": [Function],
                                "updateQueue": null,
                              },
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": 0,
                              "alternate": null,
                              "child": [Circular],
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {},
                              "memoizedState": Object {
                                "deadline": "February 25, 2018",
                                "newDeadline": "",
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {},
                              "ref": null,
                              "return": FiberNode {
                                "_debugID": 4,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": 0,
                                "alternate": null,
                                "child": [Circular],
                                "effectTag": 1,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {},
                                },
                                "memoizedState": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {},
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {},
                                },
                                "ref": null,
                                "return": FiberNode {
                                  "_debugID": 1,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": 0,
                                  "alternate": FiberNode {
                                    "_debugID": 1,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": 0,
                                    "alternate": [Circular],
                                    "child": null,
                                    "effectTag": 0,
                                    "expirationTime": 1,
                                    "firstEffect": null,
                                    "index": 0,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": null,
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": null,
                                    "ref": null,
                                    "return": null,
                                    "selfBaseTime": 0,
                                    "sibling": null,
                                    "stateNode": Object {
                                      "containerInfo": <div>
                                        <div
                                                                                class="App"
                                        >
                                                                                <header
                                                                                                                        class="App__header"
                                                                                >
                                                                                                                        <h1>
                                                                                                                                                                Countdown for
                                                                                                                        </h1>
                                                                                                                        <div
                                                                                                                                                                class="App__event"
                                                                                                                        >
                                                                                                                                                                <p>
                                                                                                                                                                                                        February 25, 2018
                                                                                                                                                                </p>
                                                                                                                        </div>
                                                                                </header>
                                                                                <section
                                                                                                                        class="Clock"
                                                                                >
                                                                                                                        <div
                                                                                                                                                                class="Clock__days"
                                                                                                                        >
                                                                                                                                                                0 day
                                                                                                                        </div>
                                                                                                                        <div
                                                                                                                                                                class="Clock__hours"
                                                                                                                        >
                                                                                                                                                                0 hour
                                                                                                                        </div>
                                                                                                                        <div
                                                                                                                                                                class="Clock__minutes"
                                                                                                                        >
                                                                                                                                                                0 minute
                                                                                                                        </div>
                                                                                                                        <div
                                                                                                                                                                class="Clock__seconds"
                                                                                                                        >
                                                                                                                                                                0 second
                                                                                                                        </div>
                                                                                </section>
                                                                                <section
                                                                                                                        class="Add-Event"
                                                                                >
                                                                                                                        <form
                                                                                                                                                                class="Add-Event__form"
                                                                                                                        >
                                                                                                                                                                <input
                                                                                                                                                                                                        type="text"
                                                                                                                                                                />
                                                                                                                                                                <button>
                                                                                                                                                                                                        Send
                                                                                                                                                                </button>
                                                                                                                        </form>
                                                                                </section>
                                        </div>
</div>,
                                      "context": Object {},
                                      "current": [Circular],
                                      "earliestPendingTime": 0,
                                      "earliestSuspendedTime": 0,
                                      "finishedWork": null,
                                      "firstBatch": null,
                                      "hydrate": false,
                                      "latestPendingTime": 0,
                                      "latestPingedTime": 0,
                                      "latestSuspendedTime": 0,
                                      "nextScheduledRoot": null,
                                      "pendingChildren": null,
                                      "pendingCommitExpirationTime": 0,
                                      "pendingContext": null,
                                      "remainingExpirationTime": 0,
                                    },
                                    "tag": 3,
                                    "treeBaseTime": 0,
                                    "type": null,
                                    "updateQueue": Object {
                                      "baseState": null,
                                      "expirationTime": 1,
                                      "firstCapturedEffect": null,
                                      "firstCapturedUpdate": null,
                                      "firstEffect": null,
                                      "firstUpdate": Object {
                                        "callback": null,
                                        "expirationTime": 1,
                                        "next": null,
                                        "nextEffect": null,
                                        "payload": Object {
                                          "element": <WrapperComponent
                                            Component={[Function]}
                                            context={null}
                                            props={Object {}}
/>,
                                        },
                                        "tag": 0,
                                      },
                                      "lastCapturedEffect": null,
                                      "lastCapturedUpdate": null,
                                      "lastEffect": null,
                                      "lastUpdate": Object {
                                        "callback": null,
                                        "expirationTime": 1,
                                        "next": null,
                                        "nextEffect": null,
                                        "payload": Object {
                                          "element": <WrapperComponent
                                            Component={[Function]}
                                            context={null}
                                            props={Object {}}
/>,
                                        },
                                        "tag": 0,
                                      },
                                    },
                                  },
                                  "child": [Circular],
                                  "effectTag": 32,
                                  "expirationTime": 0,
                                  "firstEffect": [Circular],
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": [Circular],
                                  "memoizedProps": null,
                                  "memoizedState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={Object {}}
/>,
                                  },
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseTime": 0,
                                  "sibling": null,
                                  "stateNode": Object {
                                    "containerInfo": <div>
                                      <div
                                                                            class="App"
                                      >
                                                                            <header
                                                                                                                  class="App__header"
                                                                            >
                                                                                                                  <h1>
                                                                                                                                                        Countdown for
                                                                                                                  </h1>
                                                                                                                  <div
                                                                                                                                                        class="App__event"
                                                                                                                  >
                                                                                                                                                        <p>
                                                                                                                                                                                              February 25, 2018
                                                                                                                                                        </p>
                                                                                                                  </div>
                                                                            </header>
                                                                            <section
                                                                                                                  class="Clock"
                                                                            >
                                                                                                                  <div
                                                                                                                                                        class="Clock__days"
                                                                                                                  >
                                                                                                                                                        0 day
                                                                                                                  </div>
                                                                                                                  <div
                                                                                                                                                        class="Clock__hours"
                                                                                                                  >
                                                                                                                                                        0 hour
                                                                                                                  </div>
                                                                                                                  <div
                                                                                                                                                        class="Clock__minutes"
                                                                                                                  >
                                                                                                                                                        0 minute
                                                                                                                  </div>
                                                                                                                  <div
                                                                                                                                                        class="Clock__seconds"
                                                                                                                  >
                                                                                                                                                        0 second
                                                                                                                  </div>
                                                                            </section>
                                                                            <section
                                                                                                                  class="Add-Event"
                                                                            >
                                                                                                                  <form
                                                                                                                                                        class="Add-Event__form"
                                                                                                                  >
                                                                                                                                                        <input
                                                                                                                                                                                              type="text"
                                                                                                                                                        />
                                                                                                                                                        <button>
                                                                                                                                                                                              Send
                                                                                                                                                        </button>
                                                                                                                  </form>
                                                                            </section>
                                      </div>
</div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "earliestPendingTime": 0,
                                    "earliestSuspendedTime": 0,
                                    "finishedWork": null,
                                    "firstBatch": null,
                                    "hydrate": false,
                                    "latestPendingTime": 0,
                                    "latestPingedTime": 0,
                                    "latestSuspendedTime": 0,
                                    "nextScheduledRoot": null,
                                    "pendingChildren": null,
                                    "pendingCommitExpirationTime": 0,
                                    "pendingContext": null,
                                    "remainingExpirationTime": 0,
                                  },
                                  "tag": 3,
                                  "treeBaseTime": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={Object {}}
/>,
                                    },
                                    "expirationTime": 0,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": null,
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": null,
                                  },
                                },
                                "selfBaseTime": 0,
                                "sibling": null,
                                "stateNode": WrapperComponent {
                                  "_reactInternalFiber": [Circular],
                                  "_reactInternalInstance": Object {},
                                  "context": Object {},
                                  "props": Object {
                                    "Component": [Function],
                                    "context": null,
                                    "props": Object {},
                                  },
                                  "refs": Object {},
                                  "state": Object {
                                    "context": null,
                                    "mount": true,
                                    "props": Object {},
                                  },
                                  "updater": Object {
                                    "enqueueForceUpdate": [Function],
                                    "enqueueReplaceState": [Function],
                                    "enqueueSetState": [Function],
                                    "isMounted": [Function],
                                  },
                                },
                                "tag": 2,
                                "treeBaseTime": 0,
                                "type": [Function],
                                "updateQueue": null,
                              },
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": App {
                                "_handleOnChangeDeadline": [Function],
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "_setNewDeadLine": [Function],
                                "context": Object {},
                                "props": Object {},
                                "refs": Object {},
                                "state": Object {
                                  "deadline": "February 25, 2018",
                                  "newDeadline": "",
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 2,
                              "treeBaseTime": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "_debugSource": Object {
                              "fileName": "/Users/samuelsilva/Documents/projects/react-projects/countdownchamp/src/components/app/App.jsx",
                              "lineNumber": 24,
                            },
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "February 25, 2018",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "February 25, 2018",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": <p>
                              February 25, 2018
</p>,
                            "tag": 5,
                            "treeBaseTime": 0,
                            "type": "p",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <p>
                              February 25, 2018
</p>,
                            "className": "App__event",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <p>
                              February 25, 2018
</p>,
                            "className": "App__event",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": <div
                            class="App__event"
>
                            <p>
                                                        February 25, 2018
                            </p>
</div>,
                          "tag": 5,
                          "treeBaseTime": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "stateNode": <h1>
                          Countdown for
</h1>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "h1",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <h1>
                            Countdown for
</h1>,
                          <div
                            className="App__event"
>
                            <p>
                                                        February 25, 2018
                            </p>
</div>,
                        ],
                        "className": "App__header",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <h1>
                            Countdown for
</h1>,
                          <div
                            className="App__event"
>
                            <p>
                                                        February 25, 2018
                            </p>
</div>,
                        ],
                        "className": "App__header",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": [Circular],
                      "stateNode": <header
                        class="App__header"
>
                        <h1>
                                                Countdown for
                        </h1>
                        <div
                                                class="App__event"
                        >
                                                <p>
                                                                        February 25, 2018
                                                </p>
                        </div>
</header>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "header",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": Array [
                        <header
                          className="App__header"
>
                          <h1>
                                                    Countdown for
                          </h1>
                          <div
                                                    className="App__event"
                          >
                                                    <p>
                                                                              February 25, 2018
                                                    </p>
                          </div>
</header>,
                        <Clock
                          deadline="February 25, 2018"
/>,
                        <section
                          className="Add-Event"
>
                          <form
                                                    className="Add-Event__form"
                          >
                                                    <input
                                                                              onChange={[Function]}
                                                                              type="text"
                                                    />
                                                    <button
                                                                              onClick={[Function]}
                                                    >
                                                                              Send
                                                    </button>
                          </form>
</section>,
                      ],
                      "className": "App",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <header
                          className="App__header"
>
                          <h1>
                                                    Countdown for
                          </h1>
                          <div
                                                    className="App__event"
                          >
                                                    <p>
                                                                              February 25, 2018
                                                    </p>
                          </div>
</header>,
                        <Clock
                          deadline="February 25, 2018"
/>,
                        <section
                          className="Add-Event"
>
                          <form
                                                    className="Add-Event__form"
                          >
                                                    <input
                                                                              onChange={[Function]}
                                                                              type="text"
                                                    />
                                                    <button
                                                                              onClick={[Function]}
                                                    >
                                                                              Send
                                                    </button>
                          </form>
</section>,
                      ],
                      "className": "App",
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 5,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="App"
                                >
                                                                <header
                                                                                                class="App__header"
                                                                >
                                                                                                <h1>
                                                                                                                                Countdown for
                                                                                                </h1>
                                                                                                <div
                                                                                                                                class="App__event"
                                                                                                >
                                                                                                                                <p>
                                                                                                                                                                February 25, 2018
                                                                                                                                </p>
                                                                                                </div>
                                                                </header>
                                                                <section
                                                                                                class="Clock"
                                                                >
                                                                                                <div
                                                                                                                                class="Clock__days"
                                                                                                >
                                                                                                                                0 day
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__hours"
                                                                                                >
                                                                                                                                0 hour
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__minutes"
                                                                                                >
                                                                                                                                0 minute
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__seconds"
                                                                                                >
                                                                                                                                0 second
                                                                                                </div>
                                                                </section>
                                                                <section
                                                                                                class="Add-Event"
                                                                >
                                                                                                <form
                                                                                                                                class="Add-Event__form"
                                                                                                >
                                                                                                                                <input
                                                                                                                                                                type="text"
                                                                                                                                />
                                                                                                                                <button>
                                                                                                                                                                Send
                                                                                                                                </button>
                                                                                                </form>
                                                                </section>
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "treeBaseTime": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "expirationTime": 1,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "tag": 0,
                              },
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "tag": 0,
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="App"
                              >
                                                            <header
                                                                                          class="App__header"
                                                            >
                                                                                          <h1>
                                                                                                                        Countdown for
                                                                                          </h1>
                                                                                          <div
                                                                                                                        class="App__event"
                                                                                          >
                                                                                                                        <p>
                                                                                                                                                      February 25, 2018
                                                                                                                        </p>
                                                                                          </div>
                                                            </header>
                                                            <section
                                                                                          class="Clock"
                                                            >
                                                                                          <div
                                                                                                                        class="Clock__days"
                                                                                          >
                                                                                                                        0 day
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__hours"
                                                                                          >
                                                                                                                        0 hour
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__minutes"
                                                                                          >
                                                                                                                        0 minute
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__seconds"
                                                                                          >
                                                                                                                        0 second
                                                                                          </div>
                                                            </section>
                                                            <section
                                                                                          class="Add-Event"
                                                            >
                                                                                          <form
                                                                                                                        class="Add-Event__form"
                                                                                          >
                                                                                                                        <input
                                                                                                                                                      type="text"
                                                                                                                        />
                                                                                                                        <button>
                                                                                                                                                      Send
                                                                                                                        </button>
                                                                                          </form>
                                                            </section>
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "treeBaseTime": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "expirationTime": 0,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": null,
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": null,
                          },
                        },
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {},
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseTime": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {},
                      "memoizedState": Object {
                        "deadline": "February 25, 2018",
                        "newDeadline": "",
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {},
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                                                class="App"
                                >
                                                                <header
                                                                                                class="App__header"
                                                                >
                                                                                                <h1>
                                                                                                                                Countdown for
                                                                                                </h1>
                                                                                                <div
                                                                                                                                class="App__event"
                                                                                                >
                                                                                                                                <p>
                                                                                                                                                                February 25, 2018
                                                                                                                                </p>
                                                                                                </div>
                                                                </header>
                                                                <section
                                                                                                class="Clock"
                                                                >
                                                                                                <div
                                                                                                                                class="Clock__days"
                                                                                                >
                                                                                                                                0 day
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__hours"
                                                                                                >
                                                                                                                                0 hour
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__minutes"
                                                                                                >
                                                                                                                                0 minute
                                                                                                </div>
                                                                                                <div
                                                                                                                                class="Clock__seconds"
                                                                                                >
                                                                                                                                0 second
                                                                                                </div>
                                                                </section>
                                                                <section
                                                                                                class="Add-Event"
                                                                >
                                                                                                <form
                                                                                                                                class="Add-Event__form"
                                                                                                >
                                                                                                                                <input
                                                                                                                                                                type="text"
                                                                                                                                />
                                                                                                                                <button>
                                                                                                                                                                Send
                                                                                                                                </button>
                                                                                                </form>
                                                                </section>
                                </div>
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "treeBaseTime": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "expirationTime": 1,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "tag": 0,
                              },
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
/>,
                                },
                                "tag": 0,
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                                            class="App"
                              >
                                                            <header
                                                                                          class="App__header"
                                                            >
                                                                                          <h1>
                                                                                                                        Countdown for
                                                                                          </h1>
                                                                                          <div
                                                                                                                        class="App__event"
                                                                                          >
                                                                                                                        <p>
                                                                                                                                                      February 25, 2018
                                                                                                                        </p>
                                                                                          </div>
                                                            </header>
                                                            <section
                                                                                          class="Clock"
                                                            >
                                                                                          <div
                                                                                                                        class="Clock__days"
                                                                                          >
                                                                                                                        0 day
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__hours"
                                                                                          >
                                                                                                                        0 hour
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__minutes"
                                                                                          >
                                                                                                                        0 minute
                                                                                          </div>
                                                                                          <div
                                                                                                                        class="Clock__seconds"
                                                                                          >
                                                                                                                        0 second
                                                                                          </div>
                                                            </section>
                                                            <section
                                                                                          class="Add-Event"
                                                            >
                                                                                          <form
                                                                                                                        class="Add-Event__form"
                                                                                          >
                                                                                                                        <input
                                                                                                                                                      type="text"
                                                                                                                        />
                                                                                                                        <button>
                                                                                                                                                      Send
                                                                                                                        </button>
                                                                                          </form>
                                                            </section>
                              </div>
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "treeBaseTime": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
/>,
                            },
                            "expirationTime": 0,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": null,
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": null,
                          },
                        },
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {},
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseTime": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": App {
                        "_handleOnChangeDeadline": [Function],
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "_setNewDeadLine": [Function],
                        "context": Object {},
                        "props": Object {},
                        "refs": Object {},
                        "state": Object {
                          "deadline": "February 25, 2018",
                          "newDeadline": "",
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseTime": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="App"
>
                      <header
                                            class="App__header"
                      >
                                            <h1>
                                                                  Countdown for
                                            </h1>
                                            <div
                                                                  class="App__event"
                                            >
                                                                  <p>
                                                                                        February 25, 2018
                                                                  </p>
                                            </div>
                      </header>
                      <section
                                            class="Clock"
                      >
                                            <div
                                                                  class="Clock__days"
                                            >
                                                                  0 day
                                            </div>
                                            <div
                                                                  class="Clock__hours"
                                            >
                                                                  0 hour
                                            </div>
                                            <div
                                                                  class="Clock__minutes"
                                            >
                                                                  0 minute
                                            </div>
                                            <div
                                                                  class="Clock__seconds"
                                            >
                                                                  0 second
                                            </div>
                      </section>
                      <section
                                            class="Add-Event"
                      >
                                            <form
                                                                  class="Add-Event__form"
                                            >
                                                                  <input
                                                                                        type="text"
                                                                  />
                                                                  <button>
                                                                                        Send
                                                                  </button>
                                            </form>
                      </section>
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <section
                    class="Add-Event"
>
                    <form
                                        class="Add-Event__form"
                    >
                                        <input
                                                            type="text"
                                        />
                                        <button>
                                                            Send
                                        </button>
                    </form>
</section>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "section",
                  "updateQueue": null,
                },
                "stateNode": [Circular],
                "tag": 2,
                "treeBaseTime": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "_reactInternalInstance": Object {},
              "context": Object {},
              "intervalId": 2,
              "props": Object {
                "deadline": "February 25, 2018",
              },
              "refs": Object {},
              "state": Object {
                "days": 0,
                "deadline": "",
                "hours": 0,
                "minutes": 0,
                "seconds": 0,
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "deadline": "February 25, 2018",
            },
            "ref": null,
            "rendered": Object {
              "instance": <section
                class="Clock"
>
                <div
                                class="Clock__days"
                >
                                0 day
                </div>
                <div
                                class="Clock__hours"
                >
                                0 hour
                </div>
                <div
                                class="Clock__minutes"
                >
                                0 minute
                </div>
                <div
                                class="Clock__seconds"
                >
                                0 second
                </div>
</section>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="Clock__days"
>
                    0 day
</div>,
                  <div
                    className="Clock__hours"
>
                    0 hour
</div>,
                  <div
                    className="Clock__minutes"
>
                    0 minute
</div>,
                  <div
                    className="Clock__seconds"
>
                    0 second
</div>,
                ],
                "className": "Clock",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <div
                    class="Clock__days"
>
                    0 day
</div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "0 day",
                    "className": "Clock__days",
                  },
                  "ref": null,
                  "rendered": Array [
                    "0 day",
                  ],
                  "type": "div",
                },
                Object {
                  "instance": <div
                    class="Clock__hours"
>
                    0 hour
</div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "0 hour",
                    "className": "Clock__hours",
                  },
                  "ref": null,
                  "rendered": Array [
                    "0 hour",
                  ],
                  "type": "div",
                },
                Object {
                  "instance": <div
                    class="Clock__minutes"
>
                    0 minute
</div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "0 minute",
                    "className": "Clock__minutes",
                  },
                  "ref": null,
                  "rendered": Array [
                    "0 minute",
                  ],
                  "type": "div",
                },
                Object {
                  "instance": <div
                    class="Clock__seconds"
>
                    0 second
</div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "0 second",
                    "className": "Clock__seconds",
                  },
                  "ref": null,
                  "rendered": Array [
                    "0 second",
                  ],
                  "type": "div",
                },
              ],
              "type": "section",
            },
            "type": [Function],
          },
          Object {
            "instance": <section
              class="Add-Event"
>
              <form
                            class="Add-Event__form"
              >
                            <input
                                          type="text"
                            />
                            <button>
                                          Send
                            </button>
              </form>
</section>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <form
                className="Add-Event__form"
>
                <input
                                onChange={[Function]}
                                type="text"
                />
                <button
                                onClick={[Function]}
                >
                                Send
                </button>
</form>,
              "className": "Add-Event",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <form
                  class="Add-Event__form"
>
                  <input
                                    type="text"
                  />
                  <button>
                                    Send
                  </button>
</form>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <input
                      onChange={[Function]}
                      type="text"
/>,
                    <button
                      onClick={[Function]}
>
                      Send
</button>,
                  ],
                  "className": "Add-Event__form",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <input
                      type="text"
/>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "onChange": [Function],
                      "type": "text",
                    },
                    "ref": null,
                    "rendered": Array [
                      undefined,
                    ],
                    "type": "input",
                  },
                  Object {
                    "instance": <button>
                      Send
</button>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Send",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": Array [
                      "Send",
                    ],
                    "type": "button",
                  },
                ],
                "type": "form",
              },
            ],
            "type": "section",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
