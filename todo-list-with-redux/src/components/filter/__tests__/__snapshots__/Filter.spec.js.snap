// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Filter /> should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Filter />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h2
          data-enzyme-id="filter-title"
        >
          Filter by:
        </h2>,
        Array [
          <button
            className="btn"
            data-enzyme-id="filter-button-All"
            disabled={false}
            onClick={[Function]}
          >
            All
          </button>,
          <button
            className="btn"
            data-enzyme-id="filter-button-Completed"
            disabled={false}
            onClick={[Function]}
          >
            Completed
          </button>,
          <button
            className="btn"
            data-enzyme-id="filter-button-Todo"
            disabled={false}
            onClick={[Function]}
          >
            Todo
          </button>,
        ],
      ],
      "data-enzyme-id": "filter",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Filter by:",
          "data-enzyme-id": "filter-title",
        },
        "ref": null,
        "rendered": "Filter by:",
        "type": "h2",
      },
      Object {
        "instance": null,
        "key": "visibilityFilter:SHOW_ALL",
        "nodeType": "host",
        "props": Object {
          "children": "All",
          "className": "btn",
          "data-enzyme-id": "filter-button-All",
          "disabled": false,
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "All",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": "visibilityFilter:SHOW_COMPLETED",
        "nodeType": "host",
        "props": Object {
          "children": "Completed",
          "className": "btn",
          "data-enzyme-id": "filter-button-Completed",
          "disabled": false,
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Completed",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": "visibilityFilter:SHOW_ACTIVE",
        "nodeType": "host",
        "props": Object {
          "children": "Todo",
          "className": "btn",
          "data-enzyme-id": "filter-button-Todo",
          "disabled": false,
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Todo",
        "type": "button",
      },
    ],
    "type": "section",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h2
            data-enzyme-id="filter-title"
          >
            Filter by:
          </h2>,
          Array [
            <button
              className="btn"
              data-enzyme-id="filter-button-All"
              disabled={false}
              onClick={[Function]}
            >
              All
            </button>,
            <button
              className="btn"
              data-enzyme-id="filter-button-Completed"
              disabled={false}
              onClick={[Function]}
            >
              Completed
            </button>,
            <button
              className="btn"
              data-enzyme-id="filter-button-Todo"
              disabled={false}
              onClick={[Function]}
            >
              Todo
            </button>,
          ],
        ],
        "data-enzyme-id": "filter",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Filter by:",
            "data-enzyme-id": "filter-title",
          },
          "ref": null,
          "rendered": "Filter by:",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": "visibilityFilter:SHOW_ALL",
          "nodeType": "host",
          "props": Object {
            "children": "All",
            "className": "btn",
            "data-enzyme-id": "filter-button-All",
            "disabled": false,
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "All",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": "visibilityFilter:SHOW_COMPLETED",
          "nodeType": "host",
          "props": Object {
            "children": "Completed",
            "className": "btn",
            "data-enzyme-id": "filter-button-Completed",
            "disabled": false,
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Completed",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": "visibilityFilter:SHOW_ACTIVE",
          "nodeType": "host",
          "props": Object {
            "children": "Todo",
            "className": "btn",
            "data-enzyme-id": "filter-button-Todo",
            "disabled": false,
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Todo",
          "type": "button",
        },
      ],
      "type": "section",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
